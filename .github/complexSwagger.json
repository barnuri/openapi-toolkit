{
    "info": {
        "version": "v2"
    },
    "openapi": "3.0.0",
    "paths": {
        "/v2/accesslease/aws": {
            "post": {
                "tags": [
                    "AccessLease"
                ],
                "summary": "Create a new Access Lease for an AWS service",
                "operationId": "AccessLease_AcquireAwsLease",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AwsAccessLeasePostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AwsAccessLeasePostViewModel"
                            }
                        }
                    },
                    "description": "details for the lease",
                    "required": true
                }
            }
        },
        "/v2/AccessLease": {
            "get": {
                "tags": [
                    "AccessLease"
                ],
                "summary": "Get a list of all active Access Leases",
                "operationId": "AccessLease_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AccessLeasesGroupedViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AccessLease/{id}": {
            "delete": {
                "tags": [
                    "AccessLease"
                ],
                "summary": "Terminate an Access Lease",
                "operationId": "AccessLease_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the id of the lease to terminate",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/access-lease-invitation/access/{invitationId}": {
            "get": {
                "tags": [
                    "AccessLeaseInvitation"
                ],
                "summary": "Get a specific invitation",
                "operationId": "AccessLeaseInvitation_AccessInvitation",
                "parameters": [
                    {
                        "name": "invitationId",
                        "in": "path",
                        "description": "the id of the invitation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AccessLeaseInvitation": {
            "get": {
                "tags": [
                    "AccessLeaseInvitation"
                ],
                "summary": "Get a list of pending invitations (invitations not yet activated)",
                "description": "These are invitations that have not yet been activated",
                "operationId": "AccessLeaseInvitation_GetPendingInvitations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AccessLeaseInvitationViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AccessLeaseInvitation"
                ],
                "summary": "Create a new Lease Invitation",
                "operationId": "AccessLeaseInvitation_CreateInvitationAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AccessLeaseInvitationViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AccessLeaseInvitationViewModel"
                            }
                        }
                    },
                    "description": "lease invitation details",
                    "required": true
                }
            }
        },
        "/v2/AccessLeaseInvitation/{id}": {
            "delete": {
                "tags": [
                    "AccessLeaseInvitation"
                ],
                "summary": "Delete a lease invitation",
                "operationId": "AccessLeaseInvitation_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the id of the lease to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/account/managing": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "gets the MSP account who manages this one. returns error (404) if no managing account (regular  account)",
                "operationId": "Account_GetManagingAccount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-ManagingAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/account/resetAll": {
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_ResetAllCloudAccountsMissingPermissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/account/stats": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_GetAccountStats",
                "parameters": [
                    {
                        "name": "dbOnly",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AccountStatsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/account/plan-contact-details": {
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "",
                "operationId": "Account_Plan",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Licensing-UpdatePlanContactDetailsModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Licensing-UpdatePlanContactDetailsModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/account/plan": {
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "",
                "operationId": "Account_Plan",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Account_PlanPlan"
                }
            }
        },
        "/v2/account/azuremarketplace": {
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_ActivateAzureMarketplace",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Models-AccountMarketplacePutViewModel"
                }
            }
        },
        "/v2/account/marketplace": {
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_ActivateMarketplace",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Models-AccountMarketplacePutViewModel"
                }
            }
        },
        "/v2/account/name": {
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_PutName",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Account_PlanPlan"
                }
            }
        },
        "/v2/account/UseDefaultExternalId": {
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_UseDefaultExternalId",
                "parameters": [
                    {
                        "name": "useDefaultKey",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/account/AllowEditExternalId": {
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_AllowEditExternalId",
                "parameters": [
                    {
                        "name": "allowEditKey",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/account/owner": {
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "sets a user as an account owner",
                "operationId": "Account_PutOwnerAsync",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account-AccountOwnerViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Account-AccountOwnerViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/account/extendtrial": {
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_ExtendTrial",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/account/sso": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_GetSSO",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AccountSSOConfigViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_PutSSO",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AccountSSOConfigViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AccountSSOConfigViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_DeleteSSO",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/account/cross-account-identifier": {
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_PutCrossAccountIdentifier",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CrossAccountIdentifierViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/account/daily-usage": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_GetUsage",
                "parameters": [
                    {
                        "name": "fromDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Account-AccountUsageViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/account/exceeding-resources": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_GetExceedingResources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-ExceedingLicenseViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/account/license": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_GetAccountLicense",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-LicenseViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/account/max-invalid-password-attempts": {
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_PutMaxInvalidPasswordAttemptsAsync",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account-MaxInvalidPasswordAttemptsViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Account-MaxInvalidPasswordAttemptsViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/account/session-idle-timeout-minutes": {
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Set the session idle timeout",
                "operationId": "Account_PutSessionIdleTimeoutMinutesAsync",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account-SessionIdleTimeoutMinutesViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Account-SessionIdleTimeoutMinutesViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/account/email-filters": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_GetAccountEmailFilters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-AccountEmailFiltersDescriptor"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_UpdateEmailFilters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-AccountEmailFiltersDescriptor"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-AccountEmailFiltersDescriptor"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_DeleteAccountEmailFilters",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/account": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/accountlimitation/clarityentriescount": {
            "put": {
                "tags": [
                    "AccountLimitation"
                ],
                "operationId": "AccountLimitation_ClarityEntriesCount",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AccountPollingInterval/{id}": {
            "put": {
                "tags": [
                    "AccountPollingInterval"
                ],
                "operationId": "AccountPollingInterval_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Services-PollingInterval-UpdatePollingIntervalRequestViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Services-PollingInterval-UpdatePollingIntervalRequestViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "AccountPollingInterval"
                ],
                "operationId": "AccountPollingInterval_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AccountPollingInterval": {
            "get": {
                "tags": [
                    "AccountPollingInterval"
                ],
                "operationId": "AccountPollingInterval_GetAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountPollingInterval-PollingIntervalViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AccountPollingInterval"
                ],
                "operationId": "AccountPollingInterval_Add",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountPollingInterval-CreatePollingIntervalViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountPollingInterval-CreatePollingIntervalViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/account-registration/invite": {
            "post": {
                "tags": [
                    "AccountRegistration"
                ],
                "operationId": "AccountRegistration_PostInvite",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistration-AccountRegistrationWebViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistration-AccountRegistrationWebViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/account-registration/verify/{registrationRequestId}": {
            "get": {
                "tags": [
                    "AccountRegistration"
                ],
                "operationId": "AccountRegistration_GetVerify",
                "parameters": [
                    {
                        "name": "registrationRequestId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountRegistration-AccountRegistrationGetViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/account-registration/sign-up": {
            "post": {
                "tags": [
                    "AccountRegistration"
                ],
                "operationId": "AccountRegistration_PostSignUp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountRegistration-AccountRegistrationGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Account-AccountRegistrationSignUpViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Account-AccountRegistrationSignUpViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/AccountTrust/assumable-roles": {
            "get": {
                "tags": [
                    "AccountTrust"
                ],
                "summary": "Get a list of objects that represent a trusted account and its assumebale roles",
                "operationId": "AccountTrust_GetAssumableRoles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Account-AccountTrustAssumableRolesViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AccountTrust": {
            "get": {
                "tags": [
                    "AccountTrust"
                ],
                "summary": "Get a list of accounts which are trusted by or trust this account according to the given \"trustDirection\"",
                "operationId": "AccountTrust_Get",
                "parameters": [
                    {
                        "name": "trustDirection",
                        "in": "query",
                        "description": "Determines whether the accounts result list are the trusted/trustee accounts",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MyAccountIsTarget",
                                "MyAccountIsSource"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Account-AccountTrustViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AccountTrust"
                ],
                "summary": "Create a new account trust where this account is the target based on the given \"SourceAccountId\", i.e. this account trusts the source account",
                "operationId": "AccountTrust_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account-AccountTrustPostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Account-AccountTrustPostViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/AccountTrust/{id}": {
            "put": {
                "tags": [
                    "AccountTrust"
                ],
                "summary": "Update the account trust description or restrictions",
                "operationId": "AccountTrust_Put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account trust id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account-AccountTrustPutViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Account-AccountTrustPutViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "AccountTrust"
                ],
                "summary": "Delete an account trust",
                "operationId": "AccountTrust_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The trust id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/Agent/{id}/sec-groups": {
            "post": {
                "tags": [
                    "Agent"
                ],
                "operationId": "Agent_AttachGroupToAgent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentSecurityGroupAttachDetachViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentSecurityGroupAttachDetachViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Agent"
                ],
                "operationId": "Agent_DetachGroupFromAgent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentSecurityGroupAttachDetachViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentSecurityGroupAttachDetachViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/Agent/{id}/sec-groups": {
            "post": {
                "tags": [
                    "Agent"
                ],
                "operationId": "Agent_AttachGroupToAgent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentSecurityGroupAttachDetachViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentSecurityGroupAttachDetachViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Agent"
                ],
                "operationId": "Agent_DetachGroupFromAgent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentSecurityGroupAttachDetachViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentSecurityGroupAttachDetachViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/Agent/{id}/start-fim-scan": {
            "post": {
                "tags": [
                    "Agent"
                ],
                "operationId": "Agent_StartFIMScan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/Agent/{id}/start-fim-scan": {
            "post": {
                "tags": [
                    "Agent"
                ],
                "operationId": "Agent_StartFIMScan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/Agent": {
            "get": {
                "tags": [
                    "Agent"
                ],
                "operationId": "Agent_GetAll",
                "parameters": [
                    {
                        "name": "forAccess",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AgentViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Agent/{id}": {
            "get": {
                "tags": [
                    "Agent"
                ],
                "operationId": "Agent_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AgentViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Agent"
                ],
                "operationId": "Agent_DeleteAgent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/workload/agentless/aws/accounts/{id}/enable": {
            "post": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Enable AWP AWS account",
                "operationId": "Agentless_EnableAwsAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shouldCreatePolicy",
                        "in": "query",
                        "description": "A flag indicating weather to create a default policy",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAwsAccountRequestBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAwsAccountRequestBody"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/workload/agentless/azure/accounts/{id}/enable": {
            "post": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Enable AWP Azure account",
                "operationId": "Agentless_EnableAzureAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/subscription Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shouldCreatePolicy",
                        "in": "query",
                        "description": "A flag indicating weather to create a default policy",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAzureAccountRequestBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAzureAccountRequestBody"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/workload/agentless/aws/accounts/{id}/enableCentralizedAccount": {
            "post": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Add AWP AWS Centralized account",
                "operationId": "Agentless_AddAwsCentralizedAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAwsCentralizedAccountRequestBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAwsCentralizedAccountRequestBody"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/workload/agentless/azure/accounts/{id}/enableCentralizedAccount": {
            "post": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Add AWP Azure Centralized account",
                "operationId": "Agentless_AddAzureCentralizedAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAzureCentralizedAccountRequestBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAzureCentralizedAccountRequestBody"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/workload/agentless/aws/accounts/{id}/enableSubAccount": {
            "post": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Add AWP AWS Sub account",
                "operationId": "Agentless_AddAwsSubAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shouldCreatePolicy",
                        "in": "query",
                        "description": "A flag indicating weather to create a default policy",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAwsSubAccountRequestBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAwsSubAccountRequestBody"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/workload/agentless/azure/accounts/{id}/enableSubAccount": {
            "post": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Add AWP Azure Sub account",
                "operationId": "Agentless_AddAzureSubAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shouldCreatePolicy",
                        "in": "query",
                        "description": "A flag indicating weather to create a default policy",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAzureSubAccountRequestBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AddAgentlessAzureSubAccountRequestBody"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/workload/agentless/{cloudProvider}/accounts/states": {
            "get": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Get current AWP accounts states",
                "operationId": "Agentless_GetAccountsStates",
                "parameters": [
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "description": "Cloud provider",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Agentless-AccountStateViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/agentless/{cloudProvider}/accounts/states/{id}": {
            "get": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Get AWP account state",
                "operationId": "Agentless_GetAccountState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "description": "Cloud provider",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agentless-AccountStateViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/agentless/{cloudProvider}/accounts/{id}": {
            "get": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Get AWP account scanner configuration",
                "operationId": "Agentless_GetAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "description": "Cloud provider",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agentless-AccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/agentless/{cloudProvider}/accounts/{id}/settings": {
            "patch": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Modify a single AWP account scanner settings",
                "operationId": "Agentless_ModifyAccountSettings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "description": "Cloud provider",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AgentlessAccountSettingsViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AgentlessAccountSettingsViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/workload/agentless/aws/accounts/{id}": {
            "delete": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Disable AWS account",
                "operationId": "Agentless_DisableAwsAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forceDelete",
                        "in": "query",
                        "description": "If 'True', AWP will be disabled and the API will skip validating resource removal from the customer account.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/agentless/azure/accounts/{id}": {
            "delete": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Disable Azure account",
                "operationId": "Agentless_DisableAzureAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/agentless/aws/instances/{id}": {
            "get": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Get AWP workload scan details",
                "operationId": "Agentless_GetWorkload",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Instance Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agentless-AgentlessInstanceViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/agentless/aws/accounts/{id}/generate-onboarding-data": {
            "post": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Generate Aws onboarding data",
                "operationId": "Agentless_GenerateAawsOnboardingData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agentless-AgentlessAwsOnboardingDataViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-GenerateAgentlessAwsOnboardingDataRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-GenerateAgentlessAwsOnboardingDataRequest"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/workload/agentless/azure/accounts/{id}/generate-onboarding-data": {
            "post": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Generate Azure onboarding data",
                "operationId": "Agentless_GenerateAzureOnboardingData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agentless-AgentlessAzureOnboardingDataViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-GenerateAgentlessAzureOnboardingDataRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-GenerateAgentlessAzureOnboardingDataRequest"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/workload/agentless/azure/accounts/{id}/offboarding": {
            "get": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Get Azure offboarding data",
                "operationId": "Agentless_GetAzureOffboardingData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "centralizedId",
                        "in": "query",
                        "description": "In case of inAccountSub, the account id of the centralized account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agentless-AgentlessAzureOffboardingDataViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/agentless/{cloudProvider}/accounts/{id}/onboarding/checkForUpdate": {
            "get": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Check if the AWP account needs to be updated",
                "operationId": "Agentless_CheckForOnboardingUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "description": "Cloud provider",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agentless-AgentlessAwsValidateStackDataViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/agentless/azure/accounts/{id}/centralizedAccounts": {
            "get": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Get Azure centralized accounts data",
                "operationId": "Agentless_GetAzureCentralizedAccounts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cloud account Id (CloudGuard/external Id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Agentless-CentralizedAzureAccountViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/agentless/accountSettings": {
            "get": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Get all AWP accounts scanner settings",
                "operationId": "Agentless_GetTenantSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agentless-AgentlessSettingsViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Agentless"
                ],
                "summary": "Modify all AWP accounts scanner settings",
                "operationId": "Agentless_ModifyTenantSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AgentlessSettingsViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Agentless-AgentlessSettingsViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/alert/severity": {
            "put": {
                "tags": [
                    "Alert"
                ],
                "operationId": "Alert_UpdateAlertSeverity",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AlertsPartialUpdateViewModel_Falconetix-Model-WarningSeverity_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AlertsPartialUpdateViewModel_Falconetix-Model-WarningSeverity_"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/alert/acknowledged": {
            "put": {
                "tags": [
                    "Alert"
                ],
                "operationId": "Alert_UpdateAlertAcknowledged",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AlertsPartialUpdateViewModel_System-Boolean_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AlertsPartialUpdateViewModel_System-Boolean_"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/alert/comment": {
            "put": {
                "tags": [
                    "Alert"
                ],
                "operationId": "Alert_UpdateAlertComment",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AlertsPartialUpdateViewModel_System-String_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AlertsPartialUpdateViewModel_System-String_"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/alert/count": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "operationId": "Alert_GetCount",
                "parameters": [
                    {
                        "name": "srl",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AlertsCountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/alert/data": {
            "post": {
                "tags": [
                    "Alert"
                ],
                "operationId": "Alert_GetAlertsDataAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-GetDataParms_System-Object_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-GetDataParms_System-Object_"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/alert/export": {
            "post": {
                "tags": [
                    "Alert"
                ],
                "operationId": "Alert_TriggerExportAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "uuid",
                                    "type": "string",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/alert/export/{workflowGuid}/status": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "operationId": "Alert_GetExportStatusAsync",
                "parameters": [
                    {
                        "name": "workflowGuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alerts-ExportStatusModel-ExportStatusInfo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/alert/export/{workflowGuid}/data": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "operationId": "Alert_GetExportedDataUrlAsync",
                "parameters": [
                    {
                        "name": "workflowGuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Alert": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "summary": "Get multiple alerts.\r\nBy default it will also return acknowledged alerts and FIM alerts.\r\nTo reduce the returned set - use a filter.",
                "operationId": "Alert_Get",
                "parameters": [
                    {
                        "name": "filter.getFim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filter.getAcknowledged",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filter.alertTypes",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filter.sgExternalId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AlertViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Alert/{id}": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "summary": "Get a single alert by Id",
                "operationId": "Alert_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AlertViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Alert"
                ],
                "operationId": "Alert_Patch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AlertPatchViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AlertPatchViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/AlibabaCloudAccount/{id}/DeleteForce": {
            "delete": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Delete an Alibaba account from a  account (the Alibaba account is not deleted from Alibaba) and linked entities",
                "operationId": "AlibabaCloudAccount_DeleteForceAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the  account id for the account or the Subscription id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AlibabaCloudAccount/{cloudAccountId}/account-stats": {
            "get": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Gets Cloud Account network statistics on cloud account page",
                "operationId": "AlibabaCloudAccount_GetCloudAccountStatsAsync",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": "The Id of the Alibaba cloud account",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "withData",
                        "in": "query",
                        "description": "Include raw data of networks, security groups and vms, default = false",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaAccountStatsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AlibabaCloudAccount/MissingPermissions": {
            "get": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Get a list of missing permissions (needed by  to manage the accounts) for all Alibaba accounts in ",
                "operationId": "AlibabaCloudAccount_GetMissingPermissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Shared-Permissions-CloudAccountMissingPermissionsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AlibabaCloudAccount/{id}/MissingPermissions": {
            "get": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Get a list of missing permissions for a specific account. These permissions are needed by  to manage accounts.",
                "operationId": "AlibabaCloudAccount_GetMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "showIgnored",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shared-Permissions-CloudAccountMissingPermissionsIgnorableViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Get a list of missing permissions for a specific account. These are permissions needed by  to manage accounts.",
                "operationId": "AlibabaCloudAccount_UpdateIgnorableMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CloudAccountId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel"
                                }
                            }
                        }
                    },
                    "description": "List of permissions to set ignore or restore flag to",
                    "required": true
                }
            }
        },
        "/v2/AlibabaCloudAccount/{id}/MissingPermissions/EntityType": {
            "get": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Get missing permissions for a specific entity type for a specific Alibaba Cloud account",
                "operationId": "AlibabaCloudAccount_GetMissingPermissionsByEntityTypeAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The  Alibaba Cloud Account Id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "entityType",
                        "in": "query",
                        "description": "The entity type for which to get permission issues",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subType",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AlibabaCloudAccount/{id}/MissingPermissions/Reset": {
            "put": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Reset (re-validate) a Alibaba Cloud account credentials in . \r\nWill cause all entities to retry fetching from the Alibaba cloud account.",
                "operationId": "AlibabaCloudAccount_ResetMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AlibabaCloudAccount/{id}/AccountName": {
            "put": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Update a Alibaba Cloud account name (as it appears in )",
                "operationId": "AlibabaCloudAccount_UpdateAccountNameAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaAccountNameViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaAccountNameViewModel"
                            }
                        }
                    },
                    "description": "the updated name as it will appear in ",
                    "required": true
                }
            }
        },
        "/v2/AlibabaCloudAccount/{id}/Credentials": {
            "put": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "operationId": "AlibabaCloudAccount_UpdateAlibabaCloudAccountCredentialsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaAccountCredentialsViewPostModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaAccountCredentialsViewPostModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/AlibabaCloudAccount/{id}/SyncNow": {
            "post": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "operationId": "AlibabaCloudAccount_SyncNow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AlibabaCloudAccount/{id}/organizationalUnit": {
            "put": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Update the ID of the Organizational Unit that this cloud account will be attached to.\r\nUse 'null' for the root organizational unit",
                "operationId": "AlibabaCloudAccount_UpdateOrganizationalId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The  Guid ID of the Alibaba cloud account",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                            }
                        }
                    },
                    "description": "The Guid ID of the Organizational Unit to attach to. Use 'null' to attach to the root Organizational Unit",
                    "required": true
                }
            }
        },
        "/v2/AlibabaCloudAccount/organizationalUnit/move": {
            "put": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Detach cloud accounts from an Organizational unit and attach them to another Organizational unit.\r\nUse 'null' for root organizational unit",
                "operationId": "AlibabaCloudAccount_MoveCloudAccountsToOrganizationalUnit",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-MoveOrganizationalUnitViewModel"
                }
            }
        },
        "/v2/AlibabaCloudAccount/organizationalUnit/moveAll": {
            "put": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Detach all cloud accounts from their current organizational unit and attach them to a new one. Default is to root organizational unit",
                "operationId": "AlibabaCloudAccount_MoveAllCloudAccountsToOrganizationalUnit",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel2"
                }
            }
        },
        "/v2/AlibabaCloudAccount/organizationalUnit/attach": {
            "post": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Attach several cloud accounts to a specific Organizational Unit. User 'null' as root Organizational Unit as target",
                "operationId": "AlibabaCloudAccount_PostAttachMulti",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-AttachCloudAccountsViewModel"
                }
            }
        },
        "/v2/AlibabaCloudAccount": {
            "get": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Get a list of all Alibaba cloud accounts",
                "operationId": "AlibabaCloudAccount_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaCloudAccountGetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Add (onboard) a new Alibaba cloud account to ",
                "operationId": "AlibabaCloudAccount_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaCloudAccountPostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaCloudAccountPostViewModel"
                            }
                        }
                    },
                    "description": "details for the new account",
                    "required": true
                }
            }
        },
        "/v2/AlibabaCloudAccount/{id}": {
            "get": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Get details for a specific Alibaba Cloud Account",
                "operationId": "AlibabaCloudAccount_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the Alibaba cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AlibabaCloudAccount"
                ],
                "summary": "Delete an Alibaba account from a  account (the Alibaba account is not deleted from Alibaba)",
                "operationId": "AlibabaCloudAccount_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the  account id for the account or the Subscription id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/application/menu": {
            "get": {
                "tags": [
                    "Application"
                ],
                "operationId": "Application_Menu",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AppMenuViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/application/d9awsaccount": {
            "get": {
                "tags": [
                    "Application"
                ],
                "operationId": "Application_D9AccountInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AppD9AccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/application/intercom": {
            "get": {
                "tags": [
                    "Application"
                ],
                "operationId": "Application_GetIntercomData",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AppIntercomViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/assessment/bundleV2": {
            "post": {
                "tags": [
                    "Assessment"
                ],
                "summary": "Run an assessment on a cloud environment using a bundle (V2)",
                "operationId": "Assessment_RunBundleV2Async",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Assessment-AssessmentResultViewModel_Newtonsoft-Json-Linq-JRaw_"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Assessment-AssessmentBundleRequestViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Assessment-AssessmentBundleRequestViewModel"
                            }
                        }
                    },
                    "description": "The assessment request block",
                    "required": true
                }
            }
        },
        "/v2/AssessmentHistory/bundle": {
            "get": {
                "tags": [
                    "AssessmentHistory"
                ],
                "operationId": "AssessmentHistory_GetResults",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "lastTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryResultViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistory/view": {
            "get": {
                "tags": [
                    "AssessmentHistory"
                ],
                "operationId": "AssessmentHistory_GetResultViewsAsync",
                "parameters": [
                    {
                        "name": "lastTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryViewResultViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistory": {
            "get": {
                "tags": [
                    "AssessmentHistory"
                ],
                "operationId": "AssessmentHistory_GetResults",
                "parameters": [
                    {
                        "name": "lastTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryResultViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AssessmentHistory"
                ],
                "operationId": "AssessmentHistory_DeleteHistoryAsync",
                "parameters": [
                    {
                        "name": "historyId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AssessmentHistory/{id}": {
            "get": {
                "tags": [
                    "AssessmentHistory"
                ],
                "operationId": "AssessmentHistory_GetHistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryResultViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistoryV2/bundleResults": {
            "get": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get most recent assessment results for a specific bundle, for a list of cloud accounts",
                "operationId": "AssessmentHistoryV2_GetBundleResults",
                "parameters": [
                    {
                        "name": "bundleId",
                        "in": "query",
                        "description": "the bundle used for the assessment (for all the accounts in the list)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "cloudAccountIds",
                        "in": "query",
                        "description": "comma separated list of cloud accounts",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromTime",
                        "in": "query",
                        "description": "the time the assessment was done",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "epsilonInMinutes",
                        "in": "query",
                        "description": "period of time (in min) back from the fromTime to look for results; only results in this range will be returned",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "query",
                        "description": "an optional request id; the same value will appear in the response",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryResultV2ViewModel_Newtonsoft-Json-Linq-JRaw_"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistoryV2/assessmentTrendOrganizationalUnit": {
            "get": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get the assessment trend for the selected time range (maximum of 93 days)",
                "operationId": "AssessmentHistoryV2_GetAssessmentTrendOrganizationalUnit",
                "parameters": [
                    {
                        "name": "rulesetId",
                        "in": "query",
                        "description": "Ruleset ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "organizationalUnitId",
                        "in": "query",
                        "description": "Organizational Unit ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From Date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "To Date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Compliance-AssessmentTrend-AssessmentTrendItemViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistoryV2/assessmentTrendV2": {
            "get": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get the assessment trend for the selected time range (maximum of 93 days)",
                "operationId": "AssessmentHistoryV2_GetAssessmentTrendV2",
                "parameters": [
                    {
                        "name": "bundleId",
                        "in": "query",
                        "description": "Bundle ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "Cloud Account ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From Date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "To Date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Compliance-AssessmentTrend-AssessmentTrendItemViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistoryV2/LastAssessmentResults/view": {
            "post": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get last assessment results for selected cloud accounts and bundles. Does not return details for the tests or test entities.",
                "operationId": "AssessmentHistoryV2_GetLastAssessmentResultsView",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryViewResultV2ViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Falconetix-Model-RuleEngine-Entities-AssessmentsRequestFilterViewModel"
                }
            }
        },
        "/v2/AssessmentHistoryV2/LastAssessmentResults": {
            "post": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get last assessment results for selected cloud accounts and bundles. Includes details of tests and test entities.",
                "operationId": "AssessmentHistoryV2_GetLastAssessmentResults",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryResultV2ViewModel_Newtonsoft-Json-Linq-JRaw_"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Falconetix-Model-RuleEngine-Entities-AssessmentsRequestFilterViewModel"
                }
            }
        },
        "/v2/AssessmentHistoryV2/LastAssessmentResults/minimized": {
            "post": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get last assessment results for selected cloud accounts and bundles as Minimized Entity.",
                "operationId": "AssessmentHistoryV2_GetLastAssessmentResultsMini",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryResultV2ViewModel_Falconetix-Model-RuleEngine-Entities-AssessmentHistoryMinimizedEntity_"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Falconetix-Model-RuleEngine-Entities-AssessmentsRequestFilterViewModel"
                }
            }
        },
        "/v2/AssessmentHistoryV2/ExecutiveReport/{vendor}/{rulesetId}": {
            "get": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get an executive report of assessments for the selected ruleset and platform",
                "operationId": "AssessmentHistoryV2_GetLastAssessmentResultsMiniToExecutiveSummary",
                "parameters": [
                    {
                        "name": "vendor",
                        "in": "path",
                        "description": "Platform",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "hp",
                                "mellanox",
                                "awsgov",
                                "azure",
                                "google",
                                "awschina",
                                "azuregov",
                                "kubernetes",
                                "azurechina",
                                "terraform",
                                "generic",
                                "kubernetesruntimeassurance",
                                "shiftleft",
                                "sourcecodeassurance",
                                "imageassurance",
                                "alibaba",
                                "cft",
                                "containerregistry",
                                "ers",
                                "oci",
                                "ocigov",
                                "ocigovuk",
                                "CIEM"
                            ]
                        }
                    },
                    {
                        "name": "rulesetId",
                        "in": "path",
                        "description": "Ruleset ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-AssessmentExecutiveReport"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistoryV2/ExecutiveReport/email/{vendor}/{rulesetId}": {
            "post": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Send email with link to s3 bucket to the Executive Report",
                "operationId": "AssessmentHistoryV2_SendExecutiveReportCSVByEmail",
                "parameters": [
                    {
                        "name": "vendor",
                        "in": "path",
                        "description": "vendor",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "hp",
                                "mellanox",
                                "awsgov",
                                "azure",
                                "google",
                                "awschina",
                                "azuregov",
                                "kubernetes",
                                "azurechina",
                                "terraform",
                                "generic",
                                "kubernetesruntimeassurance",
                                "shiftleft",
                                "sourcecodeassurance",
                                "imageassurance",
                                "alibaba",
                                "cft",
                                "containerregistry",
                                "ers",
                                "oci",
                                "ocigov",
                                "ocigovuk",
                                "CIEM"
                            ]
                        }
                    },
                    {
                        "name": "rulesetId",
                        "in": "path",
                        "description": "rulesetId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "uuid",
                                    "type": "string",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "description": "Emails",
                    "required": true
                }
            }
        },
        "/v2/AssessmentHistoryV2/{assessmentId}/ExecutiveReport/csv": {
            "get": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get a csv executive report of assessment",
                "operationId": "AssessmentHistoryV2_GetAssessmentExecutiveReportCSV",
                "parameters": [
                    {
                        "name": "assessmentId",
                        "in": "path",
                        "description": "AssessmentId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistoryV2/OrganizationalUnitsLastAssessmentStatistics": {
            "post": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get last assessment statistics for selected Organizational Units and bundles.",
                "operationId": "AssessmentHistoryV2_GetOrganizationalUnitsLastAssessmentStatistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-OrganizationalUnitAssessmentHistoryViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-OrganizationalUnitAssessmentHistoryRequestModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-OrganizationalUnitAssessmentHistoryRequestModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/AssessmentHistoryV2/view/timeRange": {
            "post": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get assessment history (list of assessments) for specified time range and filters",
                "operationId": "AssessmentHistoryV2_FindResultViewsByTimeRangeAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessnentHistoryViewResultsTimeRangeViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentViewsByTimeRangeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentViewsByTimeRangeRequest"
                            }
                        }
                    },
                    "description": "details of the results to get (filters, time range)",
                    "required": true
                }
            }
        },
        "/v2/AssessmentHistoryV2/view/{id}": {
            "get": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get result statistics for a specific assessment",
                "operationId": "AssessmentHistoryV2_GetViewHistoryAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the assessment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryViewResultV2ViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistoryV2/csv/{assessmentResultId}": {
            "get": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get assessment result CSV",
                "operationId": "AssessmentHistoryV2_GetAssessmentResultCsv",
                "parameters": [
                    {
                        "name": "assessmentResultId",
                        "in": "path",
                        "description": "Assessment result ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistoryV2/{id}": {
            "get": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Get results for a specific assessment",
                "operationId": "AssessmentHistoryV2_GetHistoryAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the id of the assessment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryResultV2ViewModel_Newtonsoft-Json-Linq-JRaw_"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AssessmentHistoryV2": {
            "delete": {
                "tags": [
                    "AssessmentHistoryV2"
                ],
                "summary": "Delete an assessment",
                "operationId": "AssessmentHistoryV2_DeleteHistoryAsync",
                "parameters": [
                    {
                        "name": "historyId",
                        "in": "query",
                        "description": "the id of the assessment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/audit/event-types": {
            "get": {
                "tags": [
                    "Audit"
                ],
                "summary": "Get a list of available audit event types",
                "operationId": "Audit_GetEventTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/audit/awsgroup/{groupId}": {
            "get": {
                "tags": [
                    "Audit"
                ],
                "summary": "Get audit events for a specific AWS Security Group",
                "operationId": "Audit_GetAuditEventsForAwsSecGroup",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "the Security Group id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "startTimestamp",
                        "in": "query",
                        "description": "the time of the first event to be fetched",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endTimestamp",
                        "in": "query",
                        "description": "the time of the last event to be fetched",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AuditEntryViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/audit/export": {
            "get": {
                "tags": [
                    "Audit"
                ],
                "summary": "Export an audit events report in a csv format",
                "operationId": "Audit_GetExport",
                "parameters": [
                    {
                        "name": "startTimestamp",
                        "in": "query",
                        "description": "the time of the first event to be exported in the report",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endTimestamp",
                        "in": "query",
                        "description": "the time of the last event to be exported in the report",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "userNameFilter",
                        "in": "query",
                        "description": "only events for this specific user will be exported",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "eventType",
                        "in": "query",
                        "description": "only events of this specific type will be exported",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/audit/row-data-api": {
            "get": {
                "tags": [
                    "Audit"
                ],
                "summary": "get api events audit row data",
                "operationId": "Audit_GetRowDataApi",
                "parameters": [
                    {
                        "name": "startTimestamp",
                        "in": "query",
                        "description": "the time of the first event  in the report- Epoch time in milliseconds",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endTimestamp",
                        "in": "query",
                        "description": "the time of the last event in the report - Epoch time in milliseconds",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "qsl query filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Audit-ApiAuditResult"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/audit/row-data-system": {
            "get": {
                "tags": [
                    "Audit"
                ],
                "summary": "get system events audit row data",
                "operationId": "Audit_GetRowDataSystem",
                "parameters": [
                    {
                        "name": "startTimestamp",
                        "in": "query",
                        "description": "the time of the first event  in the report - Epoch time in milliseconds",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endTimestamp",
                        "in": "query",
                        "description": "the time of the last event in the report - Epoch time in milliseconds",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "qsl query filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Audit-SystemAuditResult"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/audit/data-count": {
            "get": {
                "tags": [
                    "Audit"
                ],
                "summary": "get row data result count by type api/system",
                "operationId": "Audit_GetRowDataCount",
                "parameters": [
                    {
                        "name": "startTimestamp",
                        "in": "query",
                        "description": "the time of the first event  in the report - Epoch time in milliseconds",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endTimestamp",
                        "in": "query",
                        "description": "the time of the last event in the report- Epoch time in milliseconds",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "qsl query filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "eventType",
                        "in": "query",
                        "description": "system events or api events",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-Audit-CountAuditResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Audit": {
            "get": {
                "tags": [
                    "Audit"
                ],
                "summary": "Get audit events with optional filters",
                "operationId": "Audit_Get",
                "parameters": [
                    {
                        "name": "pageNum",
                        "in": "query",
                        "description": "page # in the sequence of audit pages",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "eventsPerPage",
                        "in": "query",
                        "description": "no. of audit events in the page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startTimestamp",
                        "in": "query",
                        "description": "the time of first audit to be fetched",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endTimestamp",
                        "in": "query",
                        "description": "the time of the last audit to be fetched",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "userName",
                        "in": "query",
                        "description": "only events for this specific user will be fetched",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "eventType",
                        "in": "query",
                        "description": "only events of this specific type will be fetched",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fim",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AuditViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Audit/{id}": {
            "get": {
                "tags": [
                    "Audit"
                ],
                "summary": "Get audit metadata",
                "operationId": "Audit_GetAuditEventMetadata",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The audit event id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AuditEntryViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/auth/assume-role/jwt": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "Auth_PostAssumeRoleForApi",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Auth-AssumeRoleViewModel"
                }
            }
        },
        "/v2/auth/assume-role/web": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "Auth_PostAssumeRoleForWeb",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Auth-AssumeRoleViewModel"
                }
            }
        },
        "/v2/auth/reset-password-request": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "Auth_PostResetPasswordRequestAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth-ResetPasswordRequestViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth-ResetPasswordRequestViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/auth/reset-password-request-by-email": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "request to reset password to a user without reCaptcha - ONLY to SuperUser",
                "operationId": "Auth_PostResetPasswordRequestByEmailAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth-ResetPasswordByEmailRequestViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth-ResetPasswordByEmailRequestViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/auth/reset-password/{requestId}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "operationId": "Auth_GetResetPassword",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth-ResetPasswordGetViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/auth/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "Auth_PostResetPassword",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth-ResetPasswordPostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth-ResetPasswordPostViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/auth/change-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "Auth_PostChangePassword",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth-ChangePasswordViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Auth-ChangePasswordViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/cloudaccounts/{id}/DeleteForce": {
            "delete": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Delete an AWS cloud account and linked entities.",
                "operationId": "CloudAccounts_DeleteForce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The  AWS account id (UUID)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/cloudaccounts/name": {
            "put": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Update an AWS cloud account name.",
                "operationId": "CloudAccounts_UpdateCloudAccountName",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudAccountPartialUpdateViewModel_System-String_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudAccountPartialUpdateViewModel_System-String_"
                            }
                        }
                    },
                    "description": "the new name for the account",
                    "required": true
                }
            }
        },
        "/v2/cloudaccounts/region-conf": {
            "put": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Update an AWS cloud account region configuration.",
                "operationId": "CloudAccounts_UpdateCloudAccountRegionConf",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudAccountPartialUpdateViewModel_Models-CloudAccountRegionConfigurationViewModel_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudAccountPartialUpdateViewModel_Models-CloudAccountRegionConfigurationViewModel_"
                            }
                        }
                    },
                    "description": "updated Regional Configuration parameters for the account",
                    "required": true
                }
            }
        },
        "/v2/cloudaccounts/credentials": {
            "put": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Update credentials for an AWS cloud account in .\r\nAt least one of the following properties must be provided: \"cloudAccountId\", \"externalAccountNumber\"",
                "operationId": "CloudAccounts_UpdateCloudAccountCredentials",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudAccountPartialUpdateViewModel_Models-CloudAccountCredentialsViewModel_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudAccountPartialUpdateViewModel_Models-CloudAccountCredentialsViewModel_"
                            }
                        }
                    },
                    "description": "credentials block",
                    "required": true
                }
            }
        },
        "/v2/cloudaccounts/MissingPermissions": {
            "get": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Get a list of missing permissions for all accounts. These are permissions needed by  to manage accounts.",
                "operationId": "CloudAccounts_GetMissingPermissionsAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Shared-Permissions-CloudAccountMissingPermissionsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/cloudaccounts/{id}/MissingPermissions": {
            "get": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Get a list of missing permissions for a specific account. These permissions are needed by  to manage accounts.",
                "operationId": "CloudAccounts_GetMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "showIgnored",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shared-Permissions-CloudAccountMissingPermissionsIgnorableViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Get a list of missing permissions for a specific account. These are permissions needed by  to manage accounts.",
                "operationId": "CloudAccounts_UpdateIgnorableMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CloudAccountId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel"
                                }
                            }
                        }
                    },
                    "description": "List of permissions to set ignore or restore flag to",
                    "required": true
                }
            }
        },
        "/v2/cloudaccounts/{id}/MissingPermissions/EntityType": {
            "get": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Get a list of missing permissions for a specific cloud entity type and cloud account",
                "operationId": "CloudAccounts_GetMissingPermissionsByEntityTypeAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "entityType",
                        "in": "query",
                        "description": "The entity type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subType",
                        "in": "query",
                        "description": "The entity subtype (optional)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/cloudaccounts/{id}/CloudAccountHasAssumeRolePermissionIssue": {
            "get": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "check if the cloud account's role has permission issues or was deleted",
                "operationId": "CloudAccounts_CloudAccountHasAssumeRolePermissionIssueAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/cloudaccounts/{id}/MissingPermissions/Reset": {
            "put": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "reset (re-validate) an account",
                "operationId": "CloudAccounts_ResetMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/cloudaccounts/{id}/SyncNow": {
            "post": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Send a data sync command to immediately fetch cloud account data into 's system caches.\r\nThis API is used in conjunction with EntityFetchStatus API resource to query the fetch status.\r\nRead more and see a full example here: https://github.com//Python_API_SDK/blob/master/implementation/runSyncAssessment.md",
                "operationId": "CloudAccounts_SyncNow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The account id.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AwsSyncNowResultViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/cloudaccounts/{id}/organizationalUnit": {
            "put": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Update the ID of the Organizational Unit that this cloud account will be attached to.\r\nUse 'null' for the root Organizational Unit",
                "operationId": "CloudAccounts_UpdateOrganizationalId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The  Guid ID of the AWS cloud account",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudAccountViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                            }
                        }
                    },
                    "description": "The Guid ID of the Organizational Unit to attach to. Use 'null' to attach to the root Organizational Unit",
                    "required": true
                }
            }
        },
        "/v2/cloudaccounts/organizationalUnit/move": {
            "put": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Detach cloud accounts from an Organizational unit and attach them to another Organizational unit\r\nUse 'null' for root organizational unit",
                "operationId": "CloudAccounts_MoveCloudAccountsToOrganizationalUnit",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-MoveOrganizationalUnitViewModel2"
                }
            }
        },
        "/v2/cloudaccounts/organizationalUnit/moveAll": {
            "put": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Detach all cloud accounts from their current organizational unit and attach them to a new one. Default is to root organizational unit",
                "operationId": "CloudAccounts_MoveAllCloudAccountsToOrganizationalUnit",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel2"
                }
            }
        },
        "/v2/cloudaccounts/organizationalUnit/attach": {
            "post": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Attach several cloud accounts to a specific Organizational Unit. User 'null' as root Organizational Unit as target",
                "operationId": "CloudAccounts_PostAttachMulti",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-AttachCloudAccountsViewModel"
                }
            }
        },
        "/v2/CloudAccounts": {
            "get": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Get all AWS cloud accounts",
                "operationId": "CloudAccounts_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudAccountViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Add a new AWS cloud account to CloudGuard <br />\r\nOnboarding an AWS cloud account manually (legacy method) requires CloudGuard to obtain permissions to access the account.<br />\r\nFor more information, see the procedure on the onboarding with API on the Secure Knowledge center:<br /><a href=\"https://support.checkpoint.com/results/sk/sk147832\">How to onboard an AWS account to CloudGuard using the REST API</a>",
                "operationId": "CloudAccounts_Post",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudAccountViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudAccountViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudAccountViewModel"
                            }
                        }
                    },
                    "description": "The new AWS account data",
                    "required": true
                }
            }
        },
        "/v2/CloudAccounts/{id}": {
            "get": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Fetch a specific AWS cloud account",
                "operationId": "CloudAccounts_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The  AWS account id (UUID) or the AWS external account number (12 digit number)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudAccountViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Aws Cloud Account"
                ],
                "summary": "Delete an AWS cloud account.",
                "operationId": "CloudAccounts_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The  AWS account id (UUID)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AwsAppSync": {
            "get": {
                "tags": [
                    "AwsAppSync"
                ],
                "operationId": "AwsAppSync_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsAppSync-AwsAppSyncViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsConfigSettings": {
            "get": {
                "tags": [
                    "AwsConfigSettings"
                ],
                "operationId": "AwsConfigSettings_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsConfigSetting-AwsConfigSettingsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsConfigSettings/{id}": {
            "get": {
                "tags": [
                    "AwsConfigSettings"
                ],
                "operationId": "AwsConfigSettings_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsConfigSetting-AwsConfigSettingsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsCustomerGateway": {
            "get": {
                "tags": [
                    "AwsCustomerGateway"
                ],
                "operationId": "AwsCustomerGateway_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudCustomerGateway-AwsCustomerGatewayViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsEks/GetByCloudAccount": {
            "get": {
                "tags": [
                    "AwsEks"
                ],
                "operationId": "AwsEks_GetByCloudAccount",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsEks": {
            "get": {
                "tags": [
                    "AwsEks"
                ],
                "operationId": "AwsEks_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsEks/{id}": {
            "get": {
                "tags": [
                    "AwsEks"
                ],
                "operationId": "AwsEks_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsElasticIp": {
            "get": {
                "tags": [
                    "AwsElasticIp"
                ],
                "operationId": "AwsElasticIp_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AwsElasticIPViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsElasticsearchDomain": {
            "get": {
                "tags": [
                    "AwsElasticsearchDomain"
                ],
                "operationId": "AwsElasticsearchDomain_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchDomainStatusViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsEmrCluster": {
            "get": {
                "tags": [
                    "AwsEmrCluster"
                ],
                "operationId": "AwsEmrCluster_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrClusterViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsEmrCluster/{id}": {
            "get": {
                "tags": [
                    "AwsEmrCluster"
                ],
                "operationId": "AwsEmrCluster_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrClusterViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsInspectorFindings": {
            "get": {
                "tags": [
                    "AwsInspectorFindings"
                ],
                "operationId": "AwsInspectorFindings_Get",
                "parameters": [
                    {
                        "name": "instanceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AwsInspectorFindingsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsInspectorRuns": {
            "get": {
                "tags": [
                    "AwsInspectorRuns"
                ],
                "operationId": "AwsInspectorRuns_Get",
                "parameters": [
                    {
                        "name": "instanceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AwsInspectorRunsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsLoadBalancersNetworkInterfaces": {
            "get": {
                "tags": [
                    "AwsLoadBalancersNetworkInterfaces"
                ],
                "summary": "Get all AWS Load Balancers with attached Network Interfaces",
                "operationId": "AwsLoadBalancersNetworkInterfaces_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AwsLoadBalancersNetworkInterfacesViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsOrganization/Organizations": {
            "get": {
                "tags": [
                    "AwsOrganizations"
                ],
                "operationId": "AwsOrganizations_GetOrganizations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsOrganizationViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsOrganization/Accounts": {
            "get": {
                "tags": [
                    "AwsOrganizations"
                ],
                "operationId": "AwsOrganizations_GetAccounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsOrganizationAccountViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsQuickSightAccount": {
            "get": {
                "tags": [
                    "AwsQuickSightAccount"
                ],
                "operationId": "AwsQuickSightAccount_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsQuickSight-AwsQuickSightAccountViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsQuickSightGroup": {
            "get": {
                "tags": [
                    "AwsQuickSightGroup"
                ],
                "operationId": "AwsQuickSightGroup_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsQuickSight-AwsQuickSightGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsQuickSightUser": {
            "get": {
                "tags": [
                    "AwsQuickSightUser"
                ],
                "operationId": "AwsQuickSightUser_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsQuickSight-AwsQuickSightUserViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsQuickSightVpcConnections": {
            "get": {
                "tags": [
                    "AwsQuickSightVpcConnections"
                ],
                "operationId": "AwsQuickSightVpcConnections_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsQuickSight-AwsQuickSightVpcConnectionsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsSageMaker": {
            "get": {
                "tags": [
                    "AwsSageMaker"
                ],
                "operationId": "AwsSageMaker_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsSageMaker-AwsSageMakerNotebookViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsSecurityGroup/{id}/ReferencingGroups": {
            "get": {
                "tags": [
                    "AwsSecurityGroup"
                ],
                "summary": "Get all referenced security groups",
                "operationId": "AwsSecurityGroup_GetAllReferencedSecurityGroups",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Aws security group id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsSecurityGroup-AwsSecurityGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsSecurityGroup": {
            "get": {
                "tags": [
                    "AwsSecurityGroup"
                ],
                "summary": "Get all Aws security group Entities",
                "operationId": "AwsSecurityGroup_GetAllSecurityGroups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AwsSecurityGroup-AwsSecurityGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsSecurityGroupPolicy/CloudAccount/{id}": {
            "get": {
                "tags": [
                    "AwsSecurityGroupPolicy"
                ],
                "summary": "Get all security groups policies of cloud account by cloud account id",
                "operationId": "AwsSecurityGroupPolicy_GetByCloudAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudSecurityGroupPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsSecurityGroupPolicy/CloudAccount/{cloudAccountId}/Policy/{externalId}": {
            "get": {
                "tags": [
                    "AwsSecurityGroupPolicy"
                ],
                "summary": "Get security group policy by external security group id and cloud account id",
                "operationId": "AwsSecurityGroupPolicy_GetByExternalSecurityGroupId",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": "Cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "externalId",
                        "in": "path",
                        "description": "Aws security group id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudSecurityGroupPolicyViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AwsSecurityGroupPolicy"
                ],
                "summary": "Delete an AWS security group",
                "operationId": "AwsSecurityGroupPolicy_DeleteCloudSecurityGroup",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": "Cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "externalId",
                        "in": "path",
                        "description": "Aws security group id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AwsSecurityGroupPolicy/CloudAccount/{cloudAccountId}/Policy/{externalId}/ProtectionMode": {
            "post": {
                "tags": [
                    "AwsSecurityGroupPolicy"
                ],
                "summary": "Update protection mode to security group",
                "operationId": "AwsSecurityGroupPolicy_PostProtectionMode",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": "Cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "externalId",
                        "in": "path",
                        "description": "Aws security group id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupProtectionModeChangeViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupProtectionModeChangeViewModel"
                            }
                        }
                    },
                    "description": "protectionMode: FullManage / ReadOnly",
                    "required": true
                }
            }
        },
        "/v2/AwsSecurityGroupPolicy/CloudAccount/{cloudAccountId}/Policy/{externalId}/Services/{policyType}": {
            "put": {
                "tags": [
                    "AwsSecurityGroupPolicy"
                ],
                "summary": "Update a service (rule) for an AWS security group",
                "operationId": "AwsSecurityGroupPolicy_UpdateServiceInSecurityGroup",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": "Cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "externalId",
                        "in": "path",
                        "description": "Aws security group id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "policyType",
                        "in": "path",
                        "description": "the service type (Inbound / Outbound)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Inbound",
                                "Outbound"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                            }
                        }
                    },
                    "description": "updated details for the service",
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "AwsSecurityGroupPolicy"
                ],
                "summary": "Creat a new Service (rule) for the security group",
                "operationId": "AwsSecurityGroupPolicy_AddServiceToSecurityGroup",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": "Cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "externalId",
                        "in": "path",
                        "description": "Aws security group id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "policyType",
                        "in": "path",
                        "description": "the service type (Inbound / Outbound))",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Inbound",
                                "Outbound"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupPolicyServiceViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupPolicyServiceViewModel"
                            }
                        }
                    },
                    "description": "details for the service",
                    "required": true
                }
            }
        },
        "/v2/AwsSecurityGroupPolicy/CloudAccount/{cloudAccountId}/Policy/{externalId}/Services/{policyType}/{serviceId}": {
            "delete": {
                "tags": [
                    "AwsSecurityGroupPolicy"
                ],
                "summary": "Delete a service (rule) from an AWS security group",
                "operationId": "AwsSecurityGroupPolicy_DeleteServiceFromSecurityGroup",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": "Cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "externalId",
                        "in": "path",
                        "description": "Aws security group id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "policyType",
                        "in": "path",
                        "description": "the service type (Inbound / Outbound)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Inbound",
                                "Outbound"
                            ]
                        }
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "the service id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AwsSecurityGroupPolicy/CloudAccount/{cloudAccountId}/Policy/{externalId}/tags": {
            "post": {
                "tags": [
                    "AwsSecurityGroupPolicy"
                ],
                "summary": "Update tags",
                "operationId": "AwsSecurityGroupPolicy_UpdateTags",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": "Cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "externalId",
                        "in": "path",
                        "description": "Aws security group id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupTagsChangeViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupTagsChangeViewModel"
                            }
                        }
                    },
                    "description": "Tags model - {{ \"key\" : \"value\" }}",
                    "required": true
                }
            }
        },
        "/v2/AwsSecurityGroupPolicy": {
            "get": {
                "tags": [
                    "AwsSecurityGroupPolicy"
                ],
                "summary": "Get a list of all security groups",
                "operationId": "AwsSecurityGroupPolicy_GetAllSecurityGroupsOfAccount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudSecurityGroupPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AwsSecurityGroupPolicy"
                ],
                "summary": "Create a new AWS security group",
                "operationId": "AwsSecurityGroupPolicy_CreateAwsSecurityGroup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupBaseViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupBaseViewModel"
                            }
                        }
                    },
                    "description": "details for the new AWS security group",
                    "required": true
                }
            }
        },
        "/v2/view/awssecuritygroup/index": {
            "get": {
                "tags": [
                    "AwsSecurityGroupsIndex"
                ],
                "operationId": "AwsSecurityGroupsIndex_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AwsSecurityGroupsIndexGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsUnifiedOnboarding/StackConfig": {
            "post": {
                "tags": [
                    "AwsUnifiedOnboarding"
                ],
                "summary": "Returns the configuration should be set to the AWS cloud formation SDK for creating the Stack for the onboarding",
                "operationId": "AwsUnifiedOnboarding_GetStackConfig",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Onboarding-ViewModel-AwsStackConfigViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Onboarding-Requests-OnboardingConfigurationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Onboarding-Requests-OnboardingConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/AwsUnifiedOnboarding/UpdateVersion/StackConfig/{onboardingId}": {
            "get": {
                "tags": [
                    "AwsUnifiedOnboarding"
                ],
                "summary": "Returns the configuration should be set to the AWS cloud formation SDK for an update",
                "operationId": "AwsUnifiedOnboarding_GetUpdateStackConfig",
                "parameters": [
                    {
                        "name": "onboardingId",
                        "in": "path",
                        "description": "the OnboardingId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Onboarding-ViewModel-AwsStackConfigViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsUnifiedOnboarding/{id}": {
            "get": {
                "tags": [
                    "AwsUnifiedOnboarding"
                ],
                "summary": "Gets the Onboarding information",
                "operationId": "AwsUnifiedOnboarding_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Onboarding-ViewModel-OnboardingInfoViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsVpcEndpoint": {
            "get": {
                "tags": [
                    "AwsVpcEndpoint"
                ],
                "operationId": "AwsVpcEndpoint_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AwsVpcEndpointViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AwsVpcEndpoint/{id}": {
            "get": {
                "tags": [
                    "AwsVpcEndpoint"
                ],
                "operationId": "AwsVpcEndpoint_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-AwsVpcEndpointViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureAnalysisService": {
            "get": {
                "tags": [
                    "AzureAnalysisService"
                ],
                "summary": "Fetch all Analysis Service Servers for all cloud accounts",
                "operationId": "AzureAnalysisService_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-AnalysisService-AzureAnalysisServiceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureAnalysisService/{id}": {
            "get": {
                "tags": [
                    "AzureAnalysisService"
                ],
                "summary": "Get Analysis Service Server by Id or throw exception",
                "operationId": "AzureAnalysisService_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-AnalysisService-AzureAnalysisServiceViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureApplicationGateway": {
            "get": {
                "tags": [
                    "AzureApplicationGateway"
                ],
                "operationId": "AzureApplicationGateway_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-ApplicationGateway-AzureApplicationGatewayViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureApplicationGateway/{id}": {
            "get": {
                "tags": [
                    "AzureApplicationGateway"
                ],
                "operationId": "AzureApplicationGateway_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-ApplicationGateway-AzureApplicationGatewayViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureApplicationSecurityGroup/{id}": {
            "get": {
                "tags": [
                    "AzureApplicationSecurityGroup"
                ],
                "summary": "get a specific Application Security Group by name and resource group",
                "operationId": "AzureApplicationSecurityGroup_GetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureApplicationSecurityGroupViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureApplicationSecurityGroup/CloudAccountId/{cloudAccountId}/Region/{region}": {
            "get": {
                "tags": [
                    "AzureApplicationSecurityGroup"
                ],
                "summary": "get all application security group of cloudAccount by region",
                "operationId": "AzureApplicationSecurityGroup_GetByCloudAccountAndRegion",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AzureApplicationSecurityGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureApplicationSecurityGroup": {
            "get": {
                "tags": [
                    "AzureApplicationSecurityGroup"
                ],
                "summary": "get all Application Security Groups",
                "operationId": "AzureApplicationSecurityGroup_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AzureApplicationSecurityGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureCloudAccount/{id}/DeleteForce": {
            "delete": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Delete an Azure account from a  account (the Azure account is not deleted from Azure) and linked entities",
                "operationId": "AzureCloudAccount_DeleteForce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the  account id for the account or the Subscription id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AzureCloudAccount/OnboardingExecutionPreview": {
            "get": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Get the script that performs Azure account onboarding",
                "operationId": "AzureCloudAccount_GetOnboardingScriptForPreviewAsync",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v2/AzureCloudAccount/OnboardingExecutionCommand": {
            "post": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Get the cloud account command line execution for Azure shell\r\n<param name=\"requestModel\">Details for Azure cloud account.</param>",
                "operationId": "AzureCloudAccount_GenerateOnboardingExecutionCommand",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CGN-Common-Model-CloudAccounts-Onboarding-AzureSimplifiedOnboardingExecCmdRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CGN-Common-Model-CloudAccounts-Onboarding-AzureSimplifiedOnboardingExecCmdRequest"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/AzureCloudAccount/MissingPermissions": {
            "get": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Get a list of missing permissions (required by ) for all Azure accounts in a  account",
                "operationId": "AzureCloudAccount_GetMissingPermissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Shared-Permissions-CloudAccountMissingPermissionsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureCloudAccount/{id}/MissingPermissions": {
            "get": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Get a list of missing permissions for a specific account. These permissions are needed by  to manage accounts.",
                "operationId": "AzureCloudAccount_GetMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "showIgnored",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shared-Permissions-CloudAccountMissingPermissionsIgnorableViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Get a list of missing permissions for a specific account. These are permissions needed by  to manage accounts.",
                "operationId": "AzureCloudAccount_UpdateIgnorableMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CloudAccountId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel"
                                }
                            }
                        }
                    },
                    "description": "List of permissions to set ignore or restore flag to",
                    "required": true
                }
            }
        },
        "/v2/AzureCloudAccount/{id}/MissingPermissions/EntityType": {
            "get": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Get a list of missing permissions for a specific cloud entity type and Azure cloud account",
                "operationId": "AzureCloudAccount_GetMissingPermissionsByEntityTypeAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the account id for the Azure account in ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "entityType",
                        "in": "query",
                        "description": "the entity type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subType",
                        "in": "query",
                        "description": "the entity subtype",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureCloudAccount/{id}/MissingPermissions/Reset": {
            "put": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Reset (re-validate) the missing permissions indication for an Azure account in ",
                "operationId": "AzureCloudAccount_ResetMissingPermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the account id for the Azure account in ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AzureCloudAccount/{id}/OperationMode": {
            "put": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Update the operations mode for an Azure account in . Modes can be Read-Only or Manage",
                "operationId": "AzureCloudAccount_UpdateOperationModeAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the account id for the Azure account in ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureCloudAccountViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Azure-Accounts-AzureAccountOperationModeViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Azure-Accounts-AzureAccountOperationModeViewModel"
                            }
                        }
                    },
                    "description": "updated details for the account, including the operations mode",
                    "required": true
                }
            }
        },
        "/v2/AzureCloudAccount/{id}/AccountName": {
            "put": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Update the account name (in ) for an Azure account",
                "operationId": "AzureCloudAccount_UpdateAccountName",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the account id in ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureCloudAccountViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Azure-Accounts-AzureAccountNameModeViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Azure-Accounts-AzureAccountNameModeViewModel"
                            }
                        }
                    },
                    "description": "the new name for the account",
                    "required": true
                }
            }
        },
        "/v2/AzureCloudAccount/{id}/Credentials": {
            "put": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "operationId": "AzureCloudAccount_UpdateCloudAccountCredentials",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Azure-Accounts-AzureCloudAccountCredentialsPutViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Azure-Accounts-AzureCloudAccountCredentialsPutViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/AzureCloudAccount/{id}/SyncNow": {
            "post": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "operationId": "AzureCloudAccount_SyncNow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureCloudAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureCloudAccount/{id}/CredentialsServicePrincipalId": {
            "get": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "operationId": "AzureCloudAccount_GetCredentialsServicePrincipalIdAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureCloudAccount/{id}/organizationalUnit": {
            "put": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Update the ID of the Organizational Unit that this cloud account will be attached to.\r\nUse 'null' for the root organizational unit",
                "operationId": "AzureCloudAccount_UpdateOrganizationalId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The  Guid ID of the Azure cloud account",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureCloudAccountViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                            }
                        }
                    },
                    "description": "The Guid ID of the Organizational Unit to attach to. Use 'null' to attach to the root Organizational Unit",
                    "required": true
                }
            }
        },
        "/v2/AzureCloudAccount/organizationalUnit/move": {
            "put": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Detach cloud accounts from an Organizational unit and attach them to another Organizational unit.\r\nUse 'null' for root organizational unit",
                "operationId": "AzureCloudAccount_MoveCloudAccountsToOrganizationalUnit",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-MoveOrganizationalUnitViewModel"
                }
            }
        },
        "/v2/AzureCloudAccount/organizationalUnit/moveAll": {
            "put": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Detach all cloud accounts from their current organizational unit and attach them to a new one. Default is to root organizational unit",
                "operationId": "AzureCloudAccount_MoveAllCloudAccountsToOrganizationalUnit",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel2"
                }
            }
        },
        "/v2/AzureCloudAccount/organizationalUnit/attach": {
            "post": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Attach several cloud accounts to a specific Organizational Unit. User 'null' as root Organizational Unit as target",
                "operationId": "AzureCloudAccount_PostAttachMulti",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-AttachCloudAccountsViewModel"
                }
            }
        },
        "/v2/AzureCloudAccount/{id}": {
            "get": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Get details for a specific Azure account",
                "operationId": "AzureCloudAccount_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the  account id for the Azure account",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureCloudAccountViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Delete an Azure account from a  account (the Azure account is not deleted from Azure)",
                "operationId": "AzureCloudAccount_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the  account id for the account or the Subscription id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AzureCloudAccount": {
            "get": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Get details for all Azure accounts for the  user",
                "operationId": "AzureCloudAccount_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AzureCloudAccountViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AzureCloudAccount"
                ],
                "summary": "Add (onboard) an Azure account to the user's  account",
                "operationId": "AzureCloudAccount_Post",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureCloudAccountViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AzureCloudAccountViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AzureCloudAccountViewModel"
                            }
                        }
                    },
                    "description": "details for the Azure account",
                    "required": true
                }
            }
        },
        "/v2/AzureCosmosDbAccount": {
            "get": {
                "tags": [
                    "AzureCosmosDbAccount"
                ],
                "operationId": "AzureCosmosDbAccount_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-CosmosDbAccount-AzureCosmosDbAccountViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureCosmosDbAccount/{id}": {
            "get": {
                "tags": [
                    "AzureCosmosDbAccount"
                ],
                "operationId": "AzureCosmosDbAccount_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-CosmosDbAccount-AzureCosmosDbAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureFunction": {
            "get": {
                "tags": [
                    "AzureFunction"
                ],
                "operationId": "AzureFunction_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AzureAppServiceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureFunction/{id}": {
            "get": {
                "tags": [
                    "AzureFunction"
                ],
                "operationId": "AzureFunction_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-AzureAppServiceViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureKeyVault": {
            "get": {
                "tags": [
                    "AzureKeyVault"
                ],
                "operationId": "AzureKeyVault_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-KeyVault-AzureKeyVaultViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureKeyVault/{id}": {
            "get": {
                "tags": [
                    "AzureKeyVault"
                ],
                "operationId": "AzureKeyVault_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-KeyVault-AzureKeyVaultViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureKubernetes": {
            "get": {
                "tags": [
                    "AzureKubernetes"
                ],
                "operationId": "AzureKubernetes_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureKubernetes/{id}": {
            "get": {
                "tags": [
                    "AzureKubernetes"
                ],
                "operationId": "AzureKubernetes_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureLoadBalancer": {
            "get": {
                "tags": [
                    "AzureLoadBalancer"
                ],
                "operationId": "AzureLoadBalancer_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AzureLoadBalancerViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureLoadBalancer/{id}": {
            "get": {
                "tags": [
                    "AzureLoadBalancer"
                ],
                "operationId": "AzureLoadBalancer_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureLoadBalancerViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureLock": {
            "get": {
                "tags": [
                    "AzureLock"
                ],
                "operationId": "AzureLock_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-Locks-AzureLockViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureLock/{id}": {
            "get": {
                "tags": [
                    "AzureLock"
                ],
                "operationId": "AzureLock_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-Locks-AzureLockViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureLogicApp": {
            "get": {
                "tags": [
                    "AzureLogicApp"
                ],
                "operationId": "AzureLogicApp_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AzureLogicAppViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureLogicApp/{id}": {
            "get": {
                "tags": [
                    "AzureLogicApp"
                ],
                "summary": "Get specific LogicApp by  Id",
                "operationId": "AzureLogicApp_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": " Id of Logic App",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-AzureLogicAppViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureLogProfile": {
            "get": {
                "tags": [
                    "AzureLogProfile"
                ],
                "operationId": "AzureLogProfile_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-LogProfile-AzureLogProfileViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzurePolicyAssignment/{id}": {
            "get": {
                "tags": [
                    "AzurePolicyAssignment"
                ],
                "operationId": "AzurePolicyAssignment_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-PolicyAssignment-AzurePolicyAssignmentViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzurePolicyAssignment": {
            "get": {
                "tags": [
                    "AzurePolicyAssignment"
                ],
                "operationId": "AzurePolicyAssignment_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-PolicyAssignment-AzurePolicyAssignmentViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureRedisCache": {
            "get": {
                "tags": [
                    "AzureRedisCache"
                ],
                "operationId": "AzureRedisCache_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-RedisCache-ViewModels-AzureRedisCacheViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureRedisCache/{id}": {
            "get": {
                "tags": [
                    "AzureRedisCache"
                ],
                "operationId": "AzureRedisCache_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-RedisCache-ViewModels-AzureRedisCacheViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureResourceGroup": {
            "get": {
                "tags": [
                    "AzureResourceGroup"
                ],
                "operationId": "AzureResourceGroup_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AzureResourceGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureResourceGroup/{id}": {
            "get": {
                "tags": [
                    "AzureResourceGroup"
                ],
                "operationId": "AzureResourceGroup_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureResourceGroupViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureRouteTable": {
            "get": {
                "tags": [
                    "AzureRouteTable"
                ],
                "operationId": "AzureRouteTable_GetAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-RouteTable-AzureRouteTableViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureRouteTable/{id}": {
            "get": {
                "tags": [
                    "AzureRouteTable"
                ],
                "operationId": "AzureRouteTable_GetAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-RouteTable-AzureRouteTableViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureSecurityGroup/{id}": {
            "get": {
                "tags": [
                    "AzureSecurityGroup"
                ],
                "operationId": "AzureSecurityGroup_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureSecurityGroupViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureSecurityGroup": {
            "get": {
                "tags": [
                    "AzureSecurityGroup"
                ],
                "operationId": "AzureSecurityGroup_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AzureSecurityGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureSecurityGroupPolicy/{id}": {
            "get": {
                "tags": [
                    "AzureSecurityGroupPolicy"
                ],
                "summary": "Get details for a specific Azure Network Security Group policy",
                "operationId": "AzureSecurityGroupPolicy_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the policy id (in )",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyGetViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AzureSecurityGroupPolicy"
                ],
                "summary": "Update a security group policy",
                "operationId": "AzureSecurityGroupPolicy_Put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the security group policy id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyPostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyPostViewModel"
                            }
                        }
                    },
                    "description": "details for the policy, including the changes",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "AzureSecurityGroupPolicy"
                ],
                "summary": "Delete a security group policy",
                "operationId": "AzureSecurityGroupPolicy_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the security group policy id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/AzureSecurityGroupPolicy/{policyId}/TamperProtected": {
            "put": {
                "tags": [
                    "AzureSecurityGroupPolicy"
                ],
                "summary": "Enable or disable Tamper Protetion for a specific security group policy",
                "operationId": "AzureSecurityGroupPolicy_UpdateProtectionMode",
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "the security group policy id&gt;",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "tamperProtected",
                        "in": "query",
                        "description": "enable/disable Tamper protection",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyGetViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureSecurityGroupPolicy/Stats": {
            "get": {
                "tags": [
                    "AzureSecurityGroupPolicy"
                ],
                "summary": "Get statistics for the security group policies for the  user",
                "operationId": "AzureSecurityGroupPolicy_GetStats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyStatsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureSecurityGroupPolicy": {
            "get": {
                "tags": [
                    "AzureSecurityGroupPolicy"
                ],
                "summary": "Get a list of all Network Security Group Policies for the Azure accounts in the  account",
                "operationId": "AzureSecurityGroupPolicy_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyGetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AzureSecurityGroupPolicy"
                ],
                "summary": "Create a security group policy",
                "operationId": "AzureSecurityGroupPolicy_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyPostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyPostViewModel"
                            }
                        }
                    },
                    "description": "details for the policy",
                    "required": true
                }
            }
        },
        "/v2/AzureSqlDb": {
            "get": {
                "tags": [
                    "AzureSqlDb"
                ],
                "operationId": "AzureSqlDb_Get",
                "parameters": [
                    {
                        "name": "subscriptions",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resourceGroups",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "providers",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "servers",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "databases",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-AzureSqlDbViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureSqlServer": {
            "get": {
                "tags": [
                    "AzureSqlServer"
                ],
                "operationId": "AzureSqlServer_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-AzureSqlServerViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureSqlServer/{id}": {
            "get": {
                "tags": [
                    "AzureSqlServer"
                ],
                "operationId": "AzureSqlServer_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-AzureSqlServerViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureStorageAccounts": {
            "get": {
                "tags": [
                    "AzureStorageAccounts"
                ],
                "operationId": "AzureStorageAccounts_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-Storage-ViewModels-AzureStorageAccountViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureStorageAccounts/{id}": {
            "get": {
                "tags": [
                    "AzureStorageAccounts"
                ],
                "operationId": "AzureStorageAccounts_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-Storage-ViewModels-AzureStorageAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureSubnet": {
            "get": {
                "tags": [
                    "AzureSubnet"
                ],
                "operationId": "AzureSubnet_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AzureSubnetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureSubnet/{id}": {
            "get": {
                "tags": [
                    "AzureSubnet"
                ],
                "operationId": "AzureSubnet_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureSubnetViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureUser": {
            "get": {
                "tags": [
                    "AzureUser"
                ],
                "operationId": "AzureUser_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-User-AzureUserViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureUser/{id}": {
            "get": {
                "tags": [
                    "AzureUser"
                ],
                "operationId": "AzureUser_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Azure-User-AzureUserViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureVirtualMachine": {
            "get": {
                "tags": [
                    "AzureVirtualMachine"
                ],
                "operationId": "AzureVirtualMachine_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-AzureVirtualMachineViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureVirtualMachine/{id}": {
            "get": {
                "tags": [
                    "AzureVirtualMachine"
                ],
                "operationId": "AzureVirtualMachine_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AzureVirtualMachineViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureVirtualMachineImage": {
            "get": {
                "tags": [
                    "AzureVirtualMachineImage"
                ],
                "operationId": "AzureVirtualMachineImage_GetAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineImageViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureVirtualMachineScaleSet": {
            "get": {
                "tags": [
                    "AzureVirtualMachineScaleSet"
                ],
                "summary": "Get all ScaleSets by CloudAccountId",
                "operationId": "AzureVirtualMachineScaleSet_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "Identifier of cloud account",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureVirtualNetworkPeering": {
            "get": {
                "tags": [
                    "AzureVirtualNetworkPeering"
                ],
                "operationId": "AzureVirtualNetworkPeering_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Model-AzureVirtualNetworkPeeringViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureVirtualNetworkPeering/{id}": {
            "get": {
                "tags": [
                    "AzureVirtualNetworkPeering"
                ],
                "operationId": "AzureVirtualNetworkPeering_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Model-AzureVirtualNetworkPeeringViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureWebApp": {
            "get": {
                "tags": [
                    "AzureWebApp"
                ],
                "operationId": "AzureWebApp_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AzureAppServiceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/AzureWebApp/{id}": {
            "get": {
                "tags": [
                    "AzureWebApp"
                ],
                "operationId": "AzureWebApp_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-AzureAppServiceViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/BigTable": {
            "get": {
                "tags": [
                    "BigTable"
                ],
                "operationId": "BigTable_Get",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-BigTable-GcpBigTableInstanceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/BillableAssets": {
            "get": {
                "tags": [
                    "BillableAssets"
                ],
                "operationId": "BillableAssets_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillableAssets-AccountBillableAssetsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/billableAssetsReport/dailyUsage": {
            "get": {
                "tags": [
                    "BillableAssetsReport"
                ],
                "summary": "Get daily usage billable assets report",
                "operationId": "BillableAssetsReport_GetDailyUsageBillableAssetsReport",
                "parameters": [
                    {
                        "name": "fromDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/BillableAssetsReport": {
            "get": {
                "tags": [
                    "BillableAssetsReport"
                ],
                "summary": "Get last month billable assets report",
                "operationId": "BillableAssetsReport_GetBillableAssetsReport",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/billing/success": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "operationId": "Billing_PPPResponse",
                "parameters": [
                    {
                        "name": "ppp_status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/billing/pending": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "operationId": "Billing_PPPResponse",
                "parameters": [
                    {
                        "name": "ppp_status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/billing/failure": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "operationId": "Billing_PPPResponse",
                "parameters": [
                    {
                        "name": "ppp_status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Billing": {
            "post": {
                "tags": [
                    "Billing"
                ],
                "operationId": "Billing_CreatePaymentRequest",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/vpcs": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetVpcsASync",
                "parameters": [
                    {
                        "name": "externalAccountNumber",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "us_east_1",
                                "us_west_1",
                                "eu_west_1",
                                "ap_southeast_1",
                                "ap_northeast_1",
                                "us_west_2",
                                "sa_east_1",
                                "az_1_region_a_geo_1",
                                "az_2_region_a_geo_1",
                                "az_3_region_a_geo_1",
                                "ap_southeast_2",
                                "mellanox_region",
                                "us_gov_west_1",
                                "eu_central_1",
                                "ap_northeast_2",
                                "ap_south_1",
                                "us_east_2",
                                "ca_central_1",
                                "eu_west_2",
                                "eu_west_3",
                                "eu_north_1",
                                "cn_north_1",
                                "cn_northwest_1",
                                "us_gov_east_1",
                                "ap_east_1",
                                "me_south_1",
                                "af_south_1",
                                "eu_south_1",
                                "ap_northeast_3",
                                "me_central_1",
                                "ap_south_2",
                                "ap_southeast_3",
                                "ap_southeast_4",
                                "eu_central_2",
                                "eu_south_2",
                                "il_central_1",
                                "westus",
                                "eastus",
                                "eastus2",
                                "northcentralus",
                                "westus2",
                                "southcentralus",
                                "centralus",
                                "usgovlowa",
                                "usgovvirginia",
                                "northeurope",
                                "westeurope",
                                "eastasia",
                                "southeastasia",
                                "japaneast",
                                "japanwest",
                                "brazilsouth",
                                "australiaeast",
                                "australiasoutheast",
                                "centralindia",
                                "southindia",
                                "westindia",
                                "canadaeast",
                                "westcentralus",
                                "chinaeast",
                                "chinanorth",
                                "canadacentral",
                                "germanycentral",
                                "germanynortheast",
                                "koreacentral",
                                "uksouth",
                                "ukwest",
                                "koreasouth",
                                "francecentral",
                                "francesouth",
                                "germanywestcentral",
                                "usdodcentral",
                                "usdodeast",
                                "usgovarizona",
                                "usgovtexas",
                                "australiacentral",
                                "australiacentral2",
                                "chinaeast2",
                                "chinanorth2",
                                "southafricanorth",
                                "southafricawest",
                                "uaecentral",
                                "uaenorth",
                                "ussecwest",
                                "usseceast",
                                "germanynorth",
                                "switzerlandwest",
                                "norwaywest",
                                "norwayeast",
                                "switzerlandnorth",
                                "westus3",
                                "swedencentral",
                                "chinanorth3",
                                "brazilsoutheast",
                                "eastus2euap",
                                "jioindiawest",
                                "jioindiacentral",
                                "qatarcentral",
                                "asia",
                                "asia_east1",
                                "asia_northeast1",
                                "asia_south1",
                                "asia_southeast1",
                                "australia_southeast1",
                                "europe",
                                "europe_north1",
                                "europe_west1",
                                "europe_west2",
                                "europe_west3",
                                "europe_west4",
                                "northamerica_northeast1",
                                "southamerica_east1",
                                "us",
                                "us_central1",
                                "us_east1",
                                "us_east4",
                                "us_west1",
                                "us_west2",
                                "global",
                                "asia_east2",
                                "eur4",
                                "nam4",
                                "europe_west6",
                                "japan_west",
                                "asia_northeast2",
                                "asia_northeast3",
                                "us_west3",
                                "us_west4",
                                "asia_southeast2",
                                "nam3",
                                "nam5",
                                "nam6",
                                "nam7",
                                "nam10",
                                "nam_eur_asia1",
                                "eur3",
                                "eur5",
                                "asia1",
                                "nam11",
                                "eu",
                                "northamerica_northeast2",
                                "southamerica_west1",
                                "us_east5",
                                "us_south1",
                                "europe_central2",
                                "europe_southwest1",
                                "europe_west8",
                                "europe_west9",
                                "europe_west10",
                                "europe_west12",
                                "asia_south2",
                                "australia_southeast2",
                                "me_central1",
                                "me_central2",
                                "me_west1",
                                "ap_sydney_1",
                                "ap_melbourne_1",
                                "sa_saopaulo_1",
                                "sa_vinhedo_1",
                                "ca_montreal_1",
                                "ca_toronto_1",
                                "sa_santiago_1",
                                "eu_paris_1",
                                "eu_marseille_1",
                                "eu_frankfurt_1",
                                "ap_hyderabad_1",
                                "ap_mumbai_1",
                                "il_jerusalem_1",
                                "eu_milan_1",
                                "ap_osaka_1",
                                "ap_tokyo_1",
                                "mx_queretaro_1",
                                "eu_amsterdam_1",
                                "me_jeddah_1",
                                "ap_singapore_1",
                                "af_johannesburg_1",
                                "ap_seoul_1",
                                "ap_chuncheon_1",
                                "eu_madrid_1",
                                "eu_stockholm_1",
                                "eu_zurich_1",
                                "me_abudhabi_1",
                                "me_dubai_1",
                                "uk_london_1",
                                "uk_cardiff_1",
                                "us_ashburn_1",
                                "us_phoenix_1",
                                "us_sanjose_1",
                                "us_gov_ashburn_1",
                                "us_gov_chicago_1",
                                "us_gov_phoenix_1",
                                "us_langley_1",
                                "us_luke_1",
                                "uk_gov_london_1",
                                "uk_gov_cardiff_1"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityVpc"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/azure-vnets": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetVnetsASync",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityAzureCounterView"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/google-networks": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetGoogleNetworksAsync",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityGoogleCounterView"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/cloud-accounts": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetCloudAccountsMetaDataASync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityCloudAccountsContainer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/aws-regions": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetRegion",
                "parameters": [
                    {
                        "name": "externalAccountNumber",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityRegion"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/azure-regions": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetAzureRegion",
                "parameters": [
                    {
                        "name": "SubscriptionId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityRegion"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/google-regions": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetGoogleRegion",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityRegion"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/security-groups": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetSecurityGroupsAsync",
                "parameters": [
                    {
                        "name": "externalAccountNumber",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vpcId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Controllers-ClaritySecurityGroupsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/azure-security-groups": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetAzureAssetsSecurityGroupsAsync",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "vnetId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Views-Clarity-ClarityAssetsForSecurityGroupsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/ec2-classic-security-groups": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetEc2ClassicSecurityGroupsAsync",
                "parameters": [
                    {
                        "name": "externalAccountNumber",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "us_east_1",
                                "us_west_1",
                                "eu_west_1",
                                "ap_southeast_1",
                                "ap_northeast_1",
                                "us_west_2",
                                "sa_east_1",
                                "az_1_region_a_geo_1",
                                "az_2_region_a_geo_1",
                                "az_3_region_a_geo_1",
                                "ap_southeast_2",
                                "mellanox_region",
                                "us_gov_west_1",
                                "eu_central_1",
                                "ap_northeast_2",
                                "ap_south_1",
                                "us_east_2",
                                "ca_central_1",
                                "eu_west_2",
                                "eu_west_3",
                                "eu_north_1",
                                "cn_north_1",
                                "cn_northwest_1",
                                "us_gov_east_1",
                                "ap_east_1",
                                "me_south_1",
                                "af_south_1",
                                "eu_south_1",
                                "ap_northeast_3",
                                "me_central_1",
                                "ap_south_2",
                                "ap_southeast_3",
                                "ap_southeast_4",
                                "eu_central_2",
                                "eu_south_2",
                                "il_central_1",
                                "westus",
                                "eastus",
                                "eastus2",
                                "northcentralus",
                                "westus2",
                                "southcentralus",
                                "centralus",
                                "usgovlowa",
                                "usgovvirginia",
                                "northeurope",
                                "westeurope",
                                "eastasia",
                                "southeastasia",
                                "japaneast",
                                "japanwest",
                                "brazilsouth",
                                "australiaeast",
                                "australiasoutheast",
                                "centralindia",
                                "southindia",
                                "westindia",
                                "canadaeast",
                                "westcentralus",
                                "chinaeast",
                                "chinanorth",
                                "canadacentral",
                                "germanycentral",
                                "germanynortheast",
                                "koreacentral",
                                "uksouth",
                                "ukwest",
                                "koreasouth",
                                "francecentral",
                                "francesouth",
                                "germanywestcentral",
                                "usdodcentral",
                                "usdodeast",
                                "usgovarizona",
                                "usgovtexas",
                                "australiacentral",
                                "australiacentral2",
                                "chinaeast2",
                                "chinanorth2",
                                "southafricanorth",
                                "southafricawest",
                                "uaecentral",
                                "uaenorth",
                                "ussecwest",
                                "usseceast",
                                "germanynorth",
                                "switzerlandwest",
                                "norwaywest",
                                "norwayeast",
                                "switzerlandnorth",
                                "westus3",
                                "swedencentral",
                                "chinanorth3",
                                "brazilsoutheast",
                                "eastus2euap",
                                "jioindiawest",
                                "jioindiacentral",
                                "qatarcentral",
                                "asia",
                                "asia_east1",
                                "asia_northeast1",
                                "asia_south1",
                                "asia_southeast1",
                                "australia_southeast1",
                                "europe",
                                "europe_north1",
                                "europe_west1",
                                "europe_west2",
                                "europe_west3",
                                "europe_west4",
                                "northamerica_northeast1",
                                "southamerica_east1",
                                "us",
                                "us_central1",
                                "us_east1",
                                "us_east4",
                                "us_west1",
                                "us_west2",
                                "global",
                                "asia_east2",
                                "eur4",
                                "nam4",
                                "europe_west6",
                                "japan_west",
                                "asia_northeast2",
                                "asia_northeast3",
                                "us_west3",
                                "us_west4",
                                "asia_southeast2",
                                "nam3",
                                "nam5",
                                "nam6",
                                "nam7",
                                "nam10",
                                "nam_eur_asia1",
                                "eur3",
                                "eur5",
                                "asia1",
                                "nam11",
                                "eu",
                                "northamerica_northeast2",
                                "southamerica_west1",
                                "us_east5",
                                "us_south1",
                                "europe_central2",
                                "europe_southwest1",
                                "europe_west8",
                                "europe_west9",
                                "europe_west10",
                                "europe_west12",
                                "asia_south2",
                                "australia_southeast2",
                                "me_central1",
                                "me_central2",
                                "me_west1",
                                "ap_sydney_1",
                                "ap_melbourne_1",
                                "sa_saopaulo_1",
                                "sa_vinhedo_1",
                                "ca_montreal_1",
                                "ca_toronto_1",
                                "sa_santiago_1",
                                "eu_paris_1",
                                "eu_marseille_1",
                                "eu_frankfurt_1",
                                "ap_hyderabad_1",
                                "ap_mumbai_1",
                                "il_jerusalem_1",
                                "eu_milan_1",
                                "ap_osaka_1",
                                "ap_tokyo_1",
                                "mx_queretaro_1",
                                "eu_amsterdam_1",
                                "me_jeddah_1",
                                "ap_singapore_1",
                                "af_johannesburg_1",
                                "ap_seoul_1",
                                "ap_chuncheon_1",
                                "eu_madrid_1",
                                "eu_stockholm_1",
                                "eu_zurich_1",
                                "me_abudhabi_1",
                                "me_dubai_1",
                                "uk_london_1",
                                "uk_cardiff_1",
                                "us_ashburn_1",
                                "us_phoenix_1",
                                "us_sanjose_1",
                                "us_gov_ashburn_1",
                                "us_gov_chicago_1",
                                "us_gov_phoenix_1",
                                "us_langley_1",
                                "us_luke_1",
                                "uk_gov_london_1",
                                "uk_gov_cardiff_1"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Controllers-ClaritySecurityGroupsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/google-security-groups": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetGoogleAssetsGroupByNetworkAsync",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "network",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Views-Clarity-ClarityGoogleAssetsAndSgContainerViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/clarity/lambda-functions": {
            "get": {
                "tags": [
                    "Clarity"
                ],
                "operationId": "Clarity_GetLambdaFunctionsByVpc",
                "parameters": [
                    {
                        "name": "externalAccountNumber",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vpcId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudLambdaFunctionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudAcmCertificate": {
            "get": {
                "tags": [
                    "CloudAcmCertificate"
                ],
                "operationId": "CloudAcmCertificate_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-CloudAcmCertificateDetailViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudAmi": {
            "get": {
                "tags": [
                    "CloudAmi"
                ],
                "operationId": "CloudAmi_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudAmi-CloudEc2ImageViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudAmi/{id}": {
            "get": {
                "tags": [
                    "CloudAmi"
                ],
                "operationId": "CloudAmi_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CloudAmi-CloudEc2ImageViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudApplicationLoadBalancer": {
            "get": {
                "tags": [
                    "CloudApplicationLoadBalancer"
                ],
                "operationId": "CloudApplicationLoadBalancer_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudV2LoadBalancerViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudApplicationLoadBalancer/{id}": {
            "get": {
                "tags": [
                    "CloudApplicationLoadBalancer"
                ],
                "operationId": "CloudApplicationLoadBalancer_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudV2LoadBalancerViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudAutoScalingGroup": {
            "get": {
                "tags": [
                    "CloudAutoScalingGroup"
                ],
                "operationId": "CloudAutoScalingGroup_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudAutoScalingGroup-CloudAutoScalingGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudDbInstance": {
            "get": {
                "tags": [
                    "CloudDbInstance"
                ],
                "operationId": "CloudDbInstance_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudDbInstances-CloudDbInstanceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudDbInstance/{id}": {
            "get": {
                "tags": [
                    "CloudDbInstance"
                ],
                "operationId": "CloudDbInstance_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CloudDbInstances-CloudDbInstanceViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudDirectConnect/{directConnectId}/metrics": {
            "get": {
                "tags": [
                    "CloudDirectConnect"
                ],
                "summary": "Fetches the last day metrics for the given direct connect connection",
                "operationId": "CloudDirectConnect_GetMetrics",
                "parameters": [
                    {
                        "name": "directConnectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CloudDirectConnect-AwsDirectConnectMetricsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudDirectConnect": {
            "get": {
                "tags": [
                    "CloudDirectConnect"
                ],
                "operationId": "CloudDirectConnect_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudDirectConnect-CloudDirectConnectViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudDynamoDb": {
            "get": {
                "tags": [
                    "CloudDynamoDb"
                ],
                "operationId": "CloudDynamoDb_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableDescriptionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudEcsCluster": {
            "get": {
                "tags": [
                    "CloudEcsCluster"
                ],
                "operationId": "CloudEcsCluster_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudEcsClusterViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudEcsService/by-external-id-and-cloud-account": {
            "get": {
                "tags": [
                    "CloudEcsService"
                ],
                "operationId": "CloudEcsService_GetByExternalIdAndCloudAccountAsync",
                "parameters": [
                    {
                        "name": "externalId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CloudECSServiceViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudEcsService": {
            "get": {
                "tags": [
                    "CloudEcsService"
                ],
                "operationId": "CloudEcsService_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudECSServiceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudEcsTaskDefinition": {
            "get": {
                "tags": [
                    "CloudEcsTaskDefinition"
                ],
                "operationId": "CloudEcsTaskDefinition_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudEcsTaskDefinitionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudEfs": {
            "get": {
                "tags": [
                    "CloudEfs"
                ],
                "operationId": "CloudEfs_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudEfsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudEfs/{id}": {
            "get": {
                "tags": [
                    "CloudEfs"
                ],
                "operationId": "CloudEfs_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CloudEfsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudElastiCacheCluster": {
            "get": {
                "tags": [
                    "CloudElastiCacheCluster"
                ],
                "operationId": "CloudElastiCacheCluster_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudElastiCache-CloudElastiCacheClusterViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudFlowLogs": {
            "get": {
                "tags": [
                    "CloudFlowLogs"
                ],
                "operationId": "CloudFlowLogs_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudFlowLogs-CloudFlowLogsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudFrontDistribution": {
            "get": {
                "tags": [
                    "CloudFrontDistribution"
                ],
                "operationId": "CloudFrontDistribution_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudFront-CloudFrontDistributionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudGuardDutyDetector": {
            "get": {
                "tags": [
                    "CloudGuardDutyDetector"
                ],
                "operationId": "CloudGuardDutyDetector_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudGuardDutyDetector-CloudGuardDutyDetectorViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamAccountSummary": {
            "get": {
                "tags": [
                    "CloudIamAccountSummary"
                ],
                "operationId": "CloudIamAccountSummary_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudIamAccountSummary-CloudIamAccountSummaryViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamCredentialReport/user": {
            "get": {
                "tags": [
                    "CloudIamCredentialReport"
                ],
                "operationId": "CloudIamCredentialReport_GetUser",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "userName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudIamCredentialReport-CloudIamCredentialReportUserViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamCredentialReport": {
            "get": {
                "tags": [
                    "CloudIamCredentialReport"
                ],
                "operationId": "CloudIamCredentialReport_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudIamCredentialReport-CloudIamCredentialReportViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamGroup": {
            "get": {
                "tags": [
                    "CloudIamGroup"
                ],
                "operationId": "CloudIamGroup_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudIamGroups-CloudIamGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamPasswordPolicy": {
            "get": {
                "tags": [
                    "CloudIamPasswordPolicy"
                ],
                "summary": "Fetch all IAM roles for the user from all cloud accounts.",
                "operationId": "CloudIamPasswordPolicy_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudIamPasswordPolicy"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamPolicy/defaults": {
            "get": {
                "tags": [
                    "CloudIamPolicy"
                ],
                "summary": "Fetch all defaults IAM policies.",
                "operationId": "CloudIamPolicy_GetDefaultsAsync",
                "parameters": [
                    {
                        "name": "roleArns",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudIamPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamPolicy": {
            "get": {
                "tags": [
                    "CloudIamPolicy"
                ],
                "summary": "Fetch all IAM policies.",
                "operationId": "CloudIamPolicy_GetAsync",
                "parameters": [
                    {
                        "name": "roleArns",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "defaults",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudIamPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamRole": {
            "get": {
                "tags": [
                    "CloudIamRole"
                ],
                "summary": "Fetch all IAM roles for the user from all cloud accounts.",
                "operationId": "CloudIamRole_Get",
                "parameters": [
                    {
                        "name": "roleArns",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudIamRoleViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamServerCertificate": {
            "get": {
                "tags": [
                    "CloudIamServerCertificate"
                ],
                "operationId": "CloudIamServerCertificate_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudIamServerCertificate-CloudIamServerCertificateViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamUser": {
            "get": {
                "tags": [
                    "CloudIamUser"
                ],
                "summary": "Fetch all IAM users for the user from all cloud accounts.",
                "operationId": "CloudIamUser_GetAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudIamUserViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudIamVirtualMfaDevice": {
            "get": {
                "tags": [
                    "CloudIamVirtualMfaDevice"
                ],
                "operationId": "CloudIamVirtualMfaDevice_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudIamVirtualMfaDevices-CloudIamVirtualMfaDeviceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudInfraUser": {
            "get": {
                "tags": [
                    "CloudInfraUser"
                ],
                "operationId": "CloudInfraUser_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-CloudInfra-CloudInfraUserViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CloudInfraUser"
                ],
                "operationId": "CloudInfraUser_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAndRole-CreateCloudInfraUserResponseViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAndRole-CreateCloudInfraUserRequestViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAndRole-CreateCloudInfraUserRequestViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/cloudinstance/by-external-id-and-cloud-account": {
            "get": {
                "tags": [
                    "CloudInstance"
                ],
                "operationId": "CloudInstance_GetByIdAndCloudAccountAsync",
                "parameters": [
                    {
                        "name": "externalId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudInstanceViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/cloudinstance/guard-duty-findings": {
            "get": {
                "tags": [
                    "CloudInstance"
                ],
                "summary": "Fetch AWS GuardDuty findings for a specific AWS instance",
                "operationId": "CloudInstance_GetInstanceGuardDutyFindings",
                "parameters": [
                    {
                        "name": "cloudaccountid",
                        "in": "query",
                        "description": "the cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "the region containing the instanceid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "us_east_1",
                                "us_west_1",
                                "eu_west_1",
                                "ap_southeast_1",
                                "ap_northeast_1",
                                "us_west_2",
                                "sa_east_1",
                                "az_1_region_a_geo_1",
                                "az_2_region_a_geo_1",
                                "az_3_region_a_geo_1",
                                "ap_southeast_2",
                                "mellanox_region",
                                "us_gov_west_1",
                                "eu_central_1",
                                "ap_northeast_2",
                                "ap_south_1",
                                "us_east_2",
                                "ca_central_1",
                                "eu_west_2",
                                "eu_west_3",
                                "eu_north_1",
                                "cn_north_1",
                                "cn_northwest_1",
                                "us_gov_east_1",
                                "ap_east_1",
                                "me_south_1",
                                "af_south_1",
                                "eu_south_1",
                                "ap_northeast_3",
                                "me_central_1",
                                "ap_south_2",
                                "ap_southeast_3",
                                "ap_southeast_4",
                                "eu_central_2",
                                "eu_south_2",
                                "il_central_1",
                                "westus",
                                "eastus",
                                "eastus2",
                                "northcentralus",
                                "westus2",
                                "southcentralus",
                                "centralus",
                                "usgovlowa",
                                "usgovvirginia",
                                "northeurope",
                                "westeurope",
                                "eastasia",
                                "southeastasia",
                                "japaneast",
                                "japanwest",
                                "brazilsouth",
                                "australiaeast",
                                "australiasoutheast",
                                "centralindia",
                                "southindia",
                                "westindia",
                                "canadaeast",
                                "westcentralus",
                                "chinaeast",
                                "chinanorth",
                                "canadacentral",
                                "germanycentral",
                                "germanynortheast",
                                "koreacentral",
                                "uksouth",
                                "ukwest",
                                "koreasouth",
                                "francecentral",
                                "francesouth",
                                "germanywestcentral",
                                "usdodcentral",
                                "usdodeast",
                                "usgovarizona",
                                "usgovtexas",
                                "australiacentral",
                                "australiacentral2",
                                "chinaeast2",
                                "chinanorth2",
                                "southafricanorth",
                                "southafricawest",
                                "uaecentral",
                                "uaenorth",
                                "ussecwest",
                                "usseceast",
                                "germanynorth",
                                "switzerlandwest",
                                "norwaywest",
                                "norwayeast",
                                "switzerlandnorth",
                                "westus3",
                                "swedencentral",
                                "chinanorth3",
                                "brazilsoutheast",
                                "eastus2euap",
                                "jioindiawest",
                                "jioindiacentral",
                                "qatarcentral",
                                "asia",
                                "asia_east1",
                                "asia_northeast1",
                                "asia_south1",
                                "asia_southeast1",
                                "australia_southeast1",
                                "europe",
                                "europe_north1",
                                "europe_west1",
                                "europe_west2",
                                "europe_west3",
                                "europe_west4",
                                "northamerica_northeast1",
                                "southamerica_east1",
                                "us",
                                "us_central1",
                                "us_east1",
                                "us_east4",
                                "us_west1",
                                "us_west2",
                                "global",
                                "asia_east2",
                                "eur4",
                                "nam4",
                                "europe_west6",
                                "japan_west",
                                "asia_northeast2",
                                "asia_northeast3",
                                "us_west3",
                                "us_west4",
                                "asia_southeast2",
                                "nam3",
                                "nam5",
                                "nam6",
                                "nam7",
                                "nam10",
                                "nam_eur_asia1",
                                "eur3",
                                "eur5",
                                "asia1",
                                "nam11",
                                "eu",
                                "northamerica_northeast2",
                                "southamerica_west1",
                                "us_east5",
                                "us_south1",
                                "europe_central2",
                                "europe_southwest1",
                                "europe_west8",
                                "europe_west9",
                                "europe_west10",
                                "europe_west12",
                                "asia_south2",
                                "australia_southeast2",
                                "me_central1",
                                "me_central2",
                                "me_west1",
                                "ap_sydney_1",
                                "ap_melbourne_1",
                                "sa_saopaulo_1",
                                "sa_vinhedo_1",
                                "ca_montreal_1",
                                "ca_toronto_1",
                                "sa_santiago_1",
                                "eu_paris_1",
                                "eu_marseille_1",
                                "eu_frankfurt_1",
                                "ap_hyderabad_1",
                                "ap_mumbai_1",
                                "il_jerusalem_1",
                                "eu_milan_1",
                                "ap_osaka_1",
                                "ap_tokyo_1",
                                "mx_queretaro_1",
                                "eu_amsterdam_1",
                                "me_jeddah_1",
                                "ap_singapore_1",
                                "af_johannesburg_1",
                                "ap_seoul_1",
                                "ap_chuncheon_1",
                                "eu_madrid_1",
                                "eu_stockholm_1",
                                "eu_zurich_1",
                                "me_abudhabi_1",
                                "me_dubai_1",
                                "uk_london_1",
                                "uk_cardiff_1",
                                "us_ashburn_1",
                                "us_phoenix_1",
                                "us_sanjose_1",
                                "us_gov_ashburn_1",
                                "us_gov_chicago_1",
                                "us_gov_phoenix_1",
                                "us_langley_1",
                                "us_luke_1",
                                "uk_gov_london_1",
                                "uk_gov_cardiff_1"
                            ]
                        }
                    },
                    {
                        "name": "instanceid",
                        "in": "query",
                        "description": "the id of the instance",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyFindingsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/cloudinstance/{externalid}/sec-groups": {
            "post": {
                "tags": [
                    "CloudInstance"
                ],
                "summary": "Attach security Group to an AWS EC2 Instance",
                "operationId": "CloudInstance_AttachSecurityGroupToInstance",
                "parameters": [
                    {
                        "name": "externalid",
                        "in": "path",
                        "description": "the external id of the instance",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudInstanceSecurityGroupAttachDetachViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudInstanceSecurityGroupAttachDetachViewModel"
                            }
                        }
                    },
                    "description": "information to update",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "CloudInstance"
                ],
                "summary": "Detach security Group from an AWS EC2 Instance",
                "operationId": "CloudInstance_DetachSecurityGroupFromInstance",
                "parameters": [
                    {
                        "name": "externalid",
                        "in": "path",
                        "description": "details of the instance",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudInstanceSecurityGroupAttachDetachViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudInstanceSecurityGroupAttachDetachViewModel"
                            }
                        }
                    },
                    "description": "information to update",
                    "required": true
                }
            }
        },
        "/v2/CloudInstance": {
            "get": {
                "tags": [
                    "CloudInstance"
                ],
                "summary": "Fetch all AWS EC2 instances for the user from all cloud accounts.",
                "operationId": "CloudInstance_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudInstanceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudInstance/{id}": {
            "get": {
                "tags": [
                    "CloudInstance"
                ],
                "summary": "Fetch a specific AWS EC2 instance",
                "operationId": "CloudInstance_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The instance external ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudInstanceViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudInternetGateway": {
            "get": {
                "tags": [
                    "CloudInternetGateway"
                ],
                "operationId": "CloudInternetGateway_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudInternetGateways-CloudInternetGatewayViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudKinesisStream": {
            "get": {
                "tags": [
                    "CloudKinesisStream"
                ],
                "operationId": "CloudKinesisStream_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudKinesis-CloudKinesisStreamViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudKms": {
            "get": {
                "tags": [
                    "CloudKms"
                ],
                "operationId": "CloudKms_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudKms-CloudKmsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudKmsAlias": {
            "get": {
                "tags": [
                    "CloudKmsAlias"
                ],
                "operationId": "CloudKmsAlias_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudKms-CloudKmsAliasViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudLambdaFunction/by-external-id-and-cloud-account": {
            "get": {
                "tags": [
                    "CloudLambdaFunction"
                ],
                "operationId": "CloudLambdaFunction_GetByExternalIdAndCloudAccountAsync",
                "parameters": [
                    {
                        "name": "externalId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudLambdaFunctionViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudLambdaFunction": {
            "get": {
                "tags": [
                    "CloudLambdaFunction"
                ],
                "operationId": "CloudLambdaFunction_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudLambdaFunctionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudLambdaFunction/{id}": {
            "get": {
                "tags": [
                    "CloudLambdaFunction"
                ],
                "operationId": "CloudLambdaFunction_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudLambdaFunctionViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudLoadBalancer": {
            "get": {
                "tags": [
                    "CloudLoadBalancer"
                ],
                "summary": "Fetch all cloud instances for the user from all cloud accounts.",
                "operationId": "CloudLoadBalancer_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudLoadBalancerViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudLoadBalancer/{id}": {
            "get": {
                "tags": [
                    "CloudLoadBalancer"
                ],
                "operationId": "CloudLoadBalancer_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudLoadBalancerViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudLogGroups": {
            "get": {
                "tags": [
                    "CloudLogGroups"
                ],
                "operationId": "CloudLogGroups_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudLogGroups-CloudLogGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudMetricAlarm": {
            "get": {
                "tags": [
                    "CloudMetricAlarm"
                ],
                "operationId": "CloudMetricAlarm_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudMetricAlarms-CloudMetricAlarmViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudNacl": {
            "get": {
                "tags": [
                    "CloudNacl"
                ],
                "summary": "Fetch all cloud subnets for the user from all cloud accounts.",
                "operationId": "CloudNacl_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudNaclViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudNetworkInterfaces": {
            "get": {
                "tags": [
                    "CloudNetworkInterfaces"
                ],
                "operationId": "CloudNetworkInterfaces_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudNetworkInerfaces-CloudNetworkInterfaceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudNetworkLoadBalancer": {
            "get": {
                "tags": [
                    "CloudNetworkLoadBalancer"
                ],
                "operationId": "CloudNetworkLoadBalancer_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudV2LoadBalancerViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudNetworkLoadBalancer/{id}": {
            "get": {
                "tags": [
                    "CloudNetworkLoadBalancer"
                ],
                "operationId": "CloudNetworkLoadBalancer_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudV2LoadBalancerViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudRedshiftCluster": {
            "get": {
                "tags": [
                    "CloudRedshiftCluster"
                ],
                "operationId": "CloudRedshiftCluster_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudRedshiftClusterViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudRedshiftCluster/{id}": {
            "get": {
                "tags": [
                    "CloudRedshiftCluster"
                ],
                "operationId": "CloudRedshiftCluster_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudRedshiftClusterViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudRegion": {
            "get": {
                "tags": [
                    "CloudRegion"
                ],
                "operationId": "CloudRegion_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudAwsRegion-CloudRegionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudRoute53Domain": {
            "get": {
                "tags": [
                    "CloudRoute53Domain"
                ],
                "operationId": "CloudRoute53Domain_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudRoute53-CloudRoute53DomainViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudRoute53Domain/{id}": {
            "get": {
                "tags": [
                    "CloudRoute53Domain"
                ],
                "operationId": "CloudRoute53Domain_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CloudRoute53-CloudRoute53DomainViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudRoute53HostedZone": {
            "get": {
                "tags": [
                    "CloudRoute53HostedZone"
                ],
                "operationId": "CloudRoute53HostedZone_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudRoute53-CloudRoute53HostedZoneViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudRoute53RecordSetGroup": {
            "get": {
                "tags": [
                    "CloudRoute53RecordSetGroup"
                ],
                "operationId": "CloudRoute53RecordSetGroup_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudRoute53-CloudRoute53RecordSetGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudRouteTable": {
            "get": {
                "tags": [
                    "CloudRouteTable"
                ],
                "operationId": "CloudRouteTable_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudRouteTables-CloudRouteTableViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudS3Bucket": {
            "get": {
                "tags": [
                    "CloudS3Bucket"
                ],
                "operationId": "CloudS3Bucket_Get",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudS3BucketViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/cloudsecuritygroup/{id}": {
            "get": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Get a specific AWS security group",
                "operationId": "CloudSecurityGroup_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the AWS security group id ( internal ID / AWS securiy group ID)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "the security group cloud account ID (Optional)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudSecurityGroupWithSrlViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Update an AWS security group",
                "operationId": "CloudSecurityGroup_Put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the AWS security group id ( Internal Id / AWS Security group id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupViewModel"
                            }
                        }
                    },
                    "description": "updated details for the security group",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Delete an AWS security group",
                "operationId": "CloudSecurityGroup_DeleteCloudSecurityGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the AWS security group id ( Internal Id / AWS Security group id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Updates an AWS security group protection mode",
                "operationId": "CloudSecurityGroup_UpdateSecGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the AWS security group id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupViewModel"
                            }
                        }
                    },
                    "description": "updated details for the security group. only 'IsProtected' is used in this call which defines whether to protect or unprotect the security group.",
                    "required": true
                }
            }
        },
        "/v2/cloudsecuritygroup/{id}/protection-mode": {
            "post": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Change the protection mode for an AWS security group",
                "operationId": "CloudSecurityGroup_ChangeProtectionMode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the AWS security group id ( internal ID / AWS security group ID)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupProtectionModeChangeViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupProtectionModeChangeViewModel"
                            }
                        }
                    },
                    "description": "details for the security group, including the protection mode. Only 'ProtectionMode' is required in this call (FullManage or ReadOnly).",
                    "required": true
                }
            }
        },
        "/v2/cloudsecuritygroup/{groupid}/services/{policyType}": {
            "put": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Update a service (rule) for an AWS security group",
                "operationId": "CloudSecurityGroup_UpdateServiceForCloudToSecurityGroup",
                "parameters": [
                    {
                        "name": "groupid",
                        "in": "path",
                        "description": "the security group id ( internal ID / AWS security group id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "policyType",
                        "in": "path",
                        "description": "the service type (Inbound / Outbound)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Inbound",
                                "Outbound"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                            }
                        }
                    },
                    "description": "updated details for the service",
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Creat a new Service (rule) for the security group",
                "operationId": "CloudSecurityGroup_AddServiceCloudToSecurityGroup",
                "parameters": [
                    {
                        "name": "groupid",
                        "in": "path",
                        "description": "the security group id ( internal ID / AWS security group id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "policyType",
                        "in": "path",
                        "description": "the service type (Inbound / Outbound))",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Inbound",
                                "Outbound"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                            }
                        }
                    },
                    "description": "details for the service",
                    "required": true
                }
            }
        },
        "/v2/cloudsecuritygroup/{groupid}/services/{policyType}/{serviceid}": {
            "delete": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Delete a service from an AWS security group",
                "operationId": "CloudSecurityGroup_DeleteServiceForCloudToSecurityGroup",
                "parameters": [
                    {
                        "name": "groupid",
                        "in": "path",
                        "description": "the security group id ( internal ID / AWS security group id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "policyType",
                        "in": "path",
                        "description": "the service type (Inbound / Outbound)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Inbound",
                                "Outbound"
                            ]
                        }
                    },
                    {
                        "name": "serviceid",
                        "in": "path",
                        "description": "the service id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/cloudsecuritygroup/{groupid}/tags": {
            "post": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Update the list of tags for an AWS securitry group",
                "operationId": "CloudSecurityGroup_UpdateTags",
                "parameters": [
                    {
                        "name": "groupid",
                        "in": "path",
                        "description": "the security group id ( internal ID / AWS security group id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupTagsChangeViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupTagsChangeViewModel"
                            }
                        }
                    },
                    "description": "the updated list of tags and their values",
                    "required": true
                }
            }
        },
        "/v2/cloudsecuritygroup/{groupid}/history": {
            "get": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Get the list of group revisions and their corresponding events for an AWS security group.",
                "operationId": "CloudSecurityGroup_GetSecurityGroupRevisionHistory",
                "parameters": [
                    {
                        "name": "groupid",
                        "in": "path",
                        "description": "the security group id ( internal ID / AWS security group id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "max number of revisions to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudSecurityGroupRevisionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudSecurityGroup": {
            "get": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Get AWS security groups for a specific cloud account and region",
                "operationId": "CloudSecurityGroup_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "the cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "regionId",
                        "in": "query",
                        "description": "the region",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudSecurityGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CloudSecurityGroup"
                ],
                "summary": "Create a new AWS security group",
                "operationId": "CloudSecurityGroup_CreateCloudSecurityGroup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-CloudSecurityGroupViewModel"
                            }
                        }
                    },
                    "description": "details for the new AWS security group",
                    "required": true
                }
            }
        },
        "/v2/CloudSnsSubscription/{cloudAccountId}": {
            "get": {
                "tags": [
                    "CloudSnsSubscription"
                ],
                "operationId": "CloudSnsSubscription_GetByTopic",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topicArn",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudSnsSubscriptions-CloudSnsSubscriptionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudSnsSubscription": {
            "get": {
                "tags": [
                    "CloudSnsSubscription"
                ],
                "operationId": "CloudSnsSubscription_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudSnsSubscriptions-CloudSnsSubscriptionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudSnsTopic": {
            "get": {
                "tags": [
                    "CloudSnsTopic"
                ],
                "operationId": "CloudSnsTopic_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudSnsTopics-CloudSnsTopicViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudSql": {
            "get": {
                "tags": [
                    "CloudSql"
                ],
                "operationId": "CloudSql_Get",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlInstanceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudSqs": {
            "get": {
                "tags": [
                    "CloudSqs"
                ],
                "operationId": "CloudSqs_Get",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudSqsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudSubnet": {
            "get": {
                "tags": [
                    "CloudSubnet"
                ],
                "summary": "Fetch all cloud subnets for the user from all cloud accounts.",
                "operationId": "CloudSubnet_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudSubnetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudTrail": {
            "get": {
                "tags": [
                    "CloudTrail"
                ],
                "summary": "Get CloudTrail events for a  user",
                "operationId": "CloudTrail_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudTrail-CloudTrailViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudVolume": {
            "get": {
                "tags": [
                    "CloudVolume"
                ],
                "operationId": "CloudVolume_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudVolume-CloudVolumeViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudVpc": {
            "get": {
                "tags": [
                    "CloudVpc"
                ],
                "summary": "Fetch all cloud instances for the user from all cloud accounts.",
                "operationId": "CloudVpc_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudVpcViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudVpc/{id}": {
            "get": {
                "tags": [
                    "CloudVpc"
                ],
                "operationId": "CloudVpc_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "us_east_1",
                                "us_west_1",
                                "eu_west_1",
                                "ap_southeast_1",
                                "ap_northeast_1",
                                "us_west_2",
                                "sa_east_1",
                                "az_1_region_a_geo_1",
                                "az_2_region_a_geo_1",
                                "az_3_region_a_geo_1",
                                "ap_southeast_2",
                                "mellanox_region",
                                "us_gov_west_1",
                                "eu_central_1",
                                "ap_northeast_2",
                                "ap_south_1",
                                "us_east_2",
                                "ca_central_1",
                                "eu_west_2",
                                "eu_west_3",
                                "eu_north_1",
                                "cn_north_1",
                                "cn_northwest_1",
                                "us_gov_east_1",
                                "ap_east_1",
                                "me_south_1",
                                "af_south_1",
                                "eu_south_1",
                                "ap_northeast_3",
                                "me_central_1",
                                "ap_south_2",
                                "ap_southeast_3",
                                "ap_southeast_4",
                                "eu_central_2",
                                "eu_south_2",
                                "il_central_1",
                                "westus",
                                "eastus",
                                "eastus2",
                                "northcentralus",
                                "westus2",
                                "southcentralus",
                                "centralus",
                                "usgovlowa",
                                "usgovvirginia",
                                "northeurope",
                                "westeurope",
                                "eastasia",
                                "southeastasia",
                                "japaneast",
                                "japanwest",
                                "brazilsouth",
                                "australiaeast",
                                "australiasoutheast",
                                "centralindia",
                                "southindia",
                                "westindia",
                                "canadaeast",
                                "westcentralus",
                                "chinaeast",
                                "chinanorth",
                                "canadacentral",
                                "germanycentral",
                                "germanynortheast",
                                "koreacentral",
                                "uksouth",
                                "ukwest",
                                "koreasouth",
                                "francecentral",
                                "francesouth",
                                "germanywestcentral",
                                "usdodcentral",
                                "usdodeast",
                                "usgovarizona",
                                "usgovtexas",
                                "australiacentral",
                                "australiacentral2",
                                "chinaeast2",
                                "chinanorth2",
                                "southafricanorth",
                                "southafricawest",
                                "uaecentral",
                                "uaenorth",
                                "ussecwest",
                                "usseceast",
                                "germanynorth",
                                "switzerlandwest",
                                "norwaywest",
                                "norwayeast",
                                "switzerlandnorth",
                                "westus3",
                                "swedencentral",
                                "chinanorth3",
                                "brazilsoutheast",
                                "eastus2euap",
                                "jioindiawest",
                                "jioindiacentral",
                                "qatarcentral",
                                "asia",
                                "asia_east1",
                                "asia_northeast1",
                                "asia_south1",
                                "asia_southeast1",
                                "australia_southeast1",
                                "europe",
                                "europe_north1",
                                "europe_west1",
                                "europe_west2",
                                "europe_west3",
                                "europe_west4",
                                "northamerica_northeast1",
                                "southamerica_east1",
                                "us",
                                "us_central1",
                                "us_east1",
                                "us_east4",
                                "us_west1",
                                "us_west2",
                                "global",
                                "asia_east2",
                                "eur4",
                                "nam4",
                                "europe_west6",
                                "japan_west",
                                "asia_northeast2",
                                "asia_northeast3",
                                "us_west3",
                                "us_west4",
                                "asia_southeast2",
                                "nam3",
                                "nam5",
                                "nam6",
                                "nam7",
                                "nam10",
                                "nam_eur_asia1",
                                "eur3",
                                "eur5",
                                "asia1",
                                "nam11",
                                "eu",
                                "northamerica_northeast2",
                                "southamerica_west1",
                                "us_east5",
                                "us_south1",
                                "europe_central2",
                                "europe_southwest1",
                                "europe_west8",
                                "europe_west9",
                                "europe_west10",
                                "europe_west12",
                                "asia_south2",
                                "australia_southeast2",
                                "me_central1",
                                "me_central2",
                                "me_west1",
                                "ap_sydney_1",
                                "ap_melbourne_1",
                                "sa_saopaulo_1",
                                "sa_vinhedo_1",
                                "ca_montreal_1",
                                "ca_toronto_1",
                                "sa_santiago_1",
                                "eu_paris_1",
                                "eu_marseille_1",
                                "eu_frankfurt_1",
                                "ap_hyderabad_1",
                                "ap_mumbai_1",
                                "il_jerusalem_1",
                                "eu_milan_1",
                                "ap_osaka_1",
                                "ap_tokyo_1",
                                "mx_queretaro_1",
                                "eu_amsterdam_1",
                                "me_jeddah_1",
                                "ap_singapore_1",
                                "af_johannesburg_1",
                                "ap_seoul_1",
                                "ap_chuncheon_1",
                                "eu_madrid_1",
                                "eu_stockholm_1",
                                "eu_zurich_1",
                                "me_abudhabi_1",
                                "me_dubai_1",
                                "uk_london_1",
                                "uk_cardiff_1",
                                "us_ashburn_1",
                                "us_phoenix_1",
                                "us_sanjose_1",
                                "us_gov_ashburn_1",
                                "us_gov_chicago_1",
                                "us_gov_phoenix_1",
                                "us_langley_1",
                                "us_luke_1",
                                "uk_gov_london_1",
                                "uk_gov_cardiff_1"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-CloudVpcViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudVpcPeeringConnection": {
            "get": {
                "tags": [
                    "CloudVpcPeeringConnection"
                ],
                "operationId": "CloudVpcPeeringConnection_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-CloudVpcPeeringConnectionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudVPNConnection": {
            "get": {
                "tags": [
                    "CloudVPNConnection"
                ],
                "operationId": "CloudVPNConnection_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AwsVPNConnectionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudVpnGateway": {
            "get": {
                "tags": [
                    "CloudVpnGateway"
                ],
                "operationId": "CloudVpnGateway_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudDirectConnect-AwsVpnGatewayViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudWAFRegional": {
            "get": {
                "tags": [
                    "CloudWAFRegional"
                ],
                "operationId": "CloudWAFRegional_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-AwsWAFRegionalViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/CloudWatchEventsRule": {
            "get": {
                "tags": [
                    "CloudWatchEventsRule"
                ],
                "operationId": "CloudWatchEventsRule_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EventRule-EventRuleViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Exclusion": {
            "get": {
                "tags": [
                    "ComplianceExclusion"
                ],
                "summary": "Get a list of exclusions for the account",
                "operationId": "ComplianceExclusion_GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExclusionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ComplianceExclusion"
                ],
                "operationId": "ComplianceExclusion_Post",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExclusionPostRequestModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExclusionViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ComplianceExclusion"
                ],
                "operationId": "ComplianceExclusion_Put",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExclusionPutRequestModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExclusionViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ComplianceExclusion"
                ],
                "operationId": "ComplianceExclusion_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/Compliance/Remediation": {
            "get": {
                "tags": [
                    "ComplianceRemediation"
                ],
                "summary": "Get a list of remediations for the account",
                "operationId": "ComplianceRemediation_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-Remediation-RemediationViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ComplianceRemediation"
                ],
                "summary": "Update a remediation",
                "operationId": "ComplianceRemediation_Put",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Remediation-RemediationViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Remediation-RemediationPutRequestModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Remediation-RemediationPutRequestModel"
                            }
                        }
                    },
                    "description": "details for the remediation",
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "ComplianceRemediation"
                ],
                "summary": "Add a new remediation",
                "operationId": "ComplianceRemediation_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Remediation-RemediationViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Remediation-RemediationPostRequestModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Remediation-RemediationPostRequestModel"
                            }
                        }
                    },
                    "description": "details for the remediation",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "ComplianceRemediation"
                ],
                "summary": "Delete a remediation",
                "operationId": "ComplianceRemediation_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the id of the remediation to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/ComplianceRemediation": {
            "get": {
                "tags": [
                    "ComplianceRemediationOld"
                ],
                "summary": "Get a list of remediations for the account",
                "operationId": "ComplianceRemediationOld_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-RemediationOld-RemediationGetOldViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ComplianceRemediationOld"
                ],
                "summary": "Update a remediation",
                "operationId": "ComplianceRemediationOld_Put",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-RemediationOld-RemediationGetOldViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-RemediationOld-RemediationGetOldViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-RemediationOld-RemediationGetOldViewModel"
                            }
                        }
                    },
                    "description": "details for the remediation",
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "ComplianceRemediationOld"
                ],
                "summary": "Add a new remediation",
                "operationId": "ComplianceRemediationOld_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-RemediationOld-RemediationGetOldViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-RemediationOld-RemediationPostOldViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-RemediationOld-RemediationPostOldViewModel"
                            }
                        }
                    },
                    "description": "details for the remediation",
                    "required": true
                }
            }
        },
        "/v2/ComplianceRemediation/{id}": {
            "delete": {
                "tags": [
                    "ComplianceRemediationOld"
                ],
                "summary": "Delete a remediation",
                "operationId": "ComplianceRemediationOld_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the id of the remediation to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/Compliance/Ruleset": {
            "post": {
                "tags": [
                    "ComplianceRuleset"
                ],
                "summary": "Create a new ruleset",
                "operationId": "ComplianceRuleset_CreateRuleBundle",
                "requestBody": {
                    "x-name": "ruleBudleViewModel",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RuleBundleRequestPostViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleBundleResultViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "ComplianceRuleset"
                ],
                "summary": "Get all rulesets for the account",
                "operationId": "ComplianceRuleset_GetAccountBundles",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RuleBundleResultViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Ruleset/{id}": {
            "put": {
                "tags": [
                    "ComplianceRuleset"
                ],
                "summary": "Update a Ruleset",
                "operationId": "ComplianceRuleset_UpdateRuleBundle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the bundle id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "ruleBudleViewModel",
                    "description": "bundle definition",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RuleBundleRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleBundleResultViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "ComplianceRuleset"
                ],
                "summary": "Get a specific ruleset",
                "operationId": "ComplianceRuleset_GetBundleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the bundle id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleBundleResultViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ComplianceRuleset"
                ],
                "summary": "Delete a ruleset in the account",
                "operationId": "ComplianceRuleset_DeleteBundle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the bundle id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification/{id}": {
            "get": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Get a Notification policy",
                "operationId": "ContinuousComplianceNotification_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the policy id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationGetViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Update a Notification policy",
                "operationId": "ContinuousComplianceNotification_Put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the policy id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationPutViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationPutViewModel"
                            }
                        }
                    },
                    "description": "updated details for the policy",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Delete a Notification policy",
                "operationId": "ContinuousComplianceNotification_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the policy id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification": {
            "get": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Get all Notification policies",
                "operationId": "ContinuousComplianceNotification_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationGetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Create a new Notification policy",
                "operationId": "ContinuousComplianceNotification_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationPostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationPostViewModel"
                            }
                        }
                    },
                    "description": "details for the policy",
                    "required": true
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification/get-by-name": {
            "get": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Get a Notification policy",
                "operationId": "ContinuousComplianceNotification_GetByName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "the notification name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification/PublishOpenedFindings/{id}": {
            "post": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Publish (notify) all findings for a specific policy.\r\nThis method is used to sync (send) all existing findings via the designated SNS topic assigned to this notification policy.<br />\r\nIt is mostly used for testing of automatic remediation actions (see: https://cloudbots..com/)",
                "operationId": "ContinuousComplianceNotification_PublishOpenedFindingsByPolicyIdAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The policy id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BL-Std-Services-ContinuousAssessment-ContinuousComplianceNotificationService-PublishResult"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationSyncViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationSyncViewModel"
                            }
                        }
                    },
                    "description": "Updated details for the policy",
                    "required": true
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification/securityhub/test": {
            "post": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "operationId": "ContinuousComplianceNotification_TestSecurityHubAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiContinuousComplianceNotification-WebApi-Models-TestResultsSecurityHubViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-TestSecurityHubViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-TestSecurityHubViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification/cscc/test": {
            "get": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "operationId": "ContinuousComplianceNotification_TestCloudSecurityCommandCenterFindingAsync",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "sourceId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification/eventarcChannelConnection": {
            "post": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Create Eventarc channel connection",
                "operationId": "ContinuousComplianceNotification_CreateEventArcChannelConnection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Platform-EventArc-Model-EventArcConnectionChannelViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Platform-EventArc-Model-EventArcConnectionChannelViewModel"
                            }
                        }
                    },
                    "description": "Eventarc channel connection view model",
                    "required": true
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification/webhookJiraTokens": {
            "get": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Gets all the webhook Jira's tokens",
                "operationId": "ContinuousComplianceNotification_WebhookJiraTokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification/CircuitBreaker": {
            "get": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Gets all the notifications that have at least one integration issue",
                "operationId": "ContinuousComplianceNotification_GetAllCircuitBreakerAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceCircuitBreakerGetAllViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification/CircuitBreaker/{id}": {
            "get": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Gets all the integration issues of the given notification",
                "operationId": "ContinuousComplianceNotification_GetCircuitBreakerAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "notification id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceCircuitBreakerGetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/ContinuousComplianceNotification/CircuitBreaker/{id}/{integrationType}": {
            "delete": {
                "tags": [
                    "ContinuousComplianceNotification"
                ],
                "summary": "Deletes the integration issue of the given notification and integration",
                "operationId": "ContinuousComplianceNotification_DeleteCircuitBreakerAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "notification id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "integrationType",
                        "in": "path",
                        "description": "the integration, eg. AwsSecurityHub",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Sns",
                                "EmailPerFinding",
                                "IndexElasticSearch",
                                "PagerDuty",
                                "AwsSecurityHub",
                                "GcpSecurityCommandCenter",
                                "Webhook",
                                "AzureSecurityCenter",
                                "Slack",
                                "AggregatedEmail",
                                "Teams",
                                "Eventarc",
                                "SlackSingleMessage",
                                "TeamsSingleMessage"
                            ]
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/Compliance/ContinuousCompliancePolicy/{id}": {
            "get": {
                "tags": [
                    "ContinuousCompliancePolicy"
                ],
                "summary": "Get a specific compliance policy",
                "operationId": "ContinuousCompliancePolicy_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the policy id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyGetViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ContinuousCompliancePolicy"
                ],
                "summary": "Update a compliance policy",
                "operationId": "ContinuousCompliancePolicy_Put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the policy id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyPutViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyPutViewModel"
                            }
                        }
                    },
                    "description": "details for the policy",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "ContinuousCompliancePolicy"
                ],
                "summary": "Delete a compliance policy",
                "operationId": "ContinuousCompliancePolicy_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the policy id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/Compliance/ContinuousCompliancePolicy": {
            "get": {
                "tags": [
                    "ContinuousCompliancePolicy"
                ],
                "summary": "Get all compliance policies for the account",
                "operationId": "ContinuousCompliancePolicy_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyGetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ContinuousCompliancePolicy"
                ],
                "summary": "Create a new compliance policy",
                "operationId": "ContinuousCompliancePolicy_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyPostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyPostViewModel"
                            }
                        }
                    },
                    "description": "details for the policy",
                    "required": true
                }
            }
        },
        "/v2/Compliance/ContinuousCompliancePolicy/ContinuousCompliancePolicies": {
            "post": {
                "tags": [
                    "ContinuousCompliancePolicy"
                ],
                "summary": "Create new compliance policies",
                "operationId": "ContinuousCompliancePolicy_CreateContinuousCompliancePoliciesAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyGetViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyPostViewModel"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousCompliancePolicyPostViewModel"
                                }
                            }
                        }
                    },
                    "description": "details for the policies",
                    "required": true
                }
            }
        },
        "/v2/Compliance/ContinuousCompliancePolicyV2/EvaluateRulesetVersions": {
            "post": {
                "tags": [
                    "ContinuousCompliancePolicyV2"
                ],
                "summary": "Evaluate the ruleset version elected for each cloud account, based on the configured policies.",
                "operationId": "ContinuousCompliancePolicyV2_EvaluateRulesetVersionsAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliancePolicyV2-EvaluateRulesetVersionsRequestModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ContinuousCompliancePolicyV2-EvaluateRulesetVersionsRequestModel"
                            }
                        }
                    },
                    "description": "The ruleset id and version as well as a list of cloud accounts to evaluate ruleset version of configured polices.",
                    "required": true
                }
            }
        },
        "/v2/ContinuousCompliancePolicyV2/{id}": {
            "get": {
                "tags": [
                    "ContinuousCompliancePolicyV2"
                ],
                "summary": "Get single policy by its ID.\nReturns a policy matching a given ID.",
                "operationId": "ContinuousCompliancePolicyV2_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Policy's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContinuousCompliancePolicyViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ContinuousCompliancePolicyV2"
                ],
                "summary": "Delete policy by its ID.",
                "operationId": "ContinuousCompliancePolicyV2_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Policy's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/ContinuousCompliancePolicyV2": {
            "get": {
                "tags": [
                    "ContinuousCompliancePolicyV2"
                ],
                "summary": "Get single policy by its ID or Get All policies for the requesting account.\nReturns a policy matching a given ID or a collection of policies.",
                "operationId": "ContinuousCompliancePolicyV2_GetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Policy's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ContinuousCompliancePolicyV2"
                ],
                "summary": "Create new policies.\nReturns a multi status response containing successfully created policies without an error message and failed policies with an error message.",
                "operationId": "ContinuousCompliancePolicyV2_Post",
                "requestBody": {
                    "x-name": "continuousCompliancePolicyRequestModels",
                    "description": "Policies to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContinuousCompliancePolicyRequestModel"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContinuousCompliancePolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ContinuousCompliancePolicyV2"
                ],
                "summary": "Update policies.\nReturns a multi status response containing successfully updated policies without an error message and failed policies with an error message.",
                "operationId": "ContinuousCompliancePolicyV2_Put",
                "requestBody": {
                    "x-name": "continuousCompliancePolicyRequestModels",
                    "description": "Policies to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContinuousCompliancePolicyRequestModel"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContinuousCompliancePolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ContinuousCompliancePolicyV2"
                ],
                "summary": "Delete policy by its ID.",
                "operationId": "ContinuousCompliancePolicyV2_DeleteById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Policy's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/emergency-policy/timeout": {
            "put": {
                "tags": [
                    "EmergencyPolicy"
                ],
                "operationId": "EmergencyPolicy_UpdateEmergencyPolicyTimeout",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/emergency-policy/services/{id}": {
            "put": {
                "tags": [
                    "EmergencyPolicy"
                ],
                "operationId": "EmergencyPolicy_PutService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-ServicePortEditViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-ServicePortEditViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "EmergencyPolicy"
                ],
                "operationId": "EmergencyPolicy_DeleteService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/emergency-policy/services": {
            "post": {
                "tags": [
                    "EmergencyPolicy"
                ],
                "operationId": "EmergencyPolicy_PostService",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Models-ServicePortEditViewModel"
                }
            }
        },
        "/v2/emergency-policy": {
            "get": {
                "tags": [
                    "EmergencyPolicy"
                ],
                "operationId": "EmergencyPolicy_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-EmergencyPolicyViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "EmergencyPolicy"
                ],
                "operationId": "EmergencyPolicy_Patch",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-EmergencyPolicyPatchViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-EmergencyPolicyPatchViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/EntityFetchStatus": {
            "get": {
                "tags": [
                    "EntityFetchStatus"
                ],
                "summary": "",
                "operationId": "EntityFetchStatus_Get",
                "parameters": [
                    {
                        "name": "externalAccountNumber",
                        "in": "query",
                        "description": "[Required for an AWS account] AWS/Alibaba/OCI account number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriptionId",
                        "in": "query",
                        "description": "[Required for an Azure subscription]",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "[Required for a GCP project]",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "[Optional] This is the  CloudAccountId which can replace the AWS externalAccountNumber",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "The cloud account region. Note: the API expects '_' instead of '-' (Example: us_east_1)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resourceGroupName",
                        "in": "query",
                        "description": "Azure resource group name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityType",
                        "in": "query",
                        "description": "The desired cloud entity (type)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "workFlowId",
                        "in": "query",
                        "description": "(for internal use)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "GCP Location",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vendor",
                        "in": "query",
                        "description": "the cloud account vendor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EntityFetchStatus-FetcherRunStatusViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/EntityReport/Request/{cloudVendor}/{type}": {
            "post": {
                "tags": [
                    "EntityReport"
                ],
                "summary": "Post a request to export all assets held by CloudGuard .",
                "operationId": "EntityReport_GetByCloudAccountId",
                "parameters": [
                    {
                        "name": "cloudVendor",
                        "in": "path",
                        "description": "The cloud vendor.<br />Allowed values: AWS, Azure, GCP, Kubernetes.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The asset type for the report file.<br />Allowed values are the  Rule Target Types.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "description": "The  cloud accounts IDs for the report. Use empty array for all allowed cloud accounts report.",
                    "required": true
                }
            }
        },
        "/v2/EntityReport/Download/{reportRequestUuid}": {
            "get": {
                "tags": [
                    "EntityReport"
                ],
                "summary": "Get a CSV report file containing all cloud assets held by CloudGuard .",
                "operationId": "EntityReport_GetReport",
                "parameters": [
                    {
                        "name": "reportRequestUuid",
                        "in": "path",
                        "description": "The Entity Report request UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Exclusion": {
            "get": {
                "tags": [
                    "ExclusionOld"
                ],
                "summary": "Get a list of exclusions for the account",
                "operationId": "ExclusionOld_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-ExclusionOld-ExclusionGetOldViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ExclusionOld"
                ],
                "summary": "Update an exclusion",
                "operationId": "ExclusionOld_Put",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-ExclusionOld-ExclusionGetOldViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ExclusionOld-ExclusionGetOldViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ExclusionOld-ExclusionGetOldViewModel"
                            }
                        }
                    },
                    "description": "details for the exclusion",
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "ExclusionOld"
                ],
                "summary": "Add a new exclusion",
                "operationId": "ExclusionOld_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-ExclusionOld-ExclusionGetOldViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ExclusionOld-ExclusionPostOldViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-ExclusionOld-ExclusionPostOldViewModel"
                            }
                        }
                    },
                    "description": "details for the exclusion",
                    "required": true
                }
            }
        },
        "/v2/Exclusion/{id}": {
            "get": {
                "tags": [
                    "ExclusionOld"
                ],
                "summary": "Get details for a specific exclusion",
                "operationId": "ExclusionOld_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the id of the exclusion",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-ExclusionOld-ExclusionGetOldViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ExclusionOld"
                ],
                "summary": "Delete an exclusion",
                "operationId": "ExclusionOld_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the id of the exclusion to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/ExternalFindings/{id}/Archive": {
            "post": {
                "tags": [
                    "ExternalFindings"
                ],
                "summary": "Archive a specific external finding. The finding in  will be marked as 'archived', but not deleted. It will be searchable.",
                "operationId": "ExternalFindings_ArchiveExternalFinding",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the id of the alert (in )",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/ExternalFindings/Archive": {
            "post": {
                "tags": [
                    "ExternalFindings"
                ],
                "summary": "Archive selected external findings according filter settings. The findings will be marked as 'archived', but not deleted. They will be searchable.",
                "operationId": "ExternalFindings_ArchiveExternalFindings",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-ExternalFindingsOperationRequestViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-ExternalFindingsOperationRequestViewModel"
                            }
                        }
                    },
                    "description": "filter block, selecting external system, resource, cloud account id, and finding id",
                    "required": true
                }
            }
        },
        "/v2/ExternalFindings/search": {
            "post": {
                "tags": [
                    "ExternalFindings"
                ],
                "operationId": "ExternalFindings_Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalFindings-ExternalFindingPaginationViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/ExternalFindings": {
            "post": {
                "tags": [
                    "ExternalFindings"
                ],
                "summary": "Add a list  of findings to , from an external source. The findings will be labelled as external, but will be searchable as any other finding.\r\nFindings much have a unique findingId (per source).",
                "operationId": "ExternalFindings_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-ExternalFindingsResponseViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-ExternalFindingUpsertRequestViewModel"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-ExternalFindingUpsertRequestViewModel"
                                }
                            }
                        }
                    },
                    "description": "list of findings",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "ExternalFindings"
                ],
                "summary": "Delete selected external findings in . The findings will be permanently removed from  and will not be searchable.",
                "operationId": "ExternalFindings_DeleteExternalFindings",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-ExternalFindingsOperationRequestViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-ExternalFindingsOperationRequestViewModel"
                            }
                        }
                    },
                    "description": "&gt;filter block, selecting external system, resource, cloud account id, and finding id",
                    "required": true
                }
            }
        },
        "/v2/ExternalFindings/{id}": {
            "delete": {
                "tags": [
                    "ExternalFindings"
                ],
                "summary": "Delete a specific finding in . The finding will be permanently deleted, and will not be searchable.",
                "operationId": "ExternalFindings_DeleteExternalFinding",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the  id of the alert (in )",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/fim/ack": {
            "post": {
                "tags": [
                    "Fim"
                ],
                "operationId": "Fim_Acknowledge",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/Fim": {
            "get": {
                "tags": [
                    "Fim"
                ],
                "operationId": "Fim_Get",
                "parameters": [
                    {
                        "name": "filter.page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "filter.count",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "filter.key",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter.dir",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter.search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter.created",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filter.changed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filter.deleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filter.serverIdList",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    {
                        "name": "filter.date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-FimGetViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Finding/stats/aggregatedbyproperty": {
            "get": {
                "tags": [
                    "Finding"
                ],
                "summary": "Get aggregation per property",
                "operationId": "Finding_GetStatsByProperty",
                "parameters": [
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "origin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ComplianceEngine",
                                "Magellan",
                                "MagellanAwsGuardDuty",
                                "Serverless",
                                "AwsInspector",
                                "ServerlessSecurityAnalyzer",
                                "ExternalFindingSource",
                                "Qualys",
                                "Tenable",
                                "AwsGuardDuty",
                                "KubernetesImageScanning",
                                "KubernetesRuntimeAssurance",
                                "ContainersRuntimeProtection",
                                "WorkloadChangeMonitoring",
                                "ImageAssurance",
                                "SourceCodeAssurance",
                                "InfrastructureAsCode",
                                "CIEM",
                                "Incident"
                            ]
                        }
                    },
                    {
                        "name": "aggProperty",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingsStatsBySeverityViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Finding/bundle/{bundleId}/stats": {
            "get": {
                "tags": [
                    "Finding"
                ],
                "summary": "Get statistics for each rule in a bundle (number failures)",
                "operationId": "Finding_GetBundleStats",
                "parameters": [
                    {
                        "name": "bundleId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingsStatsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Finding/bundle/{bundleId}": {
            "get": {
                "tags": [
                    "Finding"
                ],
                "summary": "Get the findings for a specific rule in a bundle, for all of the user's accounts. Results are paged, so each request returns findings for a specific page.",
                "operationId": "Finding_GetFindings",
                "parameters": [
                    {
                        "name": "bundleId",
                        "in": "path",
                        "description": "the bundle id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ruleLogicHash",
                        "in": "query",
                        "description": "MD5 hash of the rule GSL string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "the findings page (findings are returned in pages, with pageSize findings in each page)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "the number of findings in a page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-Finding-BaseFindingViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Finding/{id}": {
            "get": {
                "tags": [
                    "Finding"
                ],
                "summary": "Get details for a specific finding, identified by its id.",
                "operationId": "Finding_GetFinding",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the finding id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Finding"
                ],
                "summary": "Delete finding originated in Magellan by id (Guid)",
                "operationId": "Finding_DeleteAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Finding ID (Guid)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Finding/getByKey": {
            "post": {
                "tags": [
                    "Finding"
                ],
                "summary": "Get details for a specific finding, identified by finding key.",
                "operationId": "Finding_GetFindingByKey",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-GetFindingByKeyViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-GetFindingByKeyViewModel"
                            }
                        }
                    },
                    "description": "finding key",
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/archive/{id}": {
            "delete": {
                "tags": [
                    "Finding"
                ],
                "summary": "Delete finding originated in Magellan by id (Guid)",
                "operationId": "Finding_DeleteAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Finding ID (Guid)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Finding/bulk/close": {
            "post": {
                "tags": [
                    "Finding"
                ],
                "summary": "Delete findings originated in Magellan by ids (Guid)",
                "operationId": "Finding_BulkDeleteAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Finding_BulkDeleteAsyncIds"
                }
            }
        },
        "/v2/Compliance/Finding/bulk/archive/close": {
            "post": {
                "tags": [
                    "Finding"
                ],
                "summary": "Delete findings originated in Magellan by ids (Guid)",
                "operationId": "Finding_BulkDeleteAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Finding_BulkDeleteAsyncIds"
                }
            }
        },
        "/v2/Compliance/Finding/selectAll/close": {
            "post": {
                "tags": [
                    "Finding"
                ],
                "summary": "Filter findings by account, region, VPC, IP, instance name..\r\nThen perform the action that selected - Delete findings originated in Magellan by ids (Guid).",
                "operationId": "Finding_SelectAllClose",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-SelectAllResponseViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Compliance-Finding-SelectAllRequestViewModel_Compliance-Models-ActionType_"
                }
            }
        },
        "/v2/Compliance/Finding/selectAll/archive/close": {
            "post": {
                "tags": [
                    "Finding"
                ],
                "summary": "Filter findings by account, region, VPC, IP, instance name..\r\nThen perform the action that selected - Delete findings originated in Magellan by ids (Guid).",
                "operationId": "Finding_SelectAllClose",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-SelectAllResponseViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Compliance-Finding-SelectAllRequestViewModel_Compliance-Models-ActionType_"
                }
            }
        },
        "/v2/Compliance/Finding/search": {
            "post": {
                "tags": [
                    "Finding"
                ],
                "summary": "Filter findings by account, region, VPC, IP, or instance name",
                "operationId": "Finding_Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingPaganationViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Compliance-Finding-SearchRequestViewModel"
                }
            }
        },
        "/v2/Compliance/Finding/searchAggregate": {
            "post": {
                "tags": [
                    "Finding"
                ],
                "summary": "Filter findings by account, region, VPC, IP, or instance name , returns only aggregations appear in the searchRequest's filter",
                "operationId": "Finding_SearchAggregate",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingPaganationViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Compliance-Finding-SearchRequestViewModel"
                }
            }
        },
        "/v2/Compliance/Finding/Sources": {
            "get": {
                "tags": [
                    "Finding"
                ],
                "summary": "returns all the supported sources and their metadata",
                "operationId": "Finding_GetSupportedSources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-Finding-FindingController-FindingSourceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Finding/{id}/acknowledge": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "summary": "Acknowledge a finding. Acknowledging a finding indicates it was viewed (or retrieved), but does not indicate it was resolved.",
                "operationId": "Finding_Acknowledge",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the finding id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-PutAcknowledgedViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-PutAcknowledgedViewModel"
                            }
                        }
                    },
                    "description": "updated information about the finding, including the acknowledgement",
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/bulk/acknowledge": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "operationId": "Finding_BulkAcknowledge",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PutAcknowledgedViewModel_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PutAcknowledgedViewModel_"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/selectAll/acknowledge": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "summary": "Filter findings by account, region, VPC, IP, instance name..\r\nThen perform the action that selected - Acknowledge a finding. Acknowledging a finding indicates it was viewed (or retrieved), but does not indicate it was resolved..",
                "operationId": "Finding_SelectAllAcknowledge",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-SelectAllResponseViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PutAcknowledgedViewModel_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PutAcknowledgedViewModel_"
                            }
                        }
                    },
                    "description": "the filter selections and updated information about the findings, including the acknowledgement",
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/{id}/severity": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "summary": "Change the severity of a specific finding",
                "operationId": "Finding_ChangeSeverity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the finding id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-PutSeverityViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-PutSeverityViewModel"
                            }
                        }
                    },
                    "description": "updated information about the finding, including the new severity",
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/bulk/severity": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "operationId": "Finding_BulkSeverity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PutSeverityViewModel_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PutSeverityViewModel_"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/selectAll/severity": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "summary": "Filter findings by account, region, VPC, IP, instance name..\r\nThen perform the action that selected - Change the severity of all specific findings.",
                "operationId": "Finding_SelectAllSeverity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-SelectAllResponseViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PutSeverityViewModel_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PutSeverityViewModel_"
                            }
                        }
                    },
                    "description": "the filter selections and updated information about the findings, including the new severity",
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/{id}/assign": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "summary": "Assign a finding to a user.",
                "operationId": "Finding_Assign",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the finding id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-PutAssigneeViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-PutAssigneeViewModel"
                            }
                        }
                    },
                    "description": "updated information about the finding, including the assigned user",
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/bulk/assign": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "operationId": "Finding_BulkAssign",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PutAssigneeViewModel_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PutAssigneeViewModel_"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/selectAll/assign": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "summary": "Filter findings by account, region, VPC, IP, instance name..\r\nThen perform the action - Assign a finding to a user.",
                "operationId": "Finding_SelectAllAssign",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-SelectAllResponseViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PutAssigneeViewModel_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PutAssigneeViewModel_"
                            }
                        }
                    },
                    "description": "the filter selections and updated information about the findings, including the assigned user",
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/{id}/comment": {
            "post": {
                "tags": [
                    "Finding"
                ],
                "summary": "Add a comment for a finding",
                "operationId": "Finding_AddComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the finding id (or key)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-PostCommentViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-PostCommentViewModel"
                            }
                        }
                    },
                    "description": "updated information about the finding, including the comment",
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/bulk/comment": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "operationId": "Finding_BulkComment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PostCommentViewModel_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PostCommentViewModel_"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/selectAll/comment": {
            "put": {
                "tags": [
                    "Finding"
                ],
                "summary": "Filter findings by account, region, VPC, IP, instance name..\r\nThen perform the action that selected - Add a comment for the findings.",
                "operationId": "Finding_SelectAllComment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-SelectAllResponseViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PostCommentViewModel_"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PostCommentViewModel_"
                            }
                        }
                    },
                    "description": "the filter selections and updated the findings comment",
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/comment": {
            "post": {
                "tags": [
                    "Finding"
                ],
                "summary": "Add a comment for a finding",
                "operationId": "Finding_AddCommentByFindingKey",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Finding-FindingViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-PostCommentByFindingKeyViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Compliance-Finding-PostCommentByFindingKeyViewModel"
                            }
                        }
                    },
                    "description": "updated information about the finding, including the comment and the finding key",
                    "required": true
                }
            }
        },
        "/v2/Compliance/Finding/origins": {
            "get": {
                "tags": [
                    "Finding"
                ],
                "operationId": "Finding_GetOrigins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-Finding-FindingController-AssessmentFindingOriginProperties"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Finding": {
            "get": {
                "tags": [
                    "Finding"
                ],
                "operationId": "Finding_GetFindingsResults",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "maxAllowedPages",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "filter.findingIndexType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Finding",
                                "Archive",
                                "Deleted"
                            ]
                        }
                    },
                    {
                        "name": "filter.cloudAccountExternalIds",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filter.bundleIds",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    {
                        "name": "filter.fromDateTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BL-Std-Services-FindingsCsvReport-FindingsResult"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Finding"
                ],
                "operationId": "Finding_BuildCsvStream",
                "parameters": [
                    {
                        "name": "maxAllowedPages",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "stream.position",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "stream.readTimeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "stream.writeTimeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "filter.findingIndexType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Finding",
                                "Archive",
                                "Deleted"
                            ]
                        }
                    },
                    {
                        "name": "filter.cloudAccountExternalIds",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filter.bundleIds",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    {
                        "name": "filter.fromDateTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/findingsReport/exportToCsv": {
            "post": {
                "tags": [
                    "FindingsReport"
                ],
                "operationId": "FindingsReport_ExportToCsv",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "uuid",
                                    "type": "string",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Compliance-Report-FindingsReportViewModel"
                }
            }
        },
        "/v2/findingsReport/exportToCsv/downloadLink": {
            "post": {
                "tags": [
                    "FindingsReport"
                ],
                "operationId": "FindingsReport_ExportToCsvDownloadLink",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Compliance-Report-FindingsReportViewModel"
                }
            }
        },
        "/v2/findingsReport/exportToCsv/downloadCSV": {
            "post": {
                "tags": [
                    "FindingsReport"
                ],
                "operationId": "FindingsReport_ExportToCsvDownloadCSV",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Compliance-Report-FindingsReportViewModel"
                }
            }
        },
        "/v2/GcpBigQuery": {
            "get": {
                "tags": [
                    "GcpBigQuery"
                ],
                "operationId": "GcpBigQuery_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-GcpBigQuery-GcpBigQueryViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpDisk": {
            "get": {
                "tags": [
                    "GcpDisk"
                ],
                "operationId": "GcpDisk_Get",
                "parameters": [
                    {
                        "name": "externalId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-GcpDisk-GcpDiskViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpGkeCluster": {
            "get": {
                "tags": [
                    "GcpGkeCluster"
                ],
                "summary": "Get a list of GKE clusters for a specific Google Cloud account",
                "operationId": "GcpGkeCluster_GetAll",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "The  Google Cloud Account Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-Gke-GcpGkeClusterViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpImage": {
            "get": {
                "tags": [
                    "GcpImage"
                ],
                "operationId": "GcpImage_Get",
                "parameters": [
                    {
                        "name": "externalId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-GcpImage-GcpImageViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpKmsKeyRing": {
            "get": {
                "tags": [
                    "GcpKmsKeyRing"
                ],
                "summary": "get all key rings, if name specified return this key ring",
                "operationId": "GcpKmsKeyRing_Get",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Key Ring name - to get a specific Key Ring",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-Kms-GcpKmsKeyRingViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpProjectInfo": {
            "get": {
                "tags": [
                    "GcpProjectInfo"
                ],
                "summary": "Get Project Info for a Google account",
                "operationId": "GcpProjectInfo_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "the Google cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-ProjectInfo-GcpProjectInfoViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/topics": {
            "get": {
                "tags": [
                    "GcpPubSub"
                ],
                "operationId": "GcpPubSub_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-PubSub-GcpPubSubTopicViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/topics/{cloudAccountId}": {
            "get": {
                "tags": [
                    "GcpPubSub"
                ],
                "operationId": "GcpPubSub_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-PubSub-GcpPubSubTopicViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscriptions/{cloudAccountId}/{project}/{topic}": {
            "get": {
                "tags": [
                    "GcpPubSub"
                ],
                "operationId": "GcpPubSub_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-PubSub-GcpPubSubSubscriptionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpSecurityGroup/{ExternalId}": {
            "get": {
                "tags": [
                    "GcpSecurityGroup"
                ],
                "summary": "get Gcp Security Group by external id",
                "operationId": "GcpSecurityGroup_Get",
                "parameters": [
                    {
                        "name": "ExternalId",
                        "in": "path",
                        "description": "external id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-SecurityGroup-GcpSecurityGroupViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpSecurityGroup": {
            "get": {
                "tags": [
                    "GcpSecurityGroup"
                ],
                "summary": "get all Gcp Security Groups for account",
                "operationId": "GcpSecurityGroup_GetAll",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "cloud account id (to get security groups off a specific cloud account)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-SecurityGroup-GcpSecurityGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpServiceAccount/{id}": {
            "get": {
                "tags": [
                    "GcpServiceAccount"
                ],
                "operationId": "GcpServiceAccount_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-ServiceAccount-GcpServiceAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpServiceAccount": {
            "get": {
                "tags": [
                    "GcpServiceAccount"
                ],
                "operationId": "GcpServiceAccount_GetAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-ServiceAccount-GcpServiceAccountViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpStorageBucket/{id}": {
            "get": {
                "tags": [
                    "GcpStorageBucket"
                ],
                "operationId": "GcpStorageBucket_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-StorageBucket-GcpStorageBucketViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpStorageBucket": {
            "get": {
                "tags": [
                    "GcpStorageBucket"
                ],
                "operationId": "GcpStorageBucket_GetAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-StorageBucket-GcpStorageBucketViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GenericList/{id}": {
            "get": {
                "tags": [
                    "GenericList"
                ],
                "summary": "Get a generic list by its ID",
                "operationId": "GenericList_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Generic list ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericList-GenericListResponseViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "GenericList"
                ],
                "summary": "Delete a generic list by its ID",
                "operationId": "GenericList_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Generic list ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/GenericList": {
            "get": {
                "tags": [
                    "GenericList"
                ],
                "summary": "Get all generic lists",
                "operationId": "GenericList_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GenericList-GenericListResponseViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "GenericList"
                ],
                "summary": "Update a generic list\r\nReturns the updated generic list",
                "operationId": "GenericList_Put",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericList-GenericListResponseViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenericList-GenericListViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GenericList-GenericListViewModel"
                            }
                        }
                    },
                    "description": "Generic list model with ID",
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "GenericList"
                ],
                "summary": "Create a new generic list\r\nReturns the created generic list",
                "operationId": "GenericList_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericList-GenericListResponseViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenericList-GenericListViewModelBase"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GenericList-GenericListViewModelBase"
                            }
                        }
                    },
                    "description": "Generic list model",
                    "required": true
                }
            }
        },
        "/v2/GlobalSearch": {
            "get": {
                "tags": [
                    "GlobalSearch"
                ],
                "summary": "Get top results for each service",
                "operationId": "GlobalSearch_Get",
                "parameters": [
                    {
                        "name": "freeText",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/DeleteForce": {
            "delete": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Delete a Google cloud account (from ) and linked entities",
                "operationId": "GoogleCloudAccount_DeleteForce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the Google cloud account",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/DeleteGsuite": {
            "put": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Delete a Google cloud Gsuite account Only",
                "operationId": "GoogleCloudAccount_DeleteGsuite",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the Google cloud account",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/details": {
            "get": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "operationId": "GoogleCloudAccount_GetCloudAccountDetailsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-Accounts-GoogleAccountOnboardingDetailsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudAccount/{cloudAccountId}/account-stats": {
            "get": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Gets Cloud Account network statistics on cloud account page",
                "operationId": "GoogleCloudAccount_GetCloudAccountStats",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": "The Id of the Google cloud account",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "withData",
                        "in": "query",
                        "description": "Include raw data of networks, security groups and vms, default = false",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-Accounts-GoogleAccountStatsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudAccount/MissingPermissions": {
            "get": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Get a list of missing permissions (needed by  to manage the accounts) for all Google accounts in ",
                "operationId": "GoogleCloudAccount_GetMissingPermissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Shared-Permissions-CloudAccountMissingPermissionsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/MissingPermissions": {
            "get": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Get a list of missing permissions for a specific account. These permissions needed by  to manage accounts.",
                "operationId": "GoogleCloudAccount_GetMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "showIgnored",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shared-Permissions-CloudAccountMissingPermissionsIgnorableViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Get a list of missing permissions for a specific account. These are permissions needed by  to manage accounts.",
                "operationId": "GoogleCloudAccount_UpdateIgnorableMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CloudAccountId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel"
                                }
                            }
                        }
                    },
                    "description": "List of permissions to set ignore or restore flag to",
                    "required": true
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/MissingPermissions/EntityType": {
            "get": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Get missing permissions for a specific entity type for a specific Google Cloud account",
                "operationId": "GoogleCloudAccount_GetMissingPermissionsByEntityTypeAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The  Google Cloud Account Id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "entityType",
                        "in": "query",
                        "description": "The entity type for which to get permission issues",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subType",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/MissingPermissions/Reset": {
            "put": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Reset (re-validate) a Google Cloud account credentials in . \r\nWill cause all entities to retry fetching from the Google cloud account.",
                "operationId": "GoogleCloudAccount_ResetMissingPermissionsAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/AccountName": {
            "put": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Update a Google Cloud account name (as it appears in )",
                "operationId": "GoogleCloudAccount_UpdateAccountName",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Google-Accounts-GoogleAccountNameViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Google-Accounts-GoogleAccountNameViewModel"
                            }
                        }
                    },
                    "description": "the updated name as it will appear in ",
                    "required": true
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/Credentials/Gsuite": {
            "put": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Update a Google Cloud account Gsuite data",
                "operationId": "GoogleCloudAccount_UpdateAccountGsuite",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Google-Accounts-GoogleAccountGsuiteViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Google-Accounts-GoogleAccountGsuiteViewModel"
                            }
                        }
                    },
                    "description": "the updated Gsuite as it will uses in ",
                    "required": true
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/Credentials": {
            "put": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "operationId": "GoogleCloudAccount_UpdateGoogleCloudAccountCredentials",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "skipComputeValidation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountUpdateViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountUpdateViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/SyncNow": {
            "post": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "operationId": "GoogleCloudAccount_SyncNow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}/organizationalUnit": {
            "put": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Update the ID of the Organizational Unit that this cloud account will be attached to.\r\nUse 'null' for the root Organizational Unit",
                "operationId": "GoogleCloudAccount_UpdateOrganizationalId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The  Guid ID of the GCP cloud account",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                            }
                        }
                    },
                    "description": "The Guid ID of the Organizational Unit to attach to. Use 'null'  to attach to the root Organizational Unit",
                    "required": true
                }
            }
        },
        "/v2/GoogleCloudAccount/organizationalUnit/move": {
            "put": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Detach cloud accounts from an Organizational unit and attach them to another Organizational unit\r\nUse 'null' for root organizational unit",
                "operationId": "GoogleCloudAccount_MoveCloudAccountsToOrganizationalUnit",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-MoveOrganizationalUnitViewModel2"
                }
            }
        },
        "/v2/GoogleCloudAccount/organizationalUnit/moveAll": {
            "put": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Detach all cloud accounts from their current organizational unit and attach them to a new one. Default is to root organizational unit",
                "operationId": "GoogleCloudAccount_MoveAllCloudAccountsToOrganizationalUnit",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel2"
                }
            }
        },
        "/v2/GoogleCloudAccount/organizationalUnit/attach": {
            "post": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Attach several cloud accounts to a specific Organizational Unit. User 'null' as root Organizational Unit as target",
                "operationId": "GoogleCloudAccount_PostAttachMulti",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/BL-Std-Services-OrganizationalUnit-AttachCloudAccountsViewModel"
                }
            }
        },
        "/v2/GoogleCloudAccount": {
            "get": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Get a list of all Google cloud accounts",
                "operationId": "GoogleCloudAccount_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountGetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Add (onboard) a new Google cloud account to ",
                "operationId": "GoogleCloudAccount_Post",
                "parameters": [
                    {
                        "name": "skipComputeValidation",
                        "in": "query",
                        "description": "is ondoarding without compute Api enabled",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountPostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountPostViewModel"
                            }
                        }
                    },
                    "description": "details for the new account",
                    "required": true
                }
            }
        },
        "/v2/GoogleCloudAccount/{id}": {
            "get": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Get details for a specific Google Cloud Account",
                "operationId": "GoogleCloudAccount_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the Google cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-Accounts-GoogleCloudAccountGetViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "GoogleCloudAccount"
                ],
                "summary": "Delete a Google cloud account (from )",
                "operationId": "GoogleCloudAccount_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the Google cloud account",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/GoogleCloudFirewallRule": {
            "get": {
                "tags": [
                    "GoogleCloudFirewallRule"
                ],
                "operationId": "GoogleCloudFirewallRule_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-Firewall-GoogleCloudFirewallRuleViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudFunction": {
            "get": {
                "tags": [
                    "GoogleCloudFunction"
                ],
                "summary": "Get all Gcp Cloud Functions for account",
                "operationId": "GoogleCloudFunction_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "Cloud Account Id, to get Cloud Functions for a specific cloud account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-CloudFunction-GoogleCloudFunctionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudIamPolicy": {
            "get": {
                "tags": [
                    "GoogleCloudIamPolicy"
                ],
                "operationId": "GoogleCloudIamPolicy_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-IamPolicy-GoogleCloudIamPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudIamPolicy/{id}": {
            "get": {
                "tags": [
                    "GoogleCloudIamPolicy"
                ],
                "operationId": "GoogleCloudIamPolicy_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-IamPolicy-GoogleCloudIamPolicyViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudNetwork": {
            "get": {
                "tags": [
                    "GoogleCloudNetwork"
                ],
                "summary": "Get network details for a Google account",
                "operationId": "GoogleCloudNetwork_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "the Google cloud account id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-Network-GoogleCloudNetworkViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudSubnet": {
            "get": {
                "tags": [
                    "GoogleCloudSubnet"
                ],
                "operationId": "GoogleCloudSubnet_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-Subnet-GoogleCloudSubnetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudVMInstance/{cloudAccountId}/network-details": {
            "get": {
                "tags": [
                    "GoogleCloudVMInstance"
                ],
                "operationId": "GoogleCloudVMInstance_GetNetworkDetailsByInstanceId",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "instanceExternalId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-Instance-NetworkDetailViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudVMInstance": {
            "get": {
                "tags": [
                    "GoogleCloudVMInstance"
                ],
                "operationId": "GoogleCloudVMInstance_GetAll",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Google-Instance-GcpVMInstanceViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GoogleCloudVMInstance/{id}": {
            "get": {
                "tags": [
                    "GoogleCloudVMInstance"
                ],
                "operationId": "GoogleCloudVMInstance_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Google-Instance-GcpVMInstanceViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Home": {
            "get": {
                "tags": [
                    "Home"
                ],
                "operationId": "Home_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-HomeViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/iam-safe-leases/me": {
            "get": {
                "tags": [
                    "IamSafeLease"
                ],
                "summary": "Get leases for this user (me)",
                "operationId": "IamSafeLease_GetOnlyMine",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Leases-IamSafeLeaseViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/iam-safe-leases/custom-lease": {
            "post": {
                "tags": [
                    "IamSafeLease"
                ],
                "summary": "Create a new lease for AWS IAM user or role",
                "operationId": "IamSafeLease_PostCustomLease",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Leases-IamSafeCustomLeasePostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Leases-IamSafeCustomLeasePostViewModel"
                            }
                        }
                    },
                    "description": "details for the lease",
                    "required": true
                }
            }
        },
        "/v2/iam-safe-leases/{id}": {
            "delete": {
                "tags": [
                    "IamSafeLease"
                ],
                "summary": "Delete a lease",
                "operationId": "IamSafeLease_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of lease to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/iam-safe-leases": {
            "get": {
                "tags": [
                    "IamSafeLease"
                ],
                "summary": "Get leases for AWS account",
                "operationId": "IamSafeLease_Get",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "query",
                        "description": "AWS account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Leases-IamSafeLeaseViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "IamSafeLease"
                ],
                "summary": "Create a new lease",
                "operationId": "IamSafeLease_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Leases-IamSafeLeasePostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Leases-IamSafeLeasePostViewModel"
                            }
                        }
                    },
                    "description": "details for the lease",
                    "required": true
                }
            }
        },
        "/v2/IncidentsStatus/UnresolvedIncidents": {
            "get": {
                "tags": [
                    "IncidentsStatus"
                ],
                "operationId": "IncidentsStatus_GetUnresolvedIncidentsAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/IncidentsStatus/AllIncidents": {
            "get": {
                "tags": [
                    "IncidentsStatus"
                ],
                "operationId": "IncidentsStatus_GetAllIncidentsAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/infrastructureAssessment/runAssessmentOnInfrastructure": {
            "post": {
                "tags": [
                    "InfrastructureAssessment"
                ],
                "summary": "Run assessment on infrastructure",
                "operationId": "InfrastructureAssessment_RunInfrastructureAssessmentAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-InfrastructureAssessmentHistoryResultV2ViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/infrastructureAssessment/runAssessmentOnInfrastructureAsync": {
            "post": {
                "tags": [
                    "InfrastructureAssessment"
                ],
                "summary": "Run assessment on infrastructure asynchronously",
                "operationId": "InfrastructureAssessment_RunInfrastructureAssessmentAsynchronouslyAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "uuid",
                                    "type": "string",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/infrastructureAssessment/getAsyncAssessmentResult": {
            "post": {
                "tags": [
                    "InfrastructureAssessment"
                ],
                "summary": "Get results for previously run assessment requests",
                "operationId": "InfrastructureAssessment_GetAsynchronousAssessmentResultAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-InfrastructureAsCode-InfrastructureAssessmentResultViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "format": "uuid",
                                    "type": "string",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "format": "uuid",
                                    "type": "string",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/view/magellan/disable-magellan-for-cloud-account": {
            "post": {
                "tags": [
                    "Intelligence"
                ],
                "summary": "Offboard cloud account from Intelligence. The cloud account must already be onboarded to Intelligence.",
                "operationId": "Intelligence_OffboardAccount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "enum": [
                                        "Continue",
                                        "SwitchingProtocols",
                                        "OK",
                                        "Created",
                                        "Accepted",
                                        "NonAuthoritativeInformation",
                                        "NoContent",
                                        "ResetContent",
                                        "PartialContent",
                                        "MultipleChoices",
                                        "Ambiguous",
                                        "MovedPermanently",
                                        "Moved",
                                        "Found",
                                        "Redirect",
                                        "SeeOther",
                                        "RedirectMethod",
                                        "NotModified",
                                        "UseProxy",
                                        "Unused",
                                        "TemporaryRedirect",
                                        "RedirectKeepVerb",
                                        "BadRequest",
                                        "Unauthorized",
                                        "PaymentRequired",
                                        "Forbidden",
                                        "NotFound",
                                        "MethodNotAllowed",
                                        "NotAcceptable",
                                        "ProxyAuthenticationRequired",
                                        "RequestTimeout",
                                        "Conflict",
                                        "Gone",
                                        "LengthRequired",
                                        "PreconditionFailed",
                                        "RequestEntityTooLarge",
                                        "RequestUriTooLong",
                                        "UnsupportedMediaType",
                                        "RequestedRangeNotSatisfiable",
                                        "ExpectationFailed",
                                        "UpgradeRequired",
                                        "InternalServerError",
                                        "NotImplemented",
                                        "BadGateway",
                                        "ServiceUnavailable",
                                        "GatewayTimeout",
                                        "HttpVersionNotSupported"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanAccountOffboardingModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanAccountOffboardingModel"
                            }
                        }
                    },
                    "description": "Block indicating cloud account id and vendor to be offboarded from Intelligence",
                    "required": true
                }
            }
        },
        "/v2/view/magellan/usage-notification-rate": {
            "put": {
                "tags": [
                    "Intelligence"
                ],
                "summary": "Set usage notification emails rate.\r\nBy default, the system will send an email notification when Intelligence usage reaches 80%, 90% and 100% of your allowed quota. \r\nUse this API call to configure sending an email notification every time you consumed the defined % of your quota.",
                "operationId": "Intelligence_SetUsageNotificationRate",
                "parameters": [
                    {
                        "name": "rate",
                        "in": "query",
                        "description": "Emails will be sent every {rate} % reached.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "enum": [
                                        "Continue",
                                        "SwitchingProtocols",
                                        "OK",
                                        "Created",
                                        "Accepted",
                                        "NonAuthoritativeInformation",
                                        "NoContent",
                                        "ResetContent",
                                        "PartialContent",
                                        "MultipleChoices",
                                        "Ambiguous",
                                        "MovedPermanently",
                                        "Moved",
                                        "Found",
                                        "Redirect",
                                        "SeeOther",
                                        "RedirectMethod",
                                        "NotModified",
                                        "UseProxy",
                                        "Unused",
                                        "TemporaryRedirect",
                                        "RedirectKeepVerb",
                                        "BadRequest",
                                        "Unauthorized",
                                        "PaymentRequired",
                                        "Forbidden",
                                        "NotFound",
                                        "MethodNotAllowed",
                                        "NotAcceptable",
                                        "ProxyAuthenticationRequired",
                                        "RequestTimeout",
                                        "Conflict",
                                        "Gone",
                                        "LengthRequired",
                                        "PreconditionFailed",
                                        "RequestEntityTooLarge",
                                        "RequestUriTooLong",
                                        "UnsupportedMediaType",
                                        "RequestedRangeNotSatisfiable",
                                        "ExpectationFailed",
                                        "UpgradeRequired",
                                        "InternalServerError",
                                        "NotImplemented",
                                        "BadGateway",
                                        "ServiceUnavailable",
                                        "GatewayTimeout",
                                        "HttpVersionNotSupported"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/magellan/usage-notification-update-ancestors": {
            "put": {
                "tags": [
                    "Intelligence"
                ],
                "summary": "Enable sending usage notification updates to parent accounts (all levels).",
                "operationId": "Intelligence_SetUsageNotificationAncestorsUpdate",
                "parameters": [
                    {
                        "name": "shouldUpdate",
                        "in": "query",
                        "description": "Indicating if emails should be sent to ancestors.",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "enum": [
                                        "Continue",
                                        "SwitchingProtocols",
                                        "OK",
                                        "Created",
                                        "Accepted",
                                        "NonAuthoritativeInformation",
                                        "NoContent",
                                        "ResetContent",
                                        "PartialContent",
                                        "MultipleChoices",
                                        "Ambiguous",
                                        "MovedPermanently",
                                        "Moved",
                                        "Found",
                                        "Redirect",
                                        "SeeOther",
                                        "RedirectMethod",
                                        "NotModified",
                                        "UseProxy",
                                        "Unused",
                                        "TemporaryRedirect",
                                        "RedirectKeepVerb",
                                        "BadRequest",
                                        "Unauthorized",
                                        "PaymentRequired",
                                        "Forbidden",
                                        "NotFound",
                                        "MethodNotAllowed",
                                        "NotAcceptable",
                                        "ProxyAuthenticationRequired",
                                        "RequestTimeout",
                                        "Conflict",
                                        "Gone",
                                        "LengthRequired",
                                        "PreconditionFailed",
                                        "RequestEntityTooLarge",
                                        "RequestUriTooLong",
                                        "UnsupportedMediaType",
                                        "RequestedRangeNotSatisfiable",
                                        "ExpectationFailed",
                                        "UpgradeRequired",
                                        "InternalServerError",
                                        "NotImplemented",
                                        "BadGateway",
                                        "ServiceUnavailable",
                                        "GatewayTimeout",
                                        "HttpVersionNotSupported"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/view/magellan/magellan-flowlogs-onboarding": {
            "post": {
                "tags": [
                    "Intelligence"
                ],
                "summary": "Onboard an account for Network Traffic. The account must already be onboarded to CloudGuard\r\nPlease follow the Intelligence onboarding \"Prerequisites\" screen and the \"Prepare IAM Policy for CloudGuard Intelligence\" screen on the CloudGuard portal.",
                "operationId": "Intelligence_AwsNetworkTrafficOnboarding",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Views-Magellan-AwsLogicLogViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanOnboardingModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanOnboardingModel"
                            }
                        }
                    },
                    "description": "Block indicating cloud account id and bucket name to be onboarded to Intelligence Network Traffic",
                    "required": true
                }
            }
        },
        "/v2/view/magellan/magellan-cloudtrail-onboarding": {
            "post": {
                "tags": [
                    "Intelligence"
                ],
                "summary": "Onboard an account for Account Activity. The account must already be onboarded to CloudGuard.\r\nPlease follow the Intelligence onboarding \"Prerequisites\" screen and the \"Prepare IAM Policy for CloudGuard Intelligence\" screen on the CloudGuard portal.",
                "operationId": "Intelligence_AwsAccountActivityOnboarding",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Views-Magellan-AwsLogicLogViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanOnboardingModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanOnboardingModel"
                            }
                        }
                    },
                    "description": "Block indicating cloud account id and bucket name to be onboarded to Intelligence Account Activity",
                    "required": true
                }
            }
        },
        "/v2/view/magellan/magellan-custom-onboarding": {
            "post": {
                "tags": [
                    "Intelligence"
                ],
                "summary": "Custom onboard Account Activity or Network Traffic of your cloud environment to Intelligence.\r\nThe cloud accounts must already be onboarded to CloudGuard.\r\nPlease follow the Intelligence onboarding \"Prerequisites\" screen and the \"Prepare IAM Policy for CloudGuard Intelligence\" screen on the CloudGuard portal.",
                "operationId": "Intelligence_AwsCustomOnboarding",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "enum": [
                                        "Continue",
                                        "SwitchingProtocols",
                                        "OK",
                                        "Created",
                                        "Accepted",
                                        "NonAuthoritativeInformation",
                                        "NoContent",
                                        "ResetContent",
                                        "PartialContent",
                                        "MultipleChoices",
                                        "Ambiguous",
                                        "MovedPermanently",
                                        "Moved",
                                        "Found",
                                        "Redirect",
                                        "SeeOther",
                                        "RedirectMethod",
                                        "NotModified",
                                        "UseProxy",
                                        "Unused",
                                        "TemporaryRedirect",
                                        "RedirectKeepVerb",
                                        "BadRequest",
                                        "Unauthorized",
                                        "PaymentRequired",
                                        "Forbidden",
                                        "NotFound",
                                        "MethodNotAllowed",
                                        "NotAcceptable",
                                        "ProxyAuthenticationRequired",
                                        "RequestTimeout",
                                        "Conflict",
                                        "Gone",
                                        "LengthRequired",
                                        "PreconditionFailed",
                                        "RequestEntityTooLarge",
                                        "RequestUriTooLong",
                                        "UnsupportedMediaType",
                                        "RequestedRangeNotSatisfiable",
                                        "ExpectationFailed",
                                        "UpgradeRequired",
                                        "InternalServerError",
                                        "NotImplemented",
                                        "BadGateway",
                                        "ServiceUnavailable",
                                        "GatewayTimeout",
                                        "HttpVersionNotSupported"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanCustomOnboardingModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanCustomOnboardingModel"
                            }
                        }
                    },
                    "description": "Block indicating custom onboarding data to be onboarded to Intelligence",
                    "required": true
                }
            }
        },
        "/v2/view/magellan/magellan-alibaba-actiontrail-onboarding": {
            "post": {
                "tags": [
                    "Intelligence"
                ],
                "summary": "Onboard Alibaba account for Account Activity. The account must already be onboarded to CloudGuard.\r\nPlease follow Intelligence onboarding \"Prerequisites\" screen on CloudGuard portal.",
                "operationId": "Intelligence_AlibabaAccoountActivityOnboarding",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "enum": [
                                        "Continue",
                                        "SwitchingProtocols",
                                        "OK",
                                        "Created",
                                        "Accepted",
                                        "NonAuthoritativeInformation",
                                        "NoContent",
                                        "ResetContent",
                                        "PartialContent",
                                        "MultipleChoices",
                                        "Ambiguous",
                                        "MovedPermanently",
                                        "Moved",
                                        "Found",
                                        "Redirect",
                                        "SeeOther",
                                        "RedirectMethod",
                                        "NotModified",
                                        "UseProxy",
                                        "Unused",
                                        "TemporaryRedirect",
                                        "RedirectKeepVerb",
                                        "BadRequest",
                                        "Unauthorized",
                                        "PaymentRequired",
                                        "Forbidden",
                                        "NotFound",
                                        "MethodNotAllowed",
                                        "NotAcceptable",
                                        "ProxyAuthenticationRequired",
                                        "RequestTimeout",
                                        "Conflict",
                                        "Gone",
                                        "LengthRequired",
                                        "PreconditionFailed",
                                        "RequestEntityTooLarge",
                                        "RequestUriTooLong",
                                        "UnsupportedMediaType",
                                        "RequestedRangeNotSatisfiable",
                                        "ExpectationFailed",
                                        "UpgradeRequired",
                                        "InternalServerError",
                                        "NotImplemented",
                                        "BadGateway",
                                        "ServiceUnavailable",
                                        "GatewayTimeout",
                                        "HttpVersionNotSupported"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanOnboardingAzurePricingStorage-MagellanAlibabaActionTrailOnboardingModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanOnboardingAzurePricingStorage-MagellanAlibabaActionTrailOnboardingModel"
                            }
                        }
                    },
                    "description": "Block indicating data to be onboarded to Intelligence Event Activity",
                    "required": true
                }
            }
        },
        "/v2/view/magellan/provide-azure-storage-details": {
            "post": {
                "tags": [
                    "Intelligence"
                ],
                "summary": "After calling AzureNetworkTrafficOnboardingWithArm and creating the required resources in Azure using the ARM template, Intelligence needs access to the storage keys.",
                "operationId": "Intelligence_AzureNetworkTrafficNewStorageOnboarding",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "enum": [
                                        "Continue",
                                        "SwitchingProtocols",
                                        "OK",
                                        "Created",
                                        "Accepted",
                                        "NonAuthoritativeInformation",
                                        "NoContent",
                                        "ResetContent",
                                        "PartialContent",
                                        "MultipleChoices",
                                        "Ambiguous",
                                        "MovedPermanently",
                                        "Moved",
                                        "Found",
                                        "Redirect",
                                        "SeeOther",
                                        "RedirectMethod",
                                        "NotModified",
                                        "UseProxy",
                                        "Unused",
                                        "TemporaryRedirect",
                                        "RedirectKeepVerb",
                                        "BadRequest",
                                        "Unauthorized",
                                        "PaymentRequired",
                                        "Forbidden",
                                        "NotFound",
                                        "MethodNotAllowed",
                                        "NotAcceptable",
                                        "ProxyAuthenticationRequired",
                                        "RequestTimeout",
                                        "Conflict",
                                        "Gone",
                                        "LengthRequired",
                                        "PreconditionFailed",
                                        "RequestEntityTooLarge",
                                        "RequestUriTooLong",
                                        "UnsupportedMediaType",
                                        "RequestedRangeNotSatisfiable",
                                        "ExpectationFailed",
                                        "UpgradeRequired",
                                        "InternalServerError",
                                        "NotImplemented",
                                        "BadGateway",
                                        "ServiceUnavailable",
                                        "GatewayTimeout",
                                        "HttpVersionNotSupported"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanOnboardingAzurePricingStorage-MagellanAzureNewStorageDetailsAfterArmModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanOnboardingAzurePricingStorage-MagellanAzureNewStorageDetailsAfterArmModel"
                            }
                        }
                    },
                    "description": "Block indicating data of storage keys to be onboarded to Intelligence Network Traffic",
                    "required": true
                }
            }
        },
        "/v2/view/magellan/magellan-gcp-onboarding": {
            "post": {
                "tags": [
                    "Intelligence"
                ],
                "summary": "Onboard Gcp project. The project must already be onboarded to CloudGuard.\r\nFor network traffic please follow the Intelligence onboarding \"Prerequisites\" screen on the CloudGuard portal.\r\nThis is the API for onboarding your gcp project in CloudGuard side. In addition, you need to create some\r\nresources in GCP as part of the onboarding. The following GIT contains a code that you can run on your computer.\r\nThe code creates the needed resources and makes an API call to CloudGuard:\r\nhttps://github.com//gcp-onboarding/tree/main/onboarding-api",
                "operationId": "Intelligence_GcpOnboarding",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "enum": [
                                        "Continue",
                                        "SwitchingProtocols",
                                        "OK",
                                        "Created",
                                        "Accepted",
                                        "NonAuthoritativeInformation",
                                        "NoContent",
                                        "ResetContent",
                                        "PartialContent",
                                        "MultipleChoices",
                                        "Ambiguous",
                                        "MovedPermanently",
                                        "Moved",
                                        "Found",
                                        "Redirect",
                                        "SeeOther",
                                        "RedirectMethod",
                                        "NotModified",
                                        "UseProxy",
                                        "Unused",
                                        "TemporaryRedirect",
                                        "RedirectKeepVerb",
                                        "BadRequest",
                                        "Unauthorized",
                                        "PaymentRequired",
                                        "Forbidden",
                                        "NotFound",
                                        "MethodNotAllowed",
                                        "NotAcceptable",
                                        "ProxyAuthenticationRequired",
                                        "RequestTimeout",
                                        "Conflict",
                                        "Gone",
                                        "LengthRequired",
                                        "PreconditionFailed",
                                        "RequestEntityTooLarge",
                                        "RequestUriTooLong",
                                        "UnsupportedMediaType",
                                        "RequestedRangeNotSatisfiable",
                                        "ExpectationFailed",
                                        "UpgradeRequired",
                                        "InternalServerError",
                                        "NotImplemented",
                                        "BadGateway",
                                        "ServiceUnavailable",
                                        "GatewayTimeout",
                                        "HttpVersionNotSupported"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanGcpOnboardingModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-Magellan-MagellanGcpOnboardingModel"
                            }
                        }
                    },
                    "description": "Block indicating data to be onboarded to Intelligence",
                    "required": true
                }
            }
        },
        "/v2/IpAddressMetadata": {
            "get": {
                "tags": [
                    "IpAddressMetadata"
                ],
                "summary": "Get all IP addresses metadata",
                "description": "<para>An Ip Address metadata must contain CIDR, Name and Classification</para>\r\n<para>Classification can be External or Unsafe or Dmz or InternalVpc or InternalDc or NoClassification</para>",
                "operationId": "IpAddressMetadata_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-IpAddressMetadataViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "IpAddressMetadata"
                ],
                "summary": "Update an existing IP address metadata",
                "description": "<para>An Ip Address metadata must contain CIDR, Name and Classification.</para>\r\n<para> Classification can only be External or Unsafe or Dmz or InternalVpc or InternalDc or NoClassification.</para>",
                "operationId": "IpAddressMetadata_Put",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-IpAddressMetadataViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-IpAddressMetadataViewModel"
                            }
                        }
                    },
                    "description": "updated metadata",
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "IpAddressMetadata"
                ],
                "summary": "Add a new IP address metadata",
                "description": "<para>An Ip Address metadata must contain CIDR, Name and Classification</para>\r\n<para> Classification can be External or Unsafe or Dmz or InternalVpc or InternalDc or NoClassification</para>",
                "operationId": "IpAddressMetadata_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-IpAddressMetadataViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-IpAddressMetadataViewModel"
                            }
                        }
                    },
                    "description": "metadata for the IP address",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "IpAddressMetadata"
                ],
                "summary": "delete an IP address metadata with a specific CIDR",
                "description": "<para>The address and mask constructs the CIDR of the IP address metdata.</para>",
                "operationId": "IpAddressMetadata_Delete",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "the account id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "the IP address to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mask",
                        "in": "query",
                        "description": "the subnet mask",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/IpList": {
            "get": {
                "tags": [
                    "IpList"
                ],
                "summary": "Get all IP Lists for the account",
                "operationId": "IpList_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IPList-IpListViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "IpList"
                ],
                "summary": "Add a new IP List",
                "operationId": "IpList_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IPList-IpListViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IPList-IpListViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IPList-IpListViewModel"
                            }
                        }
                    },
                    "description": "iplist info: \"Name\" for name, \"Description\" for description and Items are list of addresses.",
                    "required": true
                }
            }
        },
        "/v2/IpList/{id}": {
            "get": {
                "tags": [
                    "IpList"
                ],
                "summary": "Get an IP List by id",
                "operationId": "IpList_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the IP List id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IPList-IpListViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "IpList"
                ],
                "summary": "Update an IP List. This will override the exisitng ip list",
                "operationId": "IpList_Put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the IP List to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IPList-IpListPutViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IPList-IpListPutViewModel"
                            }
                        }
                    },
                    "description": "iplist info: \"Name\" for name, \"Description\" for description and Items are list of addresses.",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "IpList"
                ],
                "summary": "Delete an IP List by id",
                "operationId": "IpList_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the IP list ot delete.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/LicenseActivator/GetAllProductKeys": {
            "get": {
                "tags": [
                    "LicenseActivator"
                ],
                "summary": "Returns all user activate license.",
                "operationId": "LicenseActivator_GetAllProductKeys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LicenseActivator-LicenseViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/LicenseActivator/GetLicense/{productKey}": {
            "get": {
                "tags": [
                    "LicenseActivator"
                ],
                "summary": "Returns license by given product id.",
                "operationId": "LicenseActivator_GetLicenseByProductKey",
                "parameters": [
                    {
                        "name": "productKey",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseActivator-LicenseViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/LicenseActivator/ListAllLicensesFromUserCenter": {
            "post": {
                "tags": [
                    "LicenseActivator"
                ],
                "summary": "Returns user licenses.",
                "operationId": "LicenseActivator_GetAllLicensesFromUserCenter",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LicenseActivator-LicenseActivatorViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseActivator-LicenseGetRequestModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseActivator-LicenseGetRequestModel"
                            }
                        }
                    },
                    "description": "Model with UserCenter credentials.",
                    "required": true
                }
            }
        },
        "/v2/LicenseActivator/ActivateUserLicense": {
            "post": {
                "tags": [
                    "LicenseActivator"
                ],
                "summary": "Activate given license to the account.",
                "operationId": "LicenseActivator_ActivateUserLicense",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseActivator-LicenseActivateRequestModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseActivator-LicenseActivateRequestModel"
                            }
                        }
                    },
                    "description": "Model with licenses to activate.",
                    "required": true
                }
            }
        },
        "/v2/licensing/update-account-feature-enabled": {
            "put": {
                "tags": [
                    "Licensing"
                ],
                "operationId": "Licensing_UpdateAccountFeatureEnabled",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Controllers-LicensingController-UpdateFeatureModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Controllers-LicensingController-UpdateFeatureModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/licensing/compliance-approval-needed": {
            "get": {
                "tags": [
                    "Licensing"
                ],
                "operationId": "Licensing_IsComplianceApprovalNeeded",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Controllers-LicensingController-ComplianceApprovalNeededViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Licensing": {
            "get": {
                "tags": [
                    "Licensing"
                ],
                "operationId": "Licensing_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Controllers-LicensingController-LicensingViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ManagedGenericList/ValidateName": {
            "post": {
                "tags": [
                    "ManagedGenericList"
                ],
                "summary": "Get all generic lists",
                "operationId": "ManagedGenericList_ValidateName",
                "parameters": [
                    {
                        "name": "genericListName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ManagedGenericList/{id}": {
            "get": {
                "tags": [
                    "ManagedGenericList"
                ],
                "summary": "Get a generic list by its ID",
                "operationId": "ManagedGenericList_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Generic list ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericList-GenericListResponseViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ManagedGenericList": {
            "get": {
                "tags": [
                    "ManagedGenericList"
                ],
                "summary": "Get all generic lists",
                "operationId": "ManagedGenericList_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GenericList-GenericListResponseViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/msp/v1/account": {
            "get": {
                "tags": [
                    "Msp"
                ],
                "summary": "Get all managed accounts created by this API.",
                "operationId": "Msp_GetManagedAccounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountGetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Msp"
                ],
                "summary": "Create a new managed account.",
                "operationId": "Msp_PostAccount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountGetViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountPostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountPostViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/msp/v1/account/{accountId}": {
            "delete": {
                "tags": [
                    "Msp"
                ],
                "summary": "Delete An account that was previously created by this.",
                "operationId": "Msp_DeleteAccount",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/msp/v1/account/user": {
            "post": {
                "tags": [
                    "Msp"
                ],
                "summary": "Create a new user in a managed account",
                "operationId": "Msp_PostUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountGetUserViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountPostUserViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountPostUserViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/msp/v1/account/{accountId}/user/{userId}": {
            "delete": {
                "tags": [
                    "Msp"
                ],
                "summary": "Delete a user in a managed account",
                "operationId": "Msp_DeleteUser",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": " account unique identifier",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": " user unique identifier",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "email.email",
                        "in": "query",
                        "description": "Email Address",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/msp/v1/account/{accountId}/icon": {
            "put": {
                "tags": [
                    "Msp"
                ],
                "operationId": "Msp_PutIcon",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountGetIconViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountPutIconViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountPutIconViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Msp"
                ],
                "operationId": "Msp_DeleteIcon",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/msp/v1/account/icon": {
            "put": {
                "tags": [
                    "Msp"
                ],
                "operationId": "Msp_PutIcon",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountGetIconViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/MSP-Api-V1-ManagedAccountPutIconViewModel"
                }
            },
            "delete": {
                "tags": [
                    "Msp"
                ],
                "operationId": "Msp_DeleteIcon",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/organizationalunit/view": {
            "get": {
                "tags": [
                    "OrganizationalUnit"
                ],
                "summary": "Get organizational unit view entities",
                "operationId": "OrganizationalUnit_GetOrganizationalUnitsViewAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-OrganizationalUnit-OrganizationalUnitNodeViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/organizationalunit/GetFlatOrganizationalUnits": {
            "get": {
                "tags": [
                    "OrganizationalUnit"
                ],
                "summary": "Get all organizational units flat",
                "operationId": "OrganizationalUnit_GetFlatOrganizationalUnitsAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-OrganizationalUnit-OrganizationalUnitViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/organizationalunit/{id}/DeleteForce": {
            "delete": {
                "tags": [
                    "OrganizationalUnit"
                ],
                "summary": "Delete an organizational unit by its id and attach its cloud accounts to the the root organizational unit, and delete all its linked policies",
                "operationId": "OrganizationalUnit_DeleteForceOrganizationalUnitByIdAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id (Guid) of the organizational unit",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BL-Std-Helpers-TreeNode_Falconetix-Model-OrganizationalUnit-OrganizationalUnitEntityTreeItem_System-String_"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/organizationalunit/deleteAll": {
            "delete": {
                "tags": [
                    "OrganizationalUnit"
                ],
                "summary": "Delete all organizational units, detach all clouad accounts from the organizational unit they belong to and attach them to the root organizational unit",
                "operationId": "OrganizationalUnit_DeleteAllOrganizationalUnitsAsync",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/OrganizationalUnit": {
            "get": {
                "tags": [
                    "OrganizationalUnit"
                ],
                "summary": "Get all the organizational units of the account as tree",
                "operationId": "OrganizationalUnit_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BL-Std-Helpers-TreeNode_Falconetix-Model-OrganizationalUnit-OrganizationalUnitEntityTreeItem_System-String_"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "OrganizationalUnit"
                ],
                "summary": "Create a new Organizational unit. Only name is required. Path is optional and should be in the format of 'parent-id'.'parent-id'...",
                "operationId": "OrganizationalUnit_PostOrganizationalUnitAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BL-Std-Helpers-TreeNode_Falconetix-Model-OrganizationalUnit-OrganizationalUnitEntityTreeItem_System-String_"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateOrganizationalUnitViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateOrganizationalUnitViewModel"
                            }
                        }
                    },
                    "description": "the organizational unit data. Requires name. path is optional",
                    "required": true
                }
            }
        },
        "/v2/OrganizationalUnit/{id}": {
            "get": {
                "tags": [
                    "OrganizationalUnit"
                ],
                "summary": "Get an organizational unit by its id",
                "operationId": "OrganizationalUnit_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "requested organizational unit id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BL-Std-Helpers-TreeNode_Falconetix-Model-OrganizationalUnit-OrganizationalUnitEntityTreeItem_System-String_"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OrganizationalUnit"
                ],
                "summary": "Update an organizational unit by its id",
                "operationId": "OrganizationalUnit_UpdateByIdAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id (Guid) of the organizational unit",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BL-Std-Helpers-TreeNode_Falconetix-Model-OrganizationalUnit-OrganizationalUnitEntityTreeItem_System-String_"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateOrganizationalUnitViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateOrganizationalUnitViewModel"
                            }
                        }
                    },
                    "description": "update data for the organizational unit",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "OrganizationalUnit"
                ],
                "summary": "Delete an organizational unit by its id and attach its cloud accounts to the the root organizational unit",
                "operationId": "OrganizationalUnit_DeleteOrganizationalUnitByIdAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id (Guid) of the organizational unit",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BL-Std-Helpers-TreeNode_Falconetix-Model-OrganizationalUnit-OrganizationalUnitEntityTreeItem_System-String_"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Permission": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Fetches the permissions for a specific SRL, for the requesting user. Returns a json containing boolean values depcting whther the user has manage, access, add, view permissions on that SRL.",
                "operationId": "Permission_Get",
                "parameters": [
                    {
                        "name": "srl",
                        "in": "query",
                        "description": "The SRL to fetch permissions for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-PermissionViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/protected-asset/search": {
            "post": {
                "tags": [
                    "ProtectedAsset"
                ],
                "summary": "Search API for protected assets.",
                "operationId": "ProtectedAsset_Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProtectedAsset-ProtectedAssetPaganationViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProtectedAsset-SearchRequestViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProtectedAsset-SearchRequestViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/ProtectedAssetsReport/exportToCsv": {
            "post": {
                "tags": [
                    "ProtectedAssetsReport"
                ],
                "operationId": "ProtectedAssetsReport_ExportToCsv",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "uuid",
                                    "type": "string",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Falconetix-Model-ProtectedAssetsReport-ProtectedAssetsReportViewModel_ProtectedAsset-SearchRequestViewModel_"
                }
            }
        },
        "/v2/ProtectedAssetsReport/exportToCsv/downloadLink": {
            "post": {
                "tags": [
                    "ProtectedAssetsReport"
                ],
                "operationId": "ProtectedAssetsReport_ExportToCsvDownloadLink",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Falconetix-Model-ProtectedAssetsReport-ProtectedAssetsReportViewModel_ProtectedAsset-SearchRequestViewModel_"
                }
            }
        },
        "/v2/ProtectedAssetsReport/exportToCsv/downloadCSV": {
            "post": {
                "tags": [
                    "ProtectedAssetsReport"
                ],
                "operationId": "ProtectedAssetsReport_ExportToCsvDownloadCSV",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Falconetix-Model-ProtectedAssetsReport-ProtectedAssetsReportViewModel_ProtectedAsset-SearchRequestViewModel_"
                }
            }
        },
        "/v2/protegoStatistics/invocations": {
            "get": {
                "tags": [
                    "ProtegoStatistics"
                ],
                "operationId": "ProtegoStatistics_Get",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Falconetix-Model-Serverless-Protego-ProtegoInvocationsEntity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/external": {
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update a role",
                "operationId": "Role_PutRoleByExternalAccountId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The role id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role-EditRoleViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Role-EditRoleViewModel"
                            }
                        }
                    },
                    "description": "The role info",
                    "required": true
                }
            }
        },
        "/v2/Role": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get all roles for the account.",
                "operationId": "Role_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role-RoleGetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Create a new role",
                "operationId": "Role_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Role-RoleViewModel"
                }
            }
        },
        "/v2/Role/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get the specific role with the specified id",
                "operationId": "Role_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role-RoleViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update a role",
                "operationId": "Role_Put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The role id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role-RoleViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Role-RoleViewModel"
                            }
                        }
                    },
                    "description": "The role info",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete a role",
                "operationId": "Role_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The role id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/RulesEngine": {
            "get": {
                "tags": [
                    "RulesEngine"
                ],
                "operationId": "RulesEngine_GetRuleObjectModels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Controllers-RuleObjectModelResultViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/SecurityGroup/{id}": {
            "get": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-SecurityGroupViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_UpdateFimExcludePath",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-UpdateItem"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-UpdateItem"
                                }
                            }
                        }
                    },
                    "required": true
                }
            },
            "patch": {
                "tags": [
                    "SecurityGroup"
                ],
                "summary": "Partial update for security group entity",
                "operationId": "SecurityGroup_Patch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "security group id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-UpdateItem"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-UpdateItem"
                                }
                            }
                        }
                    },
                    "description": "This is an array of patchItems according to rfc 6902 http://tools.ietf.org/html/rfc6902\r\ncurrenly we support only the 'add' operation and the path /FIMPolicy/Rules\r\n\r\nExample:\r\n[{\r\n    \"op\": \"add\",\r\n    \"path\": \"/FIMPolicy/Rules\",\r\n    \"value\": {\"type\":\"ExcludePath\", \"value\":\"a/b/c\", \"comment\":\"my comment\"}\r\n}]",
                    "required": true
                }
            }
        },
        "/v2/SecurityGroup/{groupId}": {
            "delete": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_DeleteSecurityGroup",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/SecurityGroup/{groupId}/name": {
            "put": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_Rename",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-SecurityGroupNameViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-SecurityGroupNameViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/SecurityGroup/{groupId}/fim-policy/disable": {
            "put": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_DisableFIM",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/SecurityGroup/fim-policy": {
            "put": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_UpdateFimPolicy",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-FimPolicyUpdateViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-FimPolicyUpdateViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-FimPolicyUpdateViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/SecurityGroup/{groupId}/fim-policy/logging-policy": {
            "put": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_UpdateFimLoggingPolicy",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-LoggingPolicyViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-LoggingPolicyViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/SecurityGroup/{groupId}/service/inbound": {
            "put": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_UpdateInboundService",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_CreateInboundService",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_DeleteService",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "protocol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromPort",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toPort",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/SecurityGroup/{groupId}/service/outbound": {
            "put": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_UpdateOutboundService",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_CreateOutboundService",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_DeleteOutboundService",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "protocol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromPort",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toPort",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/SecurityGroup/{groupId}/whitelist/outbound": {
            "post": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_OutboundWhitelist",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-ScopeViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-ScopeViewModel"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-ScopeViewModel"
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/SecurityGroup/{groupId}/whitelist/inbound": {
            "post": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_InboundWhitelist",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-ScopeViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-ScopeViewModel"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-ScopeViewModel"
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/SecurityGroup": {
            "get": {
                "tags": [
                    "SecurityGroup"
                ],
                "summary": "Fetch  security groups according to a filter type",
                "operationId": "SecurityGroup_Get",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The filter to fetch by (enum)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "IpListReference"
                            ]
                        }
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "The value used according to filter type, varies by filter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-SecurityGroupViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SecurityGroup"
                ],
                "operationId": "SecurityGroup_CreateSecurityGroup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-SecurityGroupViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityGroup-AddSecurityGroupViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityGroup-AddSecurityGroupViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/accounts": {
            "post": {
                "tags": [
                    "Serverless"
                ],
                "summary": "Enable Serverless protection",
                "operationId": "Serverless_PostAccount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessAccountViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessAddAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessAddAccountRequest"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/accounts/{cloudAccountId}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAccount",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessAccountViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Serverless"
                ],
                "summary": "Update policy config or add FSP for an AWS Cloud account",
                "operationId": "Serverless_PutAccount",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessPutAccountViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessPutAccountViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/{cloudProvider}/accounts/{cloudAccountId}": {
            "patch": {
                "tags": [
                    "Serverless"
                ],
                "summary": "Update policy config or add FSP for an AWS Cloud account",
                "operationId": "Serverless_PutAccount",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessPutAccountViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessPutAccountViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/accounts/states": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAccountsState",
                "parameters": [
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessAccountStatusViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/{cloudProvider}/accounts/states": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAccountsState",
                "parameters": [
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessAccountStatusViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/accounts/states/{cloudAccountId}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAccountState",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessAccountStatusViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/{cloudProvider}/accounts/states/{cloudAccountId}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAccountState",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessAccountStatusViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/accounts/{cloudAccountId}/exclusions": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAccountExclusions",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessExclusionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PostExclusion",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessExclusionModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessExclusionModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/{cloudProvider}/accounts/{cloudAccountId}/exclusions": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAccountExclusions",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessExclusionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PostExclusion",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessExclusionModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessExclusionModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/accounts/{cloudAccountId}/rules": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAccountRules",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessRuleViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PostRule",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessRuleModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessRuleModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/{cloudProvider}/accounts/{cloudAccountId}/rules": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAccountRules",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessRuleViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PostRule",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessRuleModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessRuleModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/accounts/{cloudAccountId}/rules/{ruleId}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetRule",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ruleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessRuleViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PutRule",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ruleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessRuleModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessRuleModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_DeleteRule",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ruleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessDeleteRuleViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/{cloudProvider}/accounts/{cloudAccountId}/rules/{ruleId}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetRule",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ruleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessRuleViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PutRule",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ruleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessRuleModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessRuleModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_DeleteRule",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ruleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessDeleteRuleViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/accounts/{cloudAccountId}/exclusions/{exclusionId}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetExclusion",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclusionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessExclusionViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PutExclusion",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclusionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessExclusionModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessExclusionModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_DeleteExclusion",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclusionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessDeleteRuleViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/{cloudProvider}/accounts/{cloudAccountId}/exclusions/{exclusionId}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetExclusion",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclusionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessExclusionViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PutExclusion",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclusionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessExclusionModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessExclusionModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_DeleteExclusion",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclusionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessDeleteRuleViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/aws/accounts/{cloudAccountId}/missingPermissions": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAccountMissingPermissions",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessMissingPermissionsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/aws/accounts/{cloudAccountId}/missingPermissions/validate": {
            "put": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_ValidateAccountMissingPermissions",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Falconetix-Model-ServiceInterfaces-Serverless-ServerlessApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/functions/{id}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetFunction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessFunctionViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/aws/functions/{id}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetFunction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessFunctionViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/azure/functions/{id}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAzureFunctionApp",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessFunctionAppViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/kubernetes/functions/{id}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetKubernetesPodGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessPodGroupViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/aws/functions/{id}/addLogSubscription": {
            "post": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_FunctionAddLogSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/{cloudProvider}/accounts/{cloudAccountId}/functions": {
            "patch": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PutFunctions",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessPutFunctionResponseViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessPutFunctionsListViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessPutFunctionsListViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/{cloudProvider}/functions/{id}": {
            "patch": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PutFunction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessPutSingleFunctionViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessPutSingleFunctionViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/functions/{id}/fsp": {
            "patch": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PutFunctionAutoFsp",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-EnableFSPViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-EnableFSPViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/functions/{id}/fspMode": {
            "patch": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PutFunctionFspBlock",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessEnableFunctionFSPBlockBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessEnableFunctionFSPBlockBody"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/{cloudProvider}/functions/{id}/fspMode": {
            "patch": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_PutFunctionFspBlock",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessEnableFunctionFSPBlockBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Serverless-ServerlessEnableFunctionFSPBlockBody"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/serverless/functions/{id}/whitelist": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetFunctionWhitelist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessWhiteListViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/{cloudProvider}/functions/{id}/whitelist": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetFunctionWhitelist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessWhiteListViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/azure/functions/{id}/whitelist/{functionName}": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetAzureFunctionWhitelist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "functionName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessWhiteListViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/functions/{id}/exclusions": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetFunctionExclusions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessExclusionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/{cloudProvider}/functions/{id}/exclusions": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetFunctionExclusions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessExclusionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/functions/{id}/rules": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetFunctionRules",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessRuleViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/{cloudProvider}/functions/{id}/rules": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetFunctionRules",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cloudProvider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure",
                                "kubernetes"
                            ]
                        }
                    },
                    {
                        "name": "withPayloadObject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessRuleViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/fsp/versions": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetFspVersions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Serverless-ServerlessFspVersioViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/workloadProtection/runtimes": {
            "get": {
                "tags": [
                    "Serverless"
                ],
                "operationId": "Serverless_GetSupportedRuntimes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serverless-ServerlessFSPSupportedRuntimesViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/serverless/policy/{id}": {
            "get": {
                "tags": [
                    "ServerlessPolicy"
                ],
                "summary": "Get single policy by its ID.\r\nReturns a policy matching a given ID.",
                "operationId": "ServerlessPolicy_GetAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Policy's ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compliance-Serverless-Policy-ServerlessPolicyViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ServerlessPolicy"
                ],
                "summary": "Delete policy by its ID.",
                "operationId": "ServerlessPolicy_DeleteAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Policy's ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/serverless/policy": {
            "get": {
                "tags": [
                    "ServerlessPolicy"
                ],
                "summary": "Get all policies for the requesting account.\r\nReturns a collection of policies.",
                "operationId": "ServerlessPolicy_GetAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-Serverless-Policy-ServerlessPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ServerlessPolicy"
                ],
                "summary": "Update policies.\r\nReturns a multi status response containing successfully updated policies without an error message and failed policies with an error message.",
                "operationId": "ServerlessPolicy_PutAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-Serverless-Policy-ServerlessPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Compliance-Serverless-Policy-ServerlessPolicyRequestModel"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Compliance-Serverless-Policy-ServerlessPolicyRequestModel"
                                }
                            }
                        }
                    },
                    "description": "Policies to update",
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "ServerlessPolicy"
                ],
                "summary": "Create new policies.\r\nReturns a multi status response containing successfully created policies without an error message and failed policies with an error message.",
                "operationId": "ServerlessPolicy_PostAsync",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compliance-Serverless-Policy-ServerlessPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Compliance-Serverless-Policy-ServerlessPolicyRequestModel"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Compliance-Serverless-Policy-ServerlessPolicyRequestModel"
                                }
                            }
                        }
                    },
                    "description": "Policies to create",
                    "required": true
                }
            }
        },
        "/v2/service-account/update": {
            "post": {
                "tags": [
                    "ServiceAccount"
                ],
                "summary": "Update a Service Account (Name and Roles)",
                "operationId": "ServiceAccount_UpdateServiceAccount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountViewModel"
                            }
                        }
                    },
                    "description": "Includes the role ID to update and the new name and role IDs to apply",
                    "required": true
                }
            }
        },
        "/v2/service-account/{id}": {
            "get": {
                "tags": [
                    "ServiceAccount"
                ],
                "summary": "Get details on all service accounts in the account",
                "operationId": "ServiceAccount_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceAccountGetViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/service-account/{serviceAccountId}": {
            "delete": {
                "tags": [
                    "ServiceAccount"
                ],
                "summary": "Delete a specific Service Account by ID",
                "operationId": "ServiceAccount_DeleteServiceAccount",
                "parameters": [
                    {
                        "name": "serviceAccountId",
                        "in": "path",
                        "description": "The ID of the Service Account to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/service-account/generate-key": {
            "post": {
                "tags": [
                    "ServiceAccount"
                ],
                "summary": "Generate a new access key and secret for a specific Service Account",
                "operationId": "ServiceAccount_GenerateSecretForServiceAccount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountViewModel"
                            }
                        }
                    },
                    "description": "Details on the Service Account. Only the ID is required",
                    "required": true
                }
            }
        },
        "/v2/service-account": {
            "get": {
                "tags": [
                    "ServiceAccount"
                ],
                "summary": "Get details on all service accounts in the account",
                "operationId": "ServiceAccount_GetServiceAccounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ServiceAccountGetViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ServiceAccount"
                ],
                "summary": "Create a new Service Account",
                "operationId": "ServiceAccount_PostServiceAccount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountViewModel"
                            }
                        }
                    },
                    "description": "The name of the Service Account and the role IDs to assign it.",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "ServiceAccount"
                ],
                "summary": "Delete all Service Accounts in the account",
                "operationId": "ServiceAccount_DeleteAllServiceAccountsForUser",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/service-port": {
            "get": {
                "tags": [
                    "ServicePort"
                ],
                "operationId": "ServicePort_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Models-ServicePortViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/settings/lease-time": {
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update default lease time duration",
                "operationId": "Settings_UpdateLeaseTime",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "format": "double",
                                "type": "number"
                            }
                        }
                    },
                    "description": "default lease time duraion",
                    "required": true
                }
            }
        },
        "/v2/settings/email-notifications": {
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update email notifications\r\n<para>Set what entities related notifications will be sent by email</para>",
                "operationId": "Settings_UpdateEmailNotifications",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-EmailNotificationsDescriptor"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Falconetix-Model-EmailNotificationsDescriptor"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/settings/Sns": {
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update AWS SNS settings for account",
                "operationId": "Settings_UpdateSnsIntegration",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-SnsSettingsViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-SnsSettingsViewModel"
                            }
                        }
                    },
                    "description": "ARN for AWS SNS Topic",
                    "required": true
                }
            },
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Create new AWS SNS settings for account",
                "operationId": "Settings_AddSnsIntegration",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-SnsSettingsViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-SnsSettingsViewModel"
                            }
                        }
                    },
                    "description": "ARN for AWS SNS topic",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Settings"
                ],
                "summary": "Delete SNS notifications for account",
                "operationId": "Settings_DeleteSnsIntegration",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/settings/email-notification-filters/cloudAccounts": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get the cloud acounts set to receive email notifications",
                "operationId": "Settings_GetEmailNotificationFilters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-EmailNotificationFiltersViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "operationId": "Settings_UpdateEmailNotificationFilters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-EmailNotificationFiltersViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-EmailNotificationFiltersViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-EmailNotificationFiltersViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Settings"
                ],
                "summary": "Set the cloud accounts to null so all events emails will be sent for all cloud accounts",
                "operationId": "Settings_DeleteEmailNotificationFilters",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/Settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get account settings",
                "operationId": "Settings_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Models-SettingsViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update account settings (partial)",
                "operationId": "Settings_UpdateSettings",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-SettingsViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Models-SettingsViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/ShiftLeft/{url}": {
            "get": {
                "tags": [
                    "ShiftLeft"
                ],
                "summary": "proxy to ShiftLeft backend",
                "operationId": "ShiftLeft_Get",
                "parameters": [
                    {
                        "name": "url",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeft/blades": {
            "get": {
                "tags": [
                    "ShiftLeft"
                ],
                "summary": "proxy to ShiftLeft Cli page",
                "operationId": "ShiftLeft_GetBlades",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeft/blades/{os}/{arch}": {
            "get": {
                "tags": [
                    "ShiftLeft"
                ],
                "summary": "proxy to ShiftLeft Cli page",
                "operationId": "ShiftLeft_GetBladesOs",
                "parameters": [
                    {
                        "name": "os",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "arch",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/SystemHealth/A6466E1C1418041A3809D02282C6Aa077": {
            "get": {
                "tags": [
                    "SystemHealth"
                ],
                "operationId": "SystemHealth_SleepingBackendForSeconds",
                "parameters": [
                    {
                        "name": "seconds",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/SystemHealth": {
            "get": {
                "tags": [
                    "SystemHealth"
                ],
                "summary": "This endpoint is used by the ALB for \"is alive\" check. The return value is an arbitrary string.",
                "operationId": "SystemHealth_Get",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/TenableAccount/{id}/Validate": {
            "post": {
                "tags": [
                    "TenableAccount"
                ],
                "operationId": "TenableAccount_ValidatePermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/TenableAccount/Sync": {
            "post": {
                "tags": [
                    "TenableAccount"
                ],
                "operationId": "TenableAccount_SyncVulnerabilities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenable-Account-TenableVulnerabilitySyncResultViewModel"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenable-Account-TenableVulnerabilitySyncViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenable-Account-TenableVulnerabilitySyncViewModel"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v2/TenableAccount": {
            "get": {
                "tags": [
                    "TenableAccount"
                ],
                "operationId": "TenableAccount_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenable-Account-TenableAccountStatusViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TenableAccount"
                ],
                "operationId": "TenableAccount_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenable-Account-TenableAccountViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenable-Account-TenableAccountViewModel"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "TenableAccount"
                ],
                "operationId": "TenableAccount_Delete",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get the user with the specified id.",
                "operationId": "User_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Can be 'me' or a numeric value",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "me"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-UserViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the user with the specified id",
                "operationId": "User_Put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Can be 'me' or a numeric value",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "me"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-UserViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User-UserViewModel"
                            }
                        }
                    },
                    "description": "Can update permissions with \"Permissions\", roles with \"RoleIds\" and SSO Enabled with \"SsoEnabled\"",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "operationId": "User_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Can be 'me' or a numeric value",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "me"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/user/{id}/unlock": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Unlock a user that was locked out after a certain number of failed authentications.",
                "operationId": "User_UnlockUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Can be 'me' or a numeric value",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "me"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/user/{id}/iam-safe/accounts/{accountId}/iamEntities": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update IAM Safe entities for a user.",
                "operationId": "User_PutIamSafeAccountIamEntities",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Can be 'me' or a numeric value",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "me"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAndRole-IamSafe-UserIamSafeAccountPutViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAndRole-IamSafe-UserIamSafeAccountPutViewModel"
                            }
                        }
                    },
                    "description": "The IAM entities to link",
                    "required": true
                }
            }
        },
        "/v2/user/{id}/iam-safe/accounts/{cloudAccountId}/iamEntities": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add IAM Safe entities for a user.",
                "operationId": "User_PostIamSafeAccountIamEntitiesAsync",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Can be 'me' or a numeric value",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "me"
                        }
                    },
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "description": " internal ID or AWS ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAndRole-IamSafe-UserIamSafeAccountPutViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAndRole-IamSafe-UserIamSafeAccountPutViewModel"
                            }
                        }
                    },
                    "description": "The IAM entities to link",
                    "required": true
                }
            }
        },
        "/v2/user/{id}/iam-safe/accounts/{accountId}/deleteIamEntities": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Delete iam entities for user",
                "operationId": "User_DeleteIamSafeEntitiesForUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Can be 'me' or a numeric value",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "me"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The cloud account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAndRole-IamSafe-UserIamSafeAccountPutViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAndRole-IamSafe-UserIamSafeAccountPutViewModel"
                            }
                        }
                    },
                    "description": "The IAM entities to remove",
                    "required": true
                }
            }
        },
        "/v2/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all  users for the  account.",
                "operationId": "User_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User-UserViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new  user",
                "operationId": "User_Post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-UserPostViewModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User-UserPostViewModel"
                            }
                        }
                    },
                    "description": "The new user",
                    "required": true
                }
            }
        },
        "/v2/workload/accountSetting": {
            "get": {
                "tags": [
                    "WorkloadAccountSetting"
                ],
                "operationId": "WorkloadAccountSetting_GetAccountSettings",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "imageAssurance": {
                                            "properties": {
                                                "daysToKeepNonActiveKubernetesImages": {
                                                    "type": "integer"
                                                },
                                                "daysToKeepNonActiveShiftLeftImages": {
                                                    "type": "integer"
                                                },
                                                "daysToKeepNonActiveAwsEcsImages": {
                                                    "type": "integer"
                                                },
                                                "registryScanningIntervalInHours": {
                                                    "type": "integer"
                                                },
                                                "maxImagesPerRepo": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    },
                                    "definitions": {
                                        "ImageAssurance": {
                                            "type": "object",
                                            "properties": {
                                                "daysToKeepNonActiveKubernetesImages": {
                                                    "type": "integer"
                                                },
                                                "daysToKeepNonActiveShiftLeftImages": {
                                                    "type": "integer"
                                                },
                                                "daysToKeepNonActiveAwsEcsImages": {
                                                    "type": "integer"
                                                },
                                                "registryScanningIntervalInHours": {
                                                    "type": "integer"
                                                },
                                                "maxImagesPerRepo": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "imageAssurance": {
                                        "daysToKeepNonActiveKubernetesImages": 7,
                                        "daysToKeepNonActiveShiftLeftImages": 30,
                                        "daysToKeepNonActiveAwsEcsImages": 7,
                                        "registryScanningIntervalInHours": 12,
                                        "maxImagesPerRepo": 10
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "WorkloadAccountSetting"
                ],
                "operationId": "WorkloadAccountSetting_SetAccountSettings",
                "requestBody": {
                    "x-name": "_",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "imageAssurance": {
                                        "properties": {
                                            "daysToKeepNonActiveKubernetesImages": {
                                                "type": "integer"
                                            },
                                            "daysToKeepNonActiveShiftLeftImages": {
                                                "type": "integer"
                                            },
                                            "daysToKeepNonActiveAwsEcsImages": {
                                                "type": "integer"
                                            },
                                            "registryScanningIntervalInHours": {
                                                "type": "integer"
                                            },
                                            "maxImagesPerRepo": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "definitions": {
                                    "ImageAssurance": {
                                        "type": "object",
                                        "properties": {
                                            "daysToKeepNonActiveKubernetesImages": {
                                                "type": "integer"
                                            },
                                            "daysToKeepNonActiveShiftLeftImages": {
                                                "type": "integer"
                                            },
                                            "daysToKeepNonActiveAwsEcsImages": {
                                                "type": "integer"
                                            },
                                            "registryScanningIntervalInHours": {
                                                "type": "integer"
                                            },
                                            "maxImagesPerRepo": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "WorkloadAccountSettingModel": {
                                    "value": {
                                        "imageAssurance": {
                                            "daysToKeepNonActiveKubernetesImages": 7,
                                            "daysToKeepNonActiveShiftLeftImages": 30,
                                            "daysToKeepNonActiveAwsEcsImages": 7,
                                            "registryScanningIntervalInHours": 12,
                                            "maxImagesPerRepo": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "tags": [
                    "WorkloadAccountSetting"
                ],
                "operationId": "WorkloadAccountSetting_UpdateAccountSettings",
                "requestBody": {
                    "x-name": "_",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "imageAssurance": {
                                        "properties": {
                                            "daysToKeepNonActiveKubernetesImages": {
                                                "type": "integer"
                                            },
                                            "daysToKeepNonActiveShiftLeftImages": {
                                                "type": "integer"
                                            },
                                            "daysToKeepNonActiveAwsEcsImages": {
                                                "type": "integer"
                                            },
                                            "registryScanningIntervalInHours": {
                                                "type": "integer"
                                            },
                                            "maxImagesPerRepo": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "definitions": {
                                    "ImageAssurance": {
                                        "type": "object",
                                        "properties": {
                                            "daysToKeepNonActiveKubernetesImages": {
                                                "type": "integer"
                                            },
                                            "daysToKeepNonActiveShiftLeftImages": {
                                                "type": "integer"
                                            },
                                            "daysToKeepNonActiveAwsEcsImages": {
                                                "type": "integer"
                                            },
                                            "registryScanningIntervalInHours": {
                                                "type": "integer"
                                            },
                                            "maxImagesPerRepo": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "WorkloadAccountSettingModel": {
                                    "value": {
                                        "imageAssurance": {
                                            "daysToKeepNonActiveKubernetesImages": 7,
                                            "daysToKeepNonActiveShiftLeftImages": 30,
                                            "daysToKeepNonActiveAwsEcsImages": 7,
                                            "registryScanningIntervalInHours": 12,
                                            "maxImagesPerRepo": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/podGroup/daemonSet/{id}/podList": {
            "get": {
                "tags": [
                    "KubernetesPodGroup"
                ],
                "summary": "Get daemon set pods",
                "operationId": "KubernetesPodGroup_GetDaemonSetPodList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  daemon set id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/podGroup/deployment/{id}/podList": {
            "get": {
                "tags": [
                    "KubernetesPodGroup"
                ],
                "summary": "Get deployment pods",
                "operationId": "KubernetesPodGroup_GetDeploymentPodList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  deployment id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/podGroup/replicaSet/{id}/podList": {
            "get": {
                "tags": [
                    "KubernetesPodGroup"
                ],
                "summary": "Get replica set pods",
                "operationId": "KubernetesPodGroup_GetReplicaSetPodList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  replica set id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/podGroup/statefulSet/{id}/podList": {
            "get": {
                "tags": [
                    "KubernetesPodGroup"
                ],
                "summary": "Get stateful set pods",
                "operationId": "KubernetesPodGroup_GetStatefulSetPodList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  stateful set id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/podGroup/pod/{id}/images": {
            "get": {
                "tags": [
                    "KubernetesPodGroup"
                ],
                "summary": "Get pod images",
                "operationId": "KubernetesPodGroup_GetPodImages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  pod id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/podGroup/cronJob/{id}/images": {
            "get": {
                "tags": [
                    "KubernetesPodGroup"
                ],
                "summary": "Get pod images",
                "operationId": "KubernetesPodGroup_GetCronJobImages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  pod id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/podGroup/daemonSet/{id}/images": {
            "get": {
                "tags": [
                    "KubernetesPodGroup"
                ],
                "summary": "Get daemonset images",
                "operationId": "KubernetesPodGroup_GetDaemonSetImages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  daemonset id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/podGroup/deployment/{id}/images": {
            "get": {
                "tags": [
                    "KubernetesPodGroup"
                ],
                "summary": "Get deployment images",
                "operationId": "KubernetesPodGroup_GetDeploymentImages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  deployment id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/podGroup/replicaSet/{id}/images": {
            "get": {
                "tags": [
                    "KubernetesPodGroup"
                ],
                "summary": "Get replica set images",
                "operationId": "KubernetesPodGroup_GetReplicaSetImages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  replicaset id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/podGroup/statefulSet/{id}/images": {
            "get": {
                "tags": [
                    "KubernetesPodGroup"
                ],
                "summary": "Get stateful set images",
                "operationId": "KubernetesPodGroup_GetStatefulSetImages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  stateful set id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/imageAssurance/image": {
            "get": {
                "tags": [
                    "KubernetesImageAssurance"
                ],
                "summary": "Fetch a specific image",
                "operationId": "KubernetesImageAssurance_GetImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Image ID (entityId in the Image Entity viewer)\n             \n            id in the following format: ASSET_TYPE|CloudAccountId|Image|ImageSha\n            (ASSET_TYPE: 11 for Kubernetes Image)\n            e.g.\n            11|ffb03c67-83c0-4d92-bf03-880eb0781948|Image|sha256:40d4b9bf327a85059a4842b043f67b8a7221d8487d42d17a55f85085d0ffb328\n             \n             ",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesImageViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/imageAssurance/image/vulnerabilities": {
            "get": {
                "tags": [
                    "KubernetesImageAssurance"
                ],
                "summary": "Get the list of all vulnerabilities for a specific image (this api is deprecated, please use '/v2/vulnerability/' instead)",
                "operationId": "KubernetesImageAssurance_GetImageVulnerabilities",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Image ID (entityId)",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "filter vulnerabilities with specific category",
                        "schema": {
                            "type": "string",
                            "default": "",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "remediationsOnly",
                        "in": "query",
                        "description": "filter vulnerabilities with remediation",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "x-position": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesImageScanVulnerabilitiesViewModel"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/v2/kubernetes/imageAssurance/image/podGroups": {
            "get": {
                "tags": [
                    "KubernetesImageAssurance"
                ],
                "summary": "Get pod groups that have running pod with specific image.         \nUse either  Image Id for results in current environment, or External Image Id for results in all environments of the account.",
                "operationId": "KubernetesImageAssurance_GetPodGroups",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Image ID (entityId).\n            \n            For results in the specific cluster.\n            \n            ",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "externalId",
                        "in": "query",
                        "description": "External image id (Image SHA).\n            \n            External Image Id is built in the following format: sha256:[image sha]\n            For results in all environments of the account.\n                    \n            ",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success (Empty list means no pods are running the image).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KubernetesImagePodGroupsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/imageAssurance/policy/{id}": {
            "get": {
                "tags": [
                    "KubernetesImageAssurancePolicy"
                ],
                "summary": "Get single policy by its ID.\nReturns a policy matching a given ID.",
                "operationId": "KubernetesImageAssurancePolicy_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Policy's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageAssurancePolicyViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "KubernetesImageAssurancePolicy"
                ],
                "summary": "Delete policy by its ID.",
                "operationId": "KubernetesImageAssurancePolicy_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Policy's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/imageAssurance/policy": {
            "get": {
                "tags": [
                    "KubernetesImageAssurancePolicy"
                ],
                "summary": "Get all policies for the requesting account.\nReturns a collection of policies.",
                "operationId": "KubernetesImageAssurancePolicy_GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ImageAssurancePolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "KubernetesImageAssurancePolicy"
                ],
                "summary": "Create new policies.\nReturns a multi status response containing successfully created policies without an error message and failed policies with an error message.",
                "operationId": "KubernetesImageAssurancePolicy_Post",
                "requestBody": {
                    "x-name": "kubernetesImageAssurancePolicyRequestModels",
                    "description": "Policies to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ImageAssurancePolicyRequestModel"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ImageAssurancePolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "KubernetesImageAssurancePolicy"
                ],
                "summary": "Update policies.\nReturns a multi status response containing successfully updated policies without an error message and failed policies with an error message.",
                "operationId": "KubernetesImageAssurancePolicy_Put",
                "requestBody": {
                    "x-name": "kubernetesImageAssurancePolicyRequestModels",
                    "description": "Policies to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ImageAssurancePolicyRequestModel"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ImageAssurancePolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account": {
            "get": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Get a list of all Kubernetes accounts",
                "operationId": "KubernetesAccount_GetAll",
                "responses": {
                    "200": {
                        "description": "A list of Kubernetes accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KubernetesAccountViewModel"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                        "externalAccountNumber": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                        "threatIntelligenceEnabled": false,
                                        "imageAssuranceEnabled": false,
                                        "imageAccessRuntimeMonitorEnabled": false,
                                        "runtimeProtectionEnabled": false,
                                        "runtimeProtectionNetwork": false,
                                        "runtimeProtectionProfiling": true,
                                        "runtimeProtectionFileReputation": false,
                                        "admissionControlEnabled": false,
                                        "admissionControlFailOpen": true,
                                        "name": "",
                                        "creationDate": "0001-01-01T00:00:00",
                                        "vendor": "kubernetes",
                                        "organizationalUnitId": null,
                                        "organizationalUnitPath": "",
                                        "organizationalUnitName": "",
                                        "clusterVersion": null,
                                        "clusterVersionStatus": "Unknown",
                                        "clusterVersionStatusDescription": "",
                                        "description": null,
                                        "platform": "kubernetes",
                                        "type": 0
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Add (onboard) a new Kubernetes account to CloudGuard",
                "operationId": "KubernetesAccount_Post",
                "requestBody": {
                    "x-name": "model",
                    "description": "KubernetesGetViewModel that has three paramaters, Name(string), Description(string) and OrgorganizationalUnitId(Guid) ",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KubernetesPostViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesAccountViewModel"
                                },
                                "example": {
                                    "id": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                    "externalAccountNumber": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                    "threatIntelligenceEnabled": false,
                                    "imageAssuranceEnabled": false,
                                    "imageAccessRuntimeMonitorEnabled": false,
                                    "runtimeProtectionEnabled": false,
                                    "runtimeProtectionNetwork": false,
                                    "runtimeProtectionProfiling": true,
                                    "runtimeProtectionFileReputation": false,
                                    "admissionControlEnabled": false,
                                    "admissionControlFailOpen": true,
                                    "name": "",
                                    "creationDate": "0001-01-01T00:00:00",
                                    "vendor": "kubernetes",
                                    "organizationalUnitId": null,
                                    "organizationalUnitPath": "",
                                    "organizationalUnitName": "",
                                    "clusterVersion": null,
                                    "clusterVersionStatus": "Unknown",
                                    "clusterVersionStatusDescription": "",
                                    "description": null,
                                    "platform": "kubernetes",
                                    "type": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}": {
            "get": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Get details for a specific Kubernetes Account",
                "operationId": "KubernetesAccount_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Kubernetes account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesAccountViewModel"
                                },
                                "example": {
                                    "id": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                    "externalAccountNumber": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                    "threatIntelligenceEnabled": false,
                                    "imageAssuranceEnabled": false,
                                    "imageAccessRuntimeMonitorEnabled": false,
                                    "runtimeProtectionEnabled": false,
                                    "runtimeProtectionNetwork": false,
                                    "runtimeProtectionProfiling": true,
                                    "runtimeProtectionFileReputation": false,
                                    "admissionControlEnabled": false,
                                    "admissionControlFailOpen": true,
                                    "name": "",
                                    "creationDate": "0001-01-01T00:00:00",
                                    "vendor": "kubernetes",
                                    "organizationalUnitId": null,
                                    "organizationalUnitPath": "",
                                    "organizationalUnitName": "",
                                    "clusterVersion": null,
                                    "clusterVersionStatus": "Unknown",
                                    "clusterVersionStatusDescription": "",
                                    "description": null,
                                    "platform": "kubernetes",
                                    "type": 0
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Delete a Kubernetes account (from CloudGuard)",
                "operationId": "KubernetesAccount_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Id of the Kubernetes account",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/accountName": {
            "put": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Update a Kubernetes account name (as it appears in CloudGuard)",
                "operationId": "KubernetesAccount_UpdateAccountName",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Kubernetes account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "the updated name as it will appear in CloudGuard",
                        "schema": {
                            "type": "string",
                            "maxLength": 500,
                            "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesAccountViewModel"
                                },
                                "example": {
                                    "id": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                    "externalAccountNumber": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                    "threatIntelligenceEnabled": false,
                                    "imageAssuranceEnabled": false,
                                    "imageAccessRuntimeMonitorEnabled": false,
                                    "runtimeProtectionEnabled": false,
                                    "runtimeProtectionNetwork": false,
                                    "runtimeProtectionProfiling": true,
                                    "runtimeProtectionFileReputation": false,
                                    "admissionControlEnabled": false,
                                    "admissionControlFailOpen": true,
                                    "name": "",
                                    "creationDate": "0001-01-01T00:00:00",
                                    "vendor": "kubernetes",
                                    "organizationalUnitId": null,
                                    "organizationalUnitPath": "",
                                    "organizationalUnitName": "",
                                    "clusterVersion": null,
                                    "clusterVersionStatus": "Unknown",
                                    "clusterVersionStatusDescription": "",
                                    "description": null,
                                    "platform": "kubernetes",
                                    "type": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/accountDescription": {
            "put": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Update a Kubernetes account description (as it appears in CloudGuard)",
                "operationId": "KubernetesAccount_UpdateAccountDescription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Kubernetes account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "the updated description as it will appear in CloudGuard",
                        "schema": {
                            "type": "string",
                            "maxLength": 1000,
                            "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$",
                            "nullable": true
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesAccountViewModel"
                                },
                                "example": {
                                    "id": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                    "externalAccountNumber": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                    "threatIntelligenceEnabled": false,
                                    "imageAssuranceEnabled": false,
                                    "imageAccessRuntimeMonitorEnabled": false,
                                    "runtimeProtectionEnabled": false,
                                    "runtimeProtectionNetwork": false,
                                    "runtimeProtectionProfiling": true,
                                    "runtimeProtectionFileReputation": false,
                                    "admissionControlEnabled": false,
                                    "admissionControlFailOpen": true,
                                    "name": "",
                                    "creationDate": "0001-01-01T00:00:00",
                                    "vendor": "kubernetes",
                                    "organizationalUnitId": null,
                                    "organizationalUnitPath": "",
                                    "organizationalUnitName": "",
                                    "clusterVersion": null,
                                    "clusterVersionStatus": "Unknown",
                                    "clusterVersionStatusDescription": "",
                                    "description": null,
                                    "platform": "kubernetes",
                                    "type": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/imageAssurance/enable": {
            "post": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Enable Image Assurance feature for Kubernetes (cluster) account",
                "operationId": "KubernetesAccount_EnableImageAssurance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Kubernetes account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/imageAssurance/disable": {
            "post": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Disable Image Assurance feature for Kubernetes (cluster) account",
                "operationId": "KubernetesAccount_DisableImageAssurance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Kubernetes account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/runtimeProtection/enable": {
            "post": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Enable Runtime Protection for Kubernetes account",
                "operationId": "KubernetesAccount_EnableRuntimeProtection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Kubernetes account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/admissionControl/enable": {
            "post": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Enable Admission Control for Kubernetes account",
                "operationId": "KubernetesAccount_EnableAdmissionControl",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/admissionControl/disable": {
            "post": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Disable Admission Control for Kubernetes account",
                "operationId": "KubernetesAccount_DisableAdmissionControl",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/accountSummary": {
            "get": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Get Kubernetes account summary data",
                "operationId": "KubernetesAccount_GetAccountSummary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Kubernetes account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "KubernetesAccountSummaryViewModel",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesAccountSummaryViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account/accountAgentStatus": {
            "get": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Get Kubernetes account agent status",
                "operationId": "KubernetesAccount_GetAccountAgentStatus",
                "responses": {
                    "200": {
                        "description": "List of KubernetesAccountAgentStatusViewModel",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KubernetesAccountAgentStatusViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account/agentStatusReportCSV": {
            "post": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Get a CSV table that provides the status of all agents in the Kubernetes account",
                "operationId": "KubernetesAccount_GetCsvAccountAgentStatus",
                "requestBody": {
                    "x-name": "filtersReq",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KubernetesAccountAgentStatusFiltersViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "CSV table with the following data for each agent: \"Cluster Id\", \"Cluster Name\", \"Organizational Unit Id\", \"Organizational Unit Path\", \"Agent Type\", \"Node Name\", \"Version\", \"Status\", \"Description\", \"Last Communication\", \"Is Agent Up To Date\"",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/agentSummary": {
            "get": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Get Kubernetes account agent summary data",
                "operationId": "KubernetesAccount_GetAgentSummary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Kubernetes account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "KubernetesAgentsSummaryViewModel",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KubernetesAgentsSummaryViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/resolveMultipleOnboarding": {
            "post": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Unblock Kubernetes account due to Multiple Onboarding",
                "operationId": "KubernetesAccount_ResolveMultipleOnboarding",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Kubernetes account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/account/{id}/organizationalUnit": {
            "put": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Update the ID of the Organizational unit that this cloud account will be attached to.\nUse 'null' for root organizational unit",
                "operationId": "KubernetesAccount_UpdateOrganizationalId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Guid ID of the Kubernetes account",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "updateData",
                    "description": "The Guid ID of the Organizational Unit to attach to. Use null in order to attach to root Organizational Unit",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesAccountViewModel"
                                },
                                "example": {
                                    "id": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                    "externalAccountNumber": "d9738586-b34a-4a27-be80-cbc5f82f1bd6",
                                    "threatIntelligenceEnabled": false,
                                    "imageAssuranceEnabled": false,
                                    "imageAccessRuntimeMonitorEnabled": false,
                                    "runtimeProtectionEnabled": false,
                                    "runtimeProtectionNetwork": false,
                                    "runtimeProtectionProfiling": true,
                                    "runtimeProtectionFileReputation": false,
                                    "admissionControlEnabled": false,
                                    "admissionControlFailOpen": true,
                                    "name": "",
                                    "creationDate": "0001-01-01T00:00:00",
                                    "vendor": "kubernetes",
                                    "organizationalUnitId": null,
                                    "organizationalUnitPath": "",
                                    "organizationalUnitName": "",
                                    "clusterVersion": null,
                                    "clusterVersionStatus": "Unknown",
                                    "clusterVersionStatusDescription": "",
                                    "description": null,
                                    "platform": "kubernetes",
                                    "type": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account/organizationalUnit/move": {
            "put": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Detach cloud accounts from an Organizational unit and attach them to another Organizational unit\nUse 'null' for root organizational unit",
                "operationId": "KubernetesAccount_MoveCloudAccountsToOrganizationalUnit",
                "requestBody": {
                    "x-name": "moveData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MoveOrganizationalUnitViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account/organizationalUnit/moveAll": {
            "put": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Detach all Kubernetes accounts from their current organizational unit and attach them to a new one. Default is to root organizational unit",
                "operationId": "KubernetesAccount_MoveAllCloudAccountsToOrganizationalUnit",
                "requestBody": {
                    "x-name": "updateData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/account/organizationalUnit/attach": {
            "post": {
                "tags": [
                    "KubernetesAccount"
                ],
                "summary": "Attach several Kubernetes accounts to a specific Organizational Unit. User 'null' as root Organizational Unit as target",
                "operationId": "KubernetesAccount_PostAttachMulti",
                "requestBody": {
                    "x-name": "attachData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachCloudAccountsViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/containerRegistry/account": {
            "get": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "get all container registry",
                "operationId": "ContainerRegistryAccount_GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContainerRegistryAccountViewModel"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "ede4a067-2879-4e38-a18d-a43fc968f3b2",
                                        "creationDate": "0001-01-01T00:00:00",
                                        "organizationalUnitPath": "",
                                        "organizationalUnitName": "",
                                        "name": "",
                                        "registryUrl": "",
                                        "organizationalUnitId": null,
                                        "linkedScanningEnvironments": [
                                            {
                                                "environmentId": "edac23d7-e720-4036-a29e-e41d3b825c18",
                                                "pullSecretName": null,
                                                "tenantId": null,
                                                "applicationClientId": null,
                                                "scanningEnvironmentType": "AWS",
                                                "registryAuthType": "AcrServicePrincipal",
                                                "roleArn": null
                                            }
                                        ],
                                        "description": null,
                                        "platform": "containerregistry",
                                        "type": "ACR"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "create new container registry",
                "operationId": "ContainerRegistryAccount_Post",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerRegistryAccountPostModel"
                            },
                            "examples": {
                                "ContainerRegistryAccountRequestModelExample": {
                                    "value": {
                                        "name": "string",
                                        "description": "string",
                                        "organizationalUnitId": "00000000-0000-0000-0000-000000000000",
                                        "registryType": "ACR",
                                        "registryUrl": "string",
                                        "linkedScanningEnvironments": [
                                            {
                                                "environmentId": "7b662146-2f97-45d3-aece-4ef3f010aada",
                                                "pullSecretName": "string",
                                                "tenantId": "string",
                                                "applicationClientId": "string",
                                                "scanningEnvironmentType": "AWS",
                                                "registryAuthType": "AcrServicePrincipal",
                                                "roleArn": null
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerRegistryAccountViewModel"
                                },
                                "example": {
                                    "id": "ede4a067-2879-4e38-a18d-a43fc968f3b2",
                                    "creationDate": "0001-01-01T00:00:00",
                                    "organizationalUnitPath": "",
                                    "organizationalUnitName": "",
                                    "name": "",
                                    "registryUrl": "",
                                    "organizationalUnitId": null,
                                    "linkedScanningEnvironments": [
                                        {
                                            "environmentId": "edac23d7-e720-4036-a29e-e41d3b825c18",
                                            "pullSecretName": null,
                                            "tenantId": null,
                                            "applicationClientId": null,
                                            "scanningEnvironmentType": "AWS",
                                            "registryAuthType": "AcrServicePrincipal",
                                            "roleArn": null
                                        }
                                    ],
                                    "description": null,
                                    "platform": "containerregistry",
                                    "type": "ACR"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/containerRegistry/account/{id}": {
            "get": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "get single container registry by id",
                "operationId": "ContainerRegistryAccount_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerRegistryAccountViewModel"
                                },
                                "example": {
                                    "id": "ede4a067-2879-4e38-a18d-a43fc968f3b2",
                                    "creationDate": "0001-01-01T00:00:00",
                                    "organizationalUnitPath": "",
                                    "organizationalUnitName": "",
                                    "name": "",
                                    "registryUrl": "",
                                    "organizationalUnitId": null,
                                    "linkedScanningEnvironments": [
                                        {
                                            "environmentId": "edac23d7-e720-4036-a29e-e41d3b825c18",
                                            "pullSecretName": null,
                                            "tenantId": null,
                                            "applicationClientId": null,
                                            "scanningEnvironmentType": "AWS",
                                            "registryAuthType": "AcrServicePrincipal",
                                            "roleArn": null
                                        }
                                    ],
                                    "description": null,
                                    "platform": "containerregistry",
                                    "type": "ACR"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "delete container registry",
                "operationId": "ContainerRegistryAccount_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/containerRegistry/account/{id}/accountDescription": {
            "put": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "operationId": "ContainerRegistryAccount_UpdateAccountDescription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "maxLength": 1000,
                            "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$",
                            "nullable": true
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerRegistryAccountViewModel"
                                },
                                "example": {
                                    "id": "ede4a067-2879-4e38-a18d-a43fc968f3b2",
                                    "creationDate": "0001-01-01T00:00:00",
                                    "organizationalUnitPath": "",
                                    "organizationalUnitName": "",
                                    "name": "",
                                    "registryUrl": "",
                                    "organizationalUnitId": null,
                                    "linkedScanningEnvironments": [
                                        {
                                            "environmentId": "edac23d7-e720-4036-a29e-e41d3b825c18",
                                            "pullSecretName": null,
                                            "tenantId": null,
                                            "applicationClientId": null,
                                            "scanningEnvironmentType": "AWS",
                                            "registryAuthType": "AcrServicePrincipal",
                                            "roleArn": null
                                        }
                                    ],
                                    "description": null,
                                    "platform": "containerregistry",
                                    "type": "ACR"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/containerRegistry/account/{id}/accountName/{newName}": {
            "put": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "updating container registry name",
                "operationId": "ContainerRegistryAccount_UpdateAccountName",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "newName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 500,
                            "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/containerRegistry/account/{id}/linkedScanningEnvironments": {
            "put": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "update linkedScanningEnvironments",
                "operationId": "ContainerRegistryAccount_UpdateLinkedScanningEnvironments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContainerRegistryLinkedEnvironmentViewModel"
                                }
                            },
                            "examples": {
                                "LinkedEnvironmentsListRequestModelExample": {
                                    "value": [
                                        {
                                            "environmentId": "5fffaeaf-2678-499b-a493-90f03082420e",
                                            "pullSecretName": null,
                                            "tenantId": null,
                                            "applicationClientId": null,
                                            "scanningEnvironmentType": "AWS",
                                            "registryAuthType": "AcrServicePrincipal",
                                            "roleArn": null
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/containerRegistry/account/{id}/linkedScanningEnvironment": {
            "put": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "update or add linkedScanningEnvironment",
                "operationId": "ContainerRegistryAccount_UpdateLinkedScanningEnvironment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerRegistryLinkedEnvironmentViewModel"
                            },
                            "examples": {
                                "LinkedEnvironmentsListRequestModelExample": {
                                    "value": [
                                        {
                                            "environmentId": "5fffaeaf-2678-499b-a493-90f03082420e",
                                            "pullSecretName": null,
                                            "tenantId": null,
                                            "applicationClientId": null,
                                            "scanningEnvironmentType": "AWS",
                                            "registryAuthType": "AcrServicePrincipal",
                                            "roleArn": null
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/containerRegistry/account/{id}/linkedScanningEnvironment/{linkedEnvironmentId}": {
            "delete": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "delete single linkedScanningEnvironment from containerRegistry",
                "operationId": "ContainerRegistryAccount_DeleteLinkedScanningEnvironment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "linkedEnvironmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/containerRegistry/account/{id}/settings": {
            "put": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "Set user configurable properties for the environment",
                "operationId": "ContainerRegistryAccount_SetEnvironmentSettings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Container registry account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "settings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerRegistryUserConfigurationsViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "Update user configurable properties for the environment",
                "operationId": "ContainerRegistryAccount_UpdateEnvironmentSettings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Container registry account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "settings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerRegistryUserConfigurationsViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "get": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "Get user configurable properties for the environment",
                "operationId": "ContainerRegistryAccount_GetEnvironmentSettings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Container registry account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerRegistryUserConfigurationsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/containerRegistry/account/{id}/organizationalUnit": {
            "put": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "Update the ID of the Organizational unit that this cloud account will be attached to.\nUse 'null' for root organizational unit",
                "operationId": "ContainerRegistryAccount_UpdateOrganizationalId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Guid ID of the container registry account",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "updateData",
                    "description": "The Guid ID of the Organizational Unit to attach to. Use null in order to attach to root Organizational Unit",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerRegistryAccountViewModel"
                                },
                                "example": {
                                    "id": "ede4a067-2879-4e38-a18d-a43fc968f3b2",
                                    "creationDate": "0001-01-01T00:00:00",
                                    "organizationalUnitPath": "",
                                    "organizationalUnitName": "",
                                    "name": "",
                                    "registryUrl": "",
                                    "organizationalUnitId": null,
                                    "linkedScanningEnvironments": [
                                        {
                                            "environmentId": "edac23d7-e720-4036-a29e-e41d3b825c18",
                                            "pullSecretName": null,
                                            "tenantId": null,
                                            "applicationClientId": null,
                                            "scanningEnvironmentType": "AWS",
                                            "registryAuthType": "AcrServicePrincipal",
                                            "roleArn": null
                                        }
                                    ],
                                    "description": null,
                                    "platform": "containerregistry",
                                    "type": "ACR"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/containerRegistry/account/organizationalUnit/move": {
            "put": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "Detach cloud accounts from an Organizational unit and attach them to another Organizational unit\nUse 'null' for root organizational unit",
                "operationId": "ContainerRegistryAccount_MoveCloudAccountsToOrganizationalUnit",
                "requestBody": {
                    "x-name": "moveData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MoveOrganizationalUnitViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/containerRegistry/account/organizationalUnit/moveAll": {
            "put": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "Detach all container registry accounts from their current organizational unit and attach them to a new one. Default is to root organizational unit",
                "operationId": "ContainerRegistryAccount_MoveAllCloudAccountsToOrganizationalUnit",
                "requestBody": {
                    "x-name": "updateData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/containerRegistry/account/organizationalUnit/attach": {
            "post": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "Attach several container registry accounts to a specific Organizational Unit. User 'null' as root Organizational Unit as target",
                "operationId": "ContainerRegistryAccount_PostAttachMulti",
                "requestBody": {
                    "x-name": "attachData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachCloudAccountsViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/containerRegistry/account/{id}/agentSummary": {
            "get": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "Get Container registry account agent summary data",
                "operationId": "ContainerRegistryAccount_GetAgentSummary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Container registry account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContainerRegistryAgentSummaryViewModel",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContainerRegistryAgentSummaryViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/containerRegistry/account/accountAgentStatus": {
            "get": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "Get container registry account agents status",
                "operationId": "ContainerRegistryAccount_GetAccountAgentStatus",
                "responses": {
                    "200": {
                        "description": "List of ContainerRegistryStatusViewModel",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContainerRegistryAccountAgentSummaryViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/containerRegistry/account/{id}/accountSummary": {
            "get": {
                "tags": [
                    "ContainerRegistryAccount"
                ],
                "summary": "Get Container registry account summary data",
                "operationId": "ContainerRegistryAccount_GetAccountSummary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Container registry account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContainerRegistryAccountSummaryViewModel",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerRegistryAccountSummaryViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/imageAssurance/images": {
            "get": {
                "tags": [
                    "WorkloadImageAssurance"
                ],
                "summary": "Get images by workload id",
                "operationId": "WorkloadImageAssurance_GetWorkloadImagesById",
                "parameters": [
                    {
                        "name": "Id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkloadImageViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/imageAssurance/image": {
            "get": {
                "tags": [
                    "WorkloadImageAssurance"
                ],
                "summary": "Get image details by image-id or digest",
                "operationId": "WorkloadImageAssurance_GetImage",
                "parameters": [
                    {
                        "name": "environmentId",
                        "in": "query",
                        "description": "UUID of the CloudGuard environment containing the image",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "imageIdOrDigest",
                        "in": "query",
                        "description": "Image-id or digest of an image (with or without \"sha256:\" prefix)",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KubernetesImageViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/imageAssurance/image/workloads": {
            "get": {
                "tags": [
                    "WorkloadImageAssurance"
                ],
                "operationId": "WorkloadImageAssurance_GetImageWorkloadsByImageId",
                "parameters": [
                    {
                        "name": "imageIdOrDigest",
                        "in": "query",
                        "description": "ConfigSha of an image or a digest",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageWorkloadsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/imageAssurance/EcsTask/Images": {
            "get": {
                "tags": [
                    "WorkloadImageAssurance"
                ],
                "summary": "Get EcsTask images",
                "operationId": "WorkloadImageAssurance_GetTaskImages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the  EcsTask id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/imageAssurance/EcsService/Images": {
            "get": {
                "tags": [
                    "WorkloadImageAssurance"
                ],
                "summary": "Get EcsService images",
                "operationId": "WorkloadImageAssurance_GetServiceImages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the  Service id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/imageAssurance/EcsCluster/Images": {
            "get": {
                "tags": [
                    "WorkloadImageAssurance"
                ],
                "summary": "Get EcsCluster images",
                "operationId": "WorkloadImageAssurance_GetClusterImages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the  Cluster id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/imageAssurance/scanImage": {
            "post": {
                "tags": [
                    "WorkloadImageAssurance"
                ],
                "operationId": "WorkloadImageAssurance_ScanImage",
                "requestBody": {
                    "x-name": "imageScanRequestModel",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImageScanRequestModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/workload/imageAssurance/scanEnvironment/{environmentId}/all": {
            "post": {
                "tags": [
                    "WorkloadImageAssurance"
                ],
                "operationId": "WorkloadImageAssurance_ScanEnvironmentAll",
                "parameters": [
                    {
                        "name": "environmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageScanRequestViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/workload/imageAssurance/scanEnvironment/{environmentId}/failed": {
            "post": {
                "tags": [
                    "WorkloadImageAssurance"
                ],
                "operationId": "WorkloadImageAssurance_ScanEnvironmentFailed",
                "parameters": [
                    {
                        "name": "environmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageScanRequestViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeftAccount": {
            "get": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Get a list of all  ShiftLeft accounts",
                "operationId": "ShiftLeftAccount_GetAll",
                "responses": {
                    "200": {
                        "description": "A list of  ShiftLeft accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShiftLeftAccountViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Add (onboard) a new ShiftLeft account to CloudGuard",
                "operationId": "ShiftLeftAccount_Post",
                "requestBody": {
                    "x-name": "model",
                    "description": "ShiftLeftGetViewModel",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShiftLeftPostViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftLeftAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeftAccount/{id}": {
            "get": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Get details for a specific  ShiftLeft Account",
                "operationId": "ShiftLeftAccount_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the  ShiftLeft account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftLeftAccountViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Delete a ShiftLeft account and linked entities from CloudGuard.",
                "operationId": "ShiftLeftAccount_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The CloudGuard ShiftLeft account id (UUID)",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/ShiftLeftAccount/{id}/AccountName": {
            "put": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Update a ShiftLeft account name (as it appears in CloudGuard)",
                "operationId": "ShiftLeftAccount_UpdateAccountName",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the ShiftLeft account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "the updated name as it will appear in CloudGuard",
                        "schema": {
                            "type": "string",
                            "maxLength": 500,
                            "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftLeftAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeftAccount/{id}/accountDescription": {
            "put": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Update a ShiftLeft account description (as it appears in CloudGuard)",
                "operationId": "ShiftLeftAccount_UpdateAccountDescription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the ShiftLeft account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "the updated description as it will appear in CloudGuard",
                        "schema": {
                            "type": "string",
                            "maxLength": 1000,
                            "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$",
                            "nullable": true
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftLeftAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeftAccount/{id}/DeleteForce": {
            "delete": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Delete a ShiftLeft account and linked entities from CloudGuard.",
                "operationId": "ShiftLeftAccount_DeleteForce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The CloudGuard ShiftLeft account id (UUID)",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "deprecated": true
            }
        },
        "/v2/ShiftLeftAccount/{id}/organizationalUnit": {
            "put": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Update the ID of the Organizational unit that this cloud account will be attached to.\nUse 'null' for root organizational unit",
                "operationId": "ShiftLeftAccount_UpdateOrganizationalId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Guid ID of the ShiftLeft account",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "updateData",
                    "description": "The Guid ID of the Organizational Unit to attach to. Use null in order to attach to root Organizational Unit",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftLeftAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeftAccount/organizationalUnit/move": {
            "put": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Detach cloud accounts from an Organizational unit and attach them to another Organizational unit\nUse 'null' for root organizational unit",
                "operationId": "ShiftLeftAccount_MoveCloudAccountsToOrganizationalUnit",
                "requestBody": {
                    "x-name": "moveData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MoveOrganizationalUnitViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeftAccount/organizationalUnit/moveAll": {
            "put": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Detach all cloud accounts from their current organizational unit and attach them to a new one. Default is to root organizational unit",
                "operationId": "ShiftLeftAccount_MoveAllCloudAccountsToOrganizationalUnit",
                "requestBody": {
                    "x-name": "updateData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeftAccount/organizationalUnit/attach": {
            "post": {
                "tags": [
                    "ShiftLeftAccount"
                ],
                "summary": "Attach several cloud accounts to a specific Organizational Unit. User 'null' as root Organizational Unit as target",
                "operationId": "ShiftLeftAccount_PostAttachMulti",
                "requestBody": {
                    "x-name": "attachData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachCloudAccountsViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeftPolicy/{id}": {
            "get": {
                "tags": [
                    "ShiftLeftPolicy"
                ],
                "summary": "Get single policy by its ID.\nReturns a policy matching a given ID.",
                "operationId": "ShiftLeftPolicy_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Policy's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftLeftPolicyViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ShiftLeftPolicy": {
            "get": {
                "tags": [
                    "ShiftLeftPolicy"
                ],
                "summary": "Get all policies for the requesting account.\nReturns a collection of policies.",
                "operationId": "ShiftLeftPolicy_GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShiftLeftPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ShiftLeftPolicy"
                ],
                "summary": "Create new policies.\nReturns a multi status response containing successfully created policies without an error message and failed policies with an error message.",
                "operationId": "ShiftLeftPolicy_Post",
                "requestBody": {
                    "x-name": "shiftLeftPolicyRequestModels",
                    "description": "Policies to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ShiftLeftPolicyRequestModel"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShiftLeftPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ShiftLeftPolicy"
                ],
                "summary": "Update policies.\nReturns a multi status response containing successfully updated policies without an error message and failed policies with an error message.",
                "operationId": "ShiftLeftPolicy_Put",
                "requestBody": {
                    "x-name": "shiftLeftPolicyRequestModels",
                    "description": "Policies to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ShiftLeftPolicyRequestModel"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShiftLeftPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ShiftLeftPolicy"
                ],
                "summary": "Delete policy by its ID.",
                "operationId": "ShiftLeftPolicy_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Policy's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/admissionControl/policy/{id}": {
            "get": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Get single policy by its ID.\nReturns a policy matching a given ID.",
                "operationId": "KubernetesAdmissionControl_GetPolicy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Policy's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdmissionControlPolicyViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Delete policy by its ID.",
                "operationId": "KubernetesAdmissionControl_DeletePolicy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Policy's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/admissionControl/policy": {
            "get": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Get all policies for the requesting account.\nReturns a collection of policies.",
                "operationId": "KubernetesAdmissionControl_GetPolicyAll",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdmissionControlPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Create new policies.\nReturns a multi status response containing successfully created policies without an error message and failed policies with an error message.",
                "operationId": "KubernetesAdmissionControl_PostPolicy",
                "requestBody": {
                    "x-name": "admissionControlPolicyRequestModel",
                    "description": "Policies to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdmissionControlPolicyRequestModel"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "207": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdmissionControlPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Update policies.\nReturns a multi status response containing successfully updated policies without an error message and failed policies with an error message.",
                "operationId": "KubernetesAdmissionControl_PutPolicy",
                "requestBody": {
                    "x-name": "admissionControlPolicyRequestModel",
                    "description": "Policies to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdmissionControlPolicyRequestModel"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "207": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdmissionControlPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/admissionControl/policiesSummary/{id}": {
            "get": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Get Admission Control policies for a specific Kubernetes Account",
                "operationId": "KubernetesAdmissionControl_GetAgentPoliciesSummary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the Kubernetes account id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdmissionControlPoliciesSummaryViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/admissionControl/validation/validateAssessment": {
            "post": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Validate the GSL Rules Syntax and Run GSL rules assessment on inventory\nReturns the GSL verifications and Assessments result.",
                "operationId": "KubernetesAdmissionControl_ValidateAssessment",
                "requestBody": {
                    "x-name": "verifyRequest",
                    "description": "Admission Control Verify GSL Rules Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdmissionControlVerifyRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesAdmissionControlVerifyResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/admissionControl/validation/validateRule": {
            "post": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Validate the GSL Rules Syntax\nReturns the GSL verifications result.",
                "operationId": "KubernetesAdmissionControl_ValidateRule",
                "requestBody": {
                    "x-name": "verifyRequest",
                    "description": "Admission Control Validate GSL Rules Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdmissionControlVerifyRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdmissionControlVerifyResultViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/admissionControl/validation/validateHistorical": {
            "post": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Running the GSL Rules on the Historical Admission Reviews for the Kubernetes Cluster\nReturns the Evaluation results when running the GSL Rules",
                "operationId": "KubernetesAdmissionControl_ValidateHistorical",
                "requestBody": {
                    "x-name": "verifyRequest",
                    "description": "Historical Validate GSL Rules Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdmissionControlVerifyRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdmissionControlEvalResultViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/admissionControl/exclusions": {
            "get": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Get all exclusions for the requesting account.\nReturns a collection of exclusions.",
                "operationId": "KubernetesAdmissionControl_GetExclusions",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdmissionControlExclusionPutRequestViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Add a new exclusion",
                "operationId": "KubernetesAdmissionControl_PostExclusion",
                "requestBody": {
                    "x-name": "model",
                    "description": "details for the exclusion",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdmissionControlExclusionPostRequestModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdmissionControlExclusionPutRequestViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Delete an ac exclusion",
                "operationId": "KubernetesAdmissionControl_DeleteExclusion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the id of the exclusion to delete",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Update an exclusion",
                "operationId": "KubernetesAdmissionControl_PutExclusion",
                "requestBody": {
                    "x-name": "model",
                    "description": "details for the exclusion",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdmissionControlExclusionPutRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdmissionControlExclusionPutRequestViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/admissionControl/exclusions/{id}": {
            "get": {
                "tags": [
                    "KubernetesAdmissionControl"
                ],
                "summary": "Get single exclusion by its ID.\nReturns an exclusion matching a given ID.",
                "operationId": "KubernetesAdmissionControl_GetExclusion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Exclusion's ID",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdmissionControlExclusionPutRequestViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/kubernetes/imageAssurance/admissionExclusion/{id}": {
            "get": {
                "tags": [
                    "KubernetesImageAdmissionExclusion"
                ],
                "summary": "Get single exclusion by ruleset ID.\nReturns a exclusion matching a given ruleset ID.",
                "operationId": "KubernetesImageAdmissionExclusion_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ruleset ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesImageAdmissionExclusionViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "KubernetesImageAdmissionExclusion"
                ],
                "summary": "Delete exclusion by ruleset ID.",
                "operationId": "KubernetesImageAdmissionExclusion_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ruleset ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/kubernetes/imageAssurance/admissionExclusion": {
            "get": {
                "tags": [
                    "KubernetesImageAdmissionExclusion"
                ],
                "summary": "Get all exclusions for the requesting account.\nReturns a collection of exclusions.",
                "operationId": "KubernetesImageAdmissionExclusion_GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KubernetesImageAdmissionExclusionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "KubernetesImageAdmissionExclusion"
                ],
                "summary": "Create or update new exclusions.\nReturns created\\updated exclusion.",
                "operationId": "KubernetesImageAdmissionExclusion_Put",
                "requestBody": {
                    "x-name": "exclusionViewModel",
                    "description": "exclusions to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KubernetesImageAdmissionExclusionViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "207": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KubernetesImageAdmissionExclusionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/alerts/ciemFindings": {
            "post": {
                "tags": [
                    "Alerts"
                ],
                "summary": "External api get ciem findings",
                "operationId": "Alerts_GetCiemFindings",
                "requestBody": {
                    "x-name": "reqInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AlertsCiemFindingsInputModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Ciem findings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertsCiemFindingsResponseModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/intelligence/azure/onboarding-account-activity": {
            "post": {
                "tags": [
                    "Azure"
                ],
                "summary": "After calling get-arm-to-onboard-resources-account-activity API and creating the\nrequired resources in Azure using the ARM template,\nneed to onboard the storages and the subscriptions to Intelligence.",
                "operationId": "Azure_AzureAccountActivityNewStorageOnboarding",
                "requestBody": {
                    "x-name": "model",
                    "description": "All required details to be onboarded to Intelligence Account Activity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MagellanAzureProvideAzureDetailsRequestOfAzureAccountActivityStorageDetailsApi"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Http status code 200 if onboarding succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpStatusCode"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/intelligence/azure/onboarding-network-traffic": {
            "post": {
                "tags": [
                    "Azure"
                ],
                "summary": "After calling get-arm-to-onboard-resources-network-traffic-centralized API and creating the required resources in Azure using the ARM template, need to onboard the storages and the subscriptions to Intelligence.",
                "operationId": "Azure_AzureNetworkTrafficNewCentralizedStorageOnboarding",
                "requestBody": {
                    "x-name": "model",
                    "description": "All required details to be onboarded to Intelligence Network Traffic",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MagellanAzureProvideAzureDetailsRequestOfAzureNetworkTrafficCentralizedStorageDetails"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Http status code 200 if onboarding succeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpStatusCode"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/intelligence/azure/get-arm-to-onboard-resources-network-traffic-centralized": {
            "post": {
                "tags": [
                    "Azure"
                ],
                "summary": "Onboard Centralized Network Traffic for your Azure environment. The function creates an ARM template that you need to run in your Azure environment.\nThe function returns the url of the ARM template.\nThe Azure environment must already be onboarded to CloudGuard.\nPlease follow the Intelligence onboarding \"Prerequisites\" screen on the CloudGuard portal.",
                "operationId": "Azure_GetArmToOnboardResourcesNetworkTrafficCentralized",
                "requestBody": {
                    "x-name": "data",
                    "description": "The data that going to be onboarded to Intelligence Network Traffic.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CentralizedNetworkTrafficArmApiRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Http status code 200, ARM URL if succeeded and warnings list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArmApiResponseDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/intelligence/azure/get-arm-to-onboard-resources-account-activity": {
            "post": {
                "tags": [
                    "Azure"
                ],
                "summary": "Onboard Account Activity for your Azure environment.\nThe function creates an ARM template that you need to run in your Azure environment.\nThe Azure environment must already be onboarded to CloudGuard.\nMake the first call to get the ARM: https://docs.cgn.portal.checkpoint.com/reference/azure_getarmtoonboardresourcesaccountactivity_post_v2intelligenceazureget-arm-to-onboard-resources-account-activity.\nMake sure that {{returnJsonUrl }} is set to false.\nThe function returns the URL of the ARM template.\nUse the ARM URL to run the ARM deployment\nWhen the deployment is finished, make the second API call to onboard the account and the storages to the databases:\nhttps://docs.cgn.portal.checkpoint.com/reference/azure_azureaccountactivitynewstorageonboarding_post_v2intelligenceazureonboarding-account-activity\nPlease follow the Intelligence onboarding \"Prerequisites\" screen on the CloudGuard portal.",
                "operationId": "Azure_GetArmToOnboardResourcesAccountActivity",
                "requestBody": {
                    "x-name": "data",
                    "description": "The data that going to be onboarded to Intelligence Account Activity.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountActivityArmApiRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Http status code 200, ARM URL if succeeded and warnings list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArmApiResponseDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/intelligence/azure/magellan-azure-flowlogs-onboarding-with-arm": {
            "post": {
                "tags": [
                    "Azure"
                ],
                "summary": "This API is for onboarding azure from the context of NSG, to onboard storage account use: /v2/intelligence/azure/get-arm-to-onboard-resources-network-traffic-centralized\nOnboard Network Traffic for your Azure environment. Using NSG information, the function creates an ARM template that you need to run in your Azure environment.\nThe function returns the url of the ARM template.\nThe Azure environment must already be onboarded to CloudGuard.\nPlease follow the Intelligence onboarding \"Prerequisites\" screen on the CloudGuard portal.",
                "operationId": "Azure_AzureNetworkTrafficNsgOnboardingWithArm",
                "requestBody": {
                    "x-name": "model",
                    "description": "Block indicating the data to be onboarded to Intelligence Network Traffic",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MagellanAzureNetworkActivityOnboardingArmModelForApi"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "ARM url if onboarding succeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/remediation/trigger": {
            "post": {
                "tags": [
                    "Remediation"
                ],
                "summary": "External api execute command for remediation",
                "operationId": "Remediation_PostTriggerRemediation",
                "requestBody": {
                    "x-name": "remediationModel",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemediationExecuteRequestModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Status of the batch report progress",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemediationExecuteResponseModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/remediation/status/{executionId}": {
            "get": {
                "tags": [
                    "Remediation"
                ],
                "summary": "Get status for remediation",
                "operationId": "Remediation_GetStatusRemediation",
                "parameters": [
                    {
                        "name": "executionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status of the Remediation progress",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusGeneralDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/reports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get reports",
                "operationId": "Reports_GetReports",
                "responses": {
                    "200": {
                        "description": "Existing Reports Details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FullReportResponseModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Create Report",
                "operationId": "Reports_CreateReport",
                "requestBody": {
                    "x-name": "item",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseReportModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "New Report Id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportOperationResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reports"
                ],
                "summary": "Delete Reports",
                "operationId": "Reports_DeleteReports",
                "requestBody": {
                    "x-name": "item",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteReportRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Deleted Count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportOperationResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/reports/{reportId}": {
            "put": {
                "tags": [
                    "Reports"
                ],
                "summary": "Update Report",
                "operationId": "Reports_UpdateReport",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "item",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseReportModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "New Report Id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportOperationResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Exclusion/{id}": {
            "get": {
                "tags": [
                    "ComplianceExclusion"
                ],
                "operationId": "ComplianceExclusion_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExclusionViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Exclusion/ByFindingId": {
            "post": {
                "tags": [
                    "ComplianceExclusion"
                ],
                "summary": "Create an exclusion from finding ID",
                "operationId": "ComplianceExclusion_CreateByFindingId",
                "requestBody": {
                    "x-name": "model",
                    "description": "Finding ID and details for the exclusion",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExclusionPostByFindingIdRequestModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExclusionViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Exclusion/ByFindingKey": {
            "post": {
                "tags": [
                    "ComplianceExclusion"
                ],
                "summary": "Create an exclusion from finding key",
                "operationId": "ComplianceExclusion_CreateByFindingKey",
                "requestBody": {
                    "x-name": "model",
                    "description": "Finding key and details for the exclusion",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExclusionPostByFindingKeyRequestModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExclusionViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Exclusion/BulkDelete": {
            "post": {
                "tags": [
                    "ComplianceExclusion"
                ],
                "summary": "Delete Multiple Exclusions by Ids",
                "operationId": "ComplianceExclusion_BulkDelete",
                "requestBody": {
                    "x-name": "exclusionIds",
                    "description": "List of exclusion ids to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "guid"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "207": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExclusionMultiStatusResponseViewModel"
                                },
                                "example": {
                                    "Exclusions": {
                                        "<ExclusionId": "<StatusCode>",
                                        "00000000-0000-0000-0000-000000000001": 200
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/Compliance/Ruleset/{id}/version/{version}": {
            "get": {
                "tags": [
                    "ComplianceRuleset"
                ],
                "summary": "Get a specific versioned ruleset",
                "operationId": "ComplianceRuleset_GetVersionedBundleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the bundle id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "the bundle version",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleBundleResultViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account": {
            "get": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Get a list of all OCI cloud accounts",
                "operationId": "OciCloudAccount_GetAllOciCloudAccounts",
                "responses": {
                    "200": {
                        "description": "List of OCI cloud accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OciCloudAccountViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "The second step in the onboarding (\"create-terraform\" API call is the first step):\nAdd (onboard) a new OCI cloud account to CloudGuard",
                "operationId": "OciCloudAccount_AddOciCloudAccount",
                "requestBody": {
                    "x-name": "ociAccountCreationInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OciAccountCreationInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciCloudAccountViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Delete an OCI account from a CloudGuard account (the OCI account is not deleted from OCI)",
                "operationId": "OciCloudAccount_DeleteOciCloudAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/oci-cloud-account/{id}": {
            "get": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Get details for a specific OCI Cloud Account",
                "operationId": "OciCloudAccount_GetOciCloudAccountsById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciCloudAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/create-terraform": {
            "post": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "The first step in the onboarding (with terraform file):\nSave temp data for the onboarding process and export terraform configuration file.\nThe Terraform should be run in the OCI account:\nNavigate to \"Developer\" -> \"ServicesResource\" -> \"ManagerStacks\", and select \"Create Stack\".",
                "operationId": "OciCloudAccount_SaveTempDataAndExportTerraformConfFile",
                "requestBody": {
                    "x-name": "data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OciCloudAccountTempDataCreationModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Terraform configuration file",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/save-temp-data": {
            "post": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "The first step in the onboarding (without terraform file):\nSave temp data for the onboarding process.\nTo use this call the OCI API must be used.",
                "operationId": "OciCloudAccount_SaveTempData",
                "requestBody": {
                    "x-name": "data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OciCloudAccountTempDataCreationModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciCloudAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/{id}/delete-force": {
            "delete": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Delete an OCI account from a CloudGuard account (the OCI account is not deleted from OCI) and linked entities",
                "operationId": "OciCloudAccount_ForceDeleteOciCloudAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/oci-cloud-account/{id}/account-name": {
            "put": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Update an OCI Cloud account name (as it appears in CloudGuard)",
                "operationId": "OciCloudAccount_UpdateAccountName",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "name",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OciAccountNameViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciCloudAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/{id}/credentials": {
            "put": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Update an OCI Cloud credentials after terraform run has finished successfully",
                "operationId": "OciCloudAccount_UpdateCredentials",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciCloudAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/{id}/credentials-terraform": {
            "put": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Update an OCI Cloud credentials request before creating stack with the Terraform file",
                "operationId": "OciCloudAccount_UpdateCredentialsTerraform",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/{id}/sync-now": {
            "post": {
                "tags": [
                    "OciCloudAccount"
                ],
                "operationId": "OciCloudAccount_SyncNow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciCloudAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/missing-permissions": {
            "get": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Get a list of missing permissions (needed by CloudGuard to manage the accounts) for all OCI accounts in CloudGuard",
                "operationId": "OciCloudAccount_GetMissingPermissionsAll",
                "responses": {
                    "200": {
                        "description": "A list of missing permissions for the OCI cloud accounts in CloudGuard",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudAccountMissingPermissionsViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/{id}/missing-permissions": {
            "get": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Get a list of missing permissions for a specific account. These permissions are needed by  to manage accounts.",
                "operationId": "OciCloudAccount_GetMissingPermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "showIgnored",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CloudAccountMissingPermissionsIgnorableViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Get a list of missing permissions for a specific account. These are permissions needed by  to manage accounts.",
                "operationId": "OciCloudAccount_UpdateIgnorableMissingPermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "CloudAccountId",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "permissionsToIgnoreOrRestore",
                    "description": "List of permissions to set ignore or restore flag to",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MissingPermissionsIgnorableUpdateViewModel"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/oci-cloud-account/{id}/missing-permissions/entity-type": {
            "get": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Get missing permissions for a specific entity type for a specific OCI Cloud account",
                "operationId": "OciCloudAccount_GetMissingPermissionsByEntityType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "entityType",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "subType",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "",
                            "nullable": true
                        },
                        "x-position": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of missing permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MissingPermissionViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/{id}/missing-permissions/reset": {
            "put": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Reset (re-validate) a OCI Cloud account credentials in CloudGuard. \nWill cause all entities to retry fetching from the OCI cloud account.",
                "operationId": "OciCloudAccount_ResetMissingPermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/oci-cloud-account/{id}/organizational-unit": {
            "put": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Update the ID of the Organizational Unit that this cloud account will be attached to.\nUse 'null' for the root organizational unit",
                "operationId": "OciCloudAccount_UpdateOrganizationalUnitId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "updateData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciCloudAccountViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/organizational-unit/move": {
            "put": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Detach cloud accounts from an Organizational unit and attach them to another Organizational unit.\nUse 'null' for root organizational unit",
                "operationId": "OciCloudAccount_MoveCloudAccountsToOrganizationalUnit",
                "requestBody": {
                    "x-name": "moveData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MoveOrganizationalUnitViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/organizational-unit/move-all": {
            "put": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Detach all cloud accounts from their current organizational unit and attach them to a new one. Default is to root organizational unit",
                "operationId": "OciCloudAccount_MoveAllCloudAccountsToOrganizationalUnit",
                "requestBody": {
                    "x-name": "updateData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/oci-cloud-account/organizational-unit/attach": {
            "post": {
                "tags": [
                    "OciCloudAccount"
                ],
                "summary": "Attach several cloud accounts to a specific Organizational Unit. User 'null' as root Organizational Unit as target",
                "operationId": "OciCloudAccount_AttachMultiOrganizationalUnit",
                "requestBody": {
                    "x-name": "attachData",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachCloudAccountsViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ContinuousCompliancePolicyV2/EvaluateRulesetVersions": {
            "post": {
                "tags": [
                    "ContinuousCompliancePolicyV2"
                ],
                "summary": "Evaluate the ruleset version elected for each cloud account, based on the configured policies.",
                "operationId": "ContinuousCompliancePolicyV2_EvaluateRulesetVersions",
                "requestBody": {
                    "x-name": "rulesetVersionEvaluationRequest",
                    "description": "The ruleset id and version as well as a list of cloud accounts to evaluate ruleset version of configured polices.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EvaluateRulesetVersionsRequestModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Mapping of CloudAccount id to evaluated ruleset version",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/integration": {
            "post": {
                "tags": [
                    "Integration"
                ],
                "operationId": "Integration_CreateIntegration",
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IntegrationPostRequestModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntegrationViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Integration"
                ],
                "operationId": "Integration_GetAllIntegrations",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "nullable": true,
                            "items": {
                                "$ref": "#/components/schemas/IntegrationType"
                            }
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IntegrationViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Integration"
                ],
                "operationId": "Integration_UpdateIntegration",
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IntegrationUpdateRequestModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntegrationViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/integration/{id}": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "operationId": "Integration_GetIntegrationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntegrationViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Integration"
                ],
                "operationId": "Integration_DeleteIntegration",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/notification/{id}": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "operationId": "Notification_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseNotificationViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Notification"
                ],
                "operationId": "Notification_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/notification": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "operationId": "Notification_GetAll",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResponseNotificationViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Notification"
                ],
                "operationId": "Notification_Create",
                "requestBody": {
                    "x-name": "notification",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostNotificationViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseNotificationViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Notification"
                ],
                "operationId": "Notification_Update",
                "requestBody": {
                    "x-name": "notification",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutNotificationViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseNotificationViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/erm/businesspriority/add-rule": {
            "post": {
                "tags": [
                    "BusinessPriorityModifier"
                ],
                "summary": "Create a new Business Priority rule",
                "operationId": "BusinessPriorityModifier_AddRule",
                "requestBody": {
                    "x-name": "addRule",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BusinessPriorityModifierAddRuleRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/erm/businesspriority/update-rule": {
            "put": {
                "tags": [
                    "BusinessPriorityModifier"
                ],
                "summary": "Update an existing Business Priority rule",
                "operationId": "BusinessPriorityModifier_UpdateRule",
                "requestBody": {
                    "x-name": "rule",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BusinessPriorityModifierUpdateRuleRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/erm/businesspriority/delete-rule": {
            "delete": {
                "tags": [
                    "BusinessPriorityModifier"
                ],
                "summary": "Delete an existing Business Priority rule",
                "operationId": "BusinessPriorityModifier_DeleteRule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The rule ID to delete",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/erm/businesspriority/get-rules": {
            "get": {
                "tags": [
                    "BusinessPriorityModifier"
                ],
                "summary": "Get all configured Business Priority rules",
                "operationId": "BusinessPriorityModifier_GetRules",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/erm/ruleset/set-custom-ruleset": {
            "post": {
                "tags": [
                    "CustomRuleset"
                ],
                "summary": "Define platform specific ruleset for Risk Managemnet (Currently one ruleset per platform is supported)",
                "operationId": "CustomRuleset_Set",
                "requestBody": {
                    "x-name": "customRulesetRequestViewModel",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomRulesetRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/erm/ruleset/get-custom-ruleset": {
            "get": {
                "tags": [
                    "CustomRuleset"
                ],
                "summary": "Get all configured rulesets for Risk Managemnet",
                "operationId": "CustomRuleset_Get",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/erm/ruleset/remove-custom-ruleset": {
            "delete": {
                "tags": [
                    "CustomRuleset"
                ],
                "summary": "Delete platform specific ruleset from Risk Managemnet",
                "operationId": "CustomRuleset_Remove",
                "requestBody": {
                    "x-name": "customRulesetRequestViewModel",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomRulesetRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/erm/ruleset/remove-all-custom-rulesets": {
            "delete": {
                "tags": [
                    "CustomRuleset"
                ],
                "summary": "Delete all platform specific rulesets from Risk Managemnet (Currently one ruleset per platform is supported)",
                "operationId": "CustomRuleset_RemoveAll",
                "requestBody": {
                    "x-name": "platformRequestViewModel",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlatformRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/erm/dspm/sentra-account": {
            "get": {
                "tags": [
                    "Dspm"
                ],
                "summary": "Retrieves all the Sentra accounts associated with the current account",
                "operationId": "Dspm_GetSentraAccounts",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SentraGetAllResponseViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Dspm"
                ],
                "summary": "Adds a new Sentra account",
                "operationId": "Dspm_AddSentraAccount",
                "requestBody": {
                    "x-name": "sentraCreateRequestViewModel",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SentraCreateRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SentraCreateResponseViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/erm/dspm/sentra-account/{id}": {
            "get": {
                "tags": [
                    "Dspm"
                ],
                "summary": "Retrieves a specific Sentra account by id",
                "operationId": "Dspm_GetSentraAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SentraAccountResponseViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Dspm"
                ],
                "summary": "Updates credentials in Sentra account",
                "operationId": "Dspm_UpdateSentraAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "sentraUpdateRequestViewModel",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SentraUpdateRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Dspm"
                ],
                "summary": "Deletes a Sentra account by id",
                "operationId": "Dspm_DeleteSentraAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/erm/groups/risk-data": {
            "post": {
                "tags": [
                    "GroupRiskManagement"
                ],
                "summary": "List groups risk data by Group Type. Risk Data includes Risk Score and Level and the distribution of the risk level among the group's assets.\nThe list is ordered descending by the group Risk Score",
                "operationId": "GroupRiskManagement_GetGroupsRiskData",
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetGroupsRiskRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/erm/remediation/top-actions": {
            "post": {
                "tags": [
                    "RemediationActions"
                ],
                "summary": "Get top X remediation actions of an asset ordered by severity and remediation type",
                "operationId": "RemediationActions_GetTopRemediationActions",
                "requestBody": {
                    "x-name": "requestViewModel",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemediationActionsRequestViewModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/aws-organization-management": {
            "post": {
                "tags": [
                    "AwsOrganizationManagement"
                ],
                "summary": "Create new AWS organization management entity.",
                "operationId": "AwsOrganizationManagement_CreateOrganizationManagement",
                "requestBody": {
                    "x-name": "onboardingRequest",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnboardingRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Returns the created AWS organization management entity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationManagementViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "AwsOrganizationManagement"
                ],
                "summary": "Get AWS organization management entities.",
                "operationId": "AwsOrganizationManagement_GetAllOrganizationManagement",
                "parameters": [
                    {
                        "name": "externalOrganizationId",
                        "x-originalName": "externalOrganizationIds",
                        "in": "query",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a collection of AWS organization management entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationManagementViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/aws-organization-management/{id}": {
            "put": {
                "tags": [
                    "AwsOrganizationManagement"
                ],
                "summary": "Update existing AWS organization management entity.",
                "operationId": "AwsOrganizationManagement_UpdateOrganizationManagement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "onboardingUpdateRequest",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnboardingUpdateRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "Returns the AWS organization management entity."
                    }
                }
            },
            "get": {
                "tags": [
                    "AwsOrganizationManagement"
                ],
                "summary": "Get AWS organization management entity by its ID.",
                "operationId": "AwsOrganizationManagement_GetOrganizationManagementById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a single AWS organization management entity corresponding to the given ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationManagementViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AwsOrganizationManagement"
                ],
                "summary": "Delete AWS organization management\nAfter this API call each account that is under this organization need to be deleted separately.",
                "operationId": "AwsOrganizationManagement_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/aws-organization-management/{id}/stackset-arn": {
            "put": {
                "tags": [
                    "AwsOrganizationManagement"
                ],
                "summary": "Update existing AWS organization management entity with the StackSet arn.",
                "operationId": "AwsOrganizationManagement_UpdateStackSetArn",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "updateStackSetArnRequest",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateStackSetArnRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/aws-organization-management/{id}/configuration": {
            "put": {
                "tags": [
                    "AwsOrganizationManagement"
                ],
                "summary": "Update organization configuration.",
                "operationId": "AwsOrganizationManagement_UpdateConfiguration",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateConfigurationRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/aws-organization-management/{id}/missing-permissions/reset": {
            "put": {
                "tags": [
                    "AwsOrganizationManagement"
                ],
                "summary": "Resets all environments of the given aws organization id.",
                "operationId": "AwsOrganizationManagement_ResetMissingPermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/aws-organization-management-onboarding/management-stack": {
            "get": {
                "tags": [
                    "AwsOrganizationManagementOnboarding"
                ],
                "summary": "Get management stack configuration for given AWS account.\nFor empty awsAccountId, return the default configuration.",
                "operationId": "AwsOrganizationManagementOnboarding_GetOnboardingConfiguration",
                "parameters": [
                    {
                        "name": "awsAccountId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return management stack configuration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagementCftConfiguration"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/aws-organization-management-onboarding/member-account-configuration": {
            "get": {
                "tags": [
                    "AwsOrganizationManagementOnboarding"
                ],
                "summary": "Get onboarding CFT.",
                "operationId": "AwsOrganizationManagementOnboarding_GetMemberAccountConfiguration",
                "responses": {
                    "200": {
                        "description": "Return onboarding CFT",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OnboardingMemberCft"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/azure-organization-management": {
            "post": {
                "tags": [
                    "AzureOrganizationManagement"
                ],
                "summary": "Create new Azure organization management entity.",
                "operationId": "AzureOrganizationManagement_CreateOrganizationManagement",
                "requestBody": {
                    "x-name": "onboardingRequest",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnboardingRequest2"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Returns the created Azure organization management entity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationManagementViewModel2"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "AzureOrganizationManagement"
                ],
                "summary": "Get Azure organization management entities.",
                "operationId": "AzureOrganizationManagement_GetAllOrganizationManagement",
                "parameters": [
                    {
                        "name": "ManagementGroupId",
                        "x-originalName": "managementGroupIds",
                        "in": "query",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a collection of Azure organization management entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "nullable": true,
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/OrganizationManagementViewModel2"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/azure-organization-management/{id}": {
            "put": {
                "tags": [
                    "AzureOrganizationManagement"
                ],
                "summary": "Update existing Azure organization management entity name by its ID.",
                "operationId": "AzureOrganizationManagement_UpdateOrganizationManagement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "onboardingUpdateRequest",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnboardingUpdateRequest2"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "get": {
                "tags": [
                    "AzureOrganizationManagement"
                ],
                "summary": "Get Azure organization management entity by its ID.",
                "operationId": "AzureOrganizationManagement_GetOrganizationManagementById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a single Azure organization management entity corresponding to the given ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationManagementViewModel2"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AzureOrganizationManagement"
                ],
                "summary": "Delete Azure organization management.\nAfter this API call each account that is under this organization need to be deleted separately.",
                "operationId": "AzureOrganizationManagement_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/azure-organization-management/tenant/{tenantId}/management-group/{managementGroupId}": {
            "get": {
                "tags": [
                    "AzureOrganizationManagement"
                ],
                "summary": "Get Azure organization management by Tenant Id and Management Group Id.\nThe Azure Tenant Id.\nManagement Group Id or Tenant Id.",
                "operationId": "AzureOrganizationManagement_GetAzureOrganizationManagementByTenantAndManagementGroup",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "managementGroupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationManagementViewModel2"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/azure-organization-management/{id}/missing-permissions/reset": {
            "put": {
                "tags": [
                    "AzureOrganizationManagement"
                ],
                "summary": "Resets all environments of the given CloudGuard's Azure organization management id.",
                "operationId": "AzureOrganizationManagement_ResetMissingPermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v2/sbom/formats": {
            "get": {
                "tags": [
                    "SBOMExport"
                ],
                "summary": "Get the available SBOM formats",
                "operationId": "SBOMExport_SBOMFormatVersions",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SBOMFormatVersions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/sbom/export": {
            "get": {
                "tags": [
                    "SBOMExport"
                ],
                "summary": "Export SBOM to a file",
                "operationId": "SBOMExport_ExportSBOM",
                "parameters": [
                    {
                        "name": "EnvironmentId",
                        "in": "query",
                        "required": true,
                        "description": "the id of the environment containing the entity",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "EntityType",
                        "in": "query",
                        "required": true,
                        "description": "the type of entity",
                        "schema": {
                            "$ref": "#/components/schemas/VlmEntityType"
                        },
                        "x-position": 2
                    },
                    {
                        "name": "ExternalId",
                        "in": "query",
                        "required": true,
                        "description": "external id of the entity (with 'sha256:' prefix)",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 3
                    },
                    {
                        "name": "SBOMVersionFormatId",
                        "in": "query",
                        "required": true,
                        "description": "the ID of the requaired SBOM format",
                        "schema": {
                            "$ref": "#/components/schemas/SBOMVersionFormatId"
                        },
                        "x-position": 4
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/vulnerability/scan-results": {
            "get": {
                "tags": [
                    "Vulnerabilities"
                ],
                "summary": "Get vulnerabilities scan results for an entity",
                "operationId": "Vulnerabilities_GetScanResults",
                "parameters": [
                    {
                        "name": "EnvironmentId",
                        "in": "query",
                        "description": "the id of the environment containing the entity (not required if EntityType is Image)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "EntityType",
                        "in": "query",
                        "required": true,
                        "description": "the type of entity",
                        "schema": {
                            "$ref": "#/components/schemas/VlmEntityTypeBC"
                        },
                        "x-position": 3
                    },
                    {
                        "name": "EntityId",
                        "in": "query",
                        "required": true,
                        "description": "image id for images (with 'sha256:' prefix), for all others external id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 4
                    },
                    {
                        "name": "HasRemediation",
                        "in": "query",
                        "description": "return only Packages and Cves which are fixable (has remediation)",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "x-position": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns the vulnerabilities scan results for the entity",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/v2/vulnerability/scan-results-metadata": {
            "get": {
                "tags": [
                    "Vulnerabilities"
                ],
                "summary": "Get vulnerabilities scan results metadata for an entity",
                "operationId": "Vulnerabilities_GetScanResultsMetadata",
                "parameters": [
                    {
                        "name": "EnvironmentId",
                        "in": "query",
                        "description": "the id of the environment containing the entity (not required if EntityType is Image)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "EntityType",
                        "in": "query",
                        "required": true,
                        "description": "the type of entity",
                        "schema": {
                            "$ref": "#/components/schemas/VlmEntityTypeBC"
                        },
                        "x-position": 2
                    },
                    {
                        "name": "EntityId",
                        "in": "query",
                        "required": true,
                        "description": "image id for images (with 'sha256:' prefix), for all others external id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns the vulnerabilities scan results metadata for the entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VlmScanResultMetadataViewModel"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/v2/vulnerability/scan-metadata": {
            "get": {
                "tags": [
                    "Vulnerabilities"
                ],
                "summary": "Get vulnerabilities scan results metadata for an entity",
                "operationId": "Vulnerabilities_GetScanMetadata",
                "parameters": [
                    {
                        "name": "EnvironmentId",
                        "in": "query",
                        "required": true,
                        "description": "the id of the environment containing the entity",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "EntityType",
                        "in": "query",
                        "required": true,
                        "description": "the type of entity",
                        "schema": {
                            "$ref": "#/components/schemas/VlmEntityType"
                        },
                        "x-position": 2
                    },
                    {
                        "name": "EntityId",
                        "in": "query",
                        "required": true,
                        "description": "external id of the entity",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns the vulnerabilities scan results metadata for the entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VlmScanMetadataViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/vulnerability/scan": {
            "get": {
                "tags": [
                    "Vulnerabilities"
                ],
                "summary": "retrieve vulnerability scan report for an entity",
                "operationId": "Vulnerabilities_GetScan",
                "parameters": [
                    {
                        "name": "InUse",
                        "in": "query",
                        "description": "return only Packages which are in use",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "EnvironmentId",
                        "in": "query",
                        "required": true,
                        "description": "the id of the environment containing the entity",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 3
                    },
                    {
                        "name": "EntityType",
                        "in": "query",
                        "required": true,
                        "description": "the type of entity",
                        "schema": {
                            "$ref": "#/components/schemas/VlmEntityType"
                        },
                        "x-position": 4
                    },
                    {
                        "name": "EntityId",
                        "in": "query",
                        "required": true,
                        "description": "external id of the entity",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 5
                    },
                    {
                        "name": "HasRemediation",
                        "in": "query",
                        "description": "return only Packages and Cves which are fixable (has remediation)",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "x-position": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanResultViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/vulnerability/scan-results-export-csvs": {
            "get": {
                "tags": [
                    "Vulnerabilities"
                ],
                "summary": "export vulnerabilities scan results for an entity",
                "operationId": "Vulnerabilities_ExportScanResultsToCsv",
                "parameters": [
                    {
                        "name": "EnvironmentId",
                        "in": "query",
                        "description": "the id of the environment containing the entity (not required if EntityType is Image)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "EntityType",
                        "in": "query",
                        "required": true,
                        "description": "the type of entity",
                        "schema": {
                            "$ref": "#/components/schemas/VlmEntityTypeBC"
                        },
                        "x-position": 3
                    },
                    {
                        "name": "EntityId",
                        "in": "query",
                        "required": true,
                        "description": "image id for images (with 'sha256:' prefix), for all others external id",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 4
                    },
                    {
                        "name": "HasRemediation",
                        "in": "query",
                        "description": "return only Packages and Cves which are fixable (has remediation)",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "x-position": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns a zip file contains csv files for cves, threats, secrets, and remidiation summary",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/v2/vulnerability/scan-export-csvs": {
            "get": {
                "tags": [
                    "Vulnerabilities"
                ],
                "summary": "export vulnerabilities scan results for an entity",
                "operationId": "Vulnerabilities_ExportScanToCsv",
                "parameters": [
                    {
                        "name": "InUse",
                        "in": "query",
                        "description": "return only Packages which are in use",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "EnvironmentId",
                        "in": "query",
                        "required": true,
                        "description": "the id of the environment containing the entity",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 3
                    },
                    {
                        "name": "EntityType",
                        "in": "query",
                        "required": true,
                        "description": "the type of entity",
                        "schema": {
                            "$ref": "#/components/schemas/VlmEntityType"
                        },
                        "x-position": 4
                    },
                    {
                        "name": "EntityId",
                        "in": "query",
                        "required": true,
                        "description": "external id of the entity",
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 5
                    },
                    {
                        "name": "HasRemediation",
                        "in": "query",
                        "description": "return only Packages and Cves which are fixable (has remediation)",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "x-position": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns a zip file contains csv files for cves, threats, secrets, and remidiation summary",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/OciCompartment": {
            "get": {
                "tags": [
                    "OciCompartment"
                ],
                "operationId": "OciCompartment_Get",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OciCompartmentViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/OciCompartment/{cloudAccountId}": {
            "get": {
                "tags": [
                    "OciCompartment"
                ],
                "operationId": "OciCompartment_GetAllCompartmentsByCloudAccountId",
                "parameters": [
                    {
                        "name": "cloudAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OciCompartmentViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/GcpMachineImage": {
            "get": {
                "tags": [
                    "GcpMachineImage"
                ],
                "operationId": "GcpMachineImage_Get",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GcpMachineImageViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/security-graph/entity-types": {
            "get": {
                "operationId": "EntityTypesController_getAll",
                "summary": "Get all supported entity types with the supported platform",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EntityTypePlatformViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "EntityTypes"
                ]
            }
        },
        "/v2/security-graph/evidence-path": {
            "get": {
                "operationId": "EvidencePathController_get",
                "summary": "Get the evidence path for a given findingId",
                "parameters": [
                    {
                        "name": "findingId",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvidencePathViewModel"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "EvidencePath"
                ]
            }
        },
        "/v2/security-graph/exclusions/{id}": {
            "get": {
                "operationId": "ExclusionController_get",
                "summary": "Get an exclusion by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGraphExclusionViewModel"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Exclusions"
                ]
            },
            "delete": {
                "operationId": "ExclusionController_delete",
                "summary": "Delete an exclusion by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Exclusions"
                ]
            },
            "put": {
                "operationId": "ExclusionController_update",
                "summary": "Update an exclusion by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityGraphExclusionRequestModel"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Exclusions"
                ]
            }
        },
        "/v2/security-graph/exclusions": {
            "get": {
                "operationId": "ExclusionController_getAll",
                "summary": "Get all exclusions",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SecurityGraphExclusionViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Exclusions"
                ]
            },
            "post": {
                "operationId": "ExclusionController_insert",
                "summary": "Insert a new exclusion by ID",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityGraphExclusionRequestModel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdViewModel"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Exclusions"
                ]
            }
        },
        "/v2/security-graph/rules/{id}": {
            "get": {
                "operationId": "RuleController_get",
                "summary": "Get an rule by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGraphRuleViewModel"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Rules"
                ]
            }
        },
        "/v2/security-graph/rules": {
            "get": {
                "operationId": "RuleController_getAll",
                "summary": "Get all rules by filter",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "platforms",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SecurityGraphRuleViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Rules"
                ]
            }
        },
        "/v2/findings/{id}": {
            "get": {
                "operationId": "FindingsController_getFinding",
                "summary": "Get a finding by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingViewModel"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "SecurityIssues"
                ]
            }
        },
        "/v2/findings/search": {
            "post": {
                "operationId": "FindingsController_search",
                "summary": "Search findings",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingSearchRequestModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingSearchResultsViewModel"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "SecurityIssues"
                ]
            }
        },
        "/v2/findings/group": {
            "post": {
                "operationId": "FindingsController_group",
                "summary": "Group findings",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingSearchGroupRequestModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "SecurityIssues"
                ]
            }
        },
        "/v2/findings/search-adv": {
            "post": {
                "operationId": "FindingsController_searchAdv",
                "summary": "Search findings with recursive filter",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingSearchAdvRequestModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingSearchResultsViewModel"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "SecurityIssues"
                ]
            }
        },
        "/v2/findings/group-adv": {
            "post": {
                "operationId": "FindingsController_groupAdv",
                "summary": "Group findings with recursive filter",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingSearchAdvGroupRequestModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "SecurityIssues"
                ]
            }
        },
        "/v2/findings-policies": {
            "get": {
                "operationId": "FindingsPoliciesController_getAll",
                "summary": "Get all automated actions",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FindingsPolicyViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "AutomatedActions"
                ]
            },
            "post": {
                "operationId": "FindingsPoliciesController_createFindingsPolicy",
                "summary": "Create a new automated action",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingsPolicyRequestModel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingsPolicyCreationViewModel"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "AutomatedActions"
                ]
            }
        },
        "/v2/findings-policies/{id}": {
            "get": {
                "operationId": "FindingsPoliciesController_getSingle",
                "summary": "Get an automated action by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingsPolicyViewModel"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "AutomatedActions"
                ]
            },
            "put": {
                "operationId": "FindingsPoliciesController_updateFindingsPolicy",
                "summary": "Update an automated action by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingsPolicyRequestModel"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "AutomatedActions"
                ]
            },
            "delete": {
                "operationId": "FindingsPoliciesController_deleteFindingsPolicy",
                "summary": "Delete an automated action by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": ""
                    }
                },
                "tags": [
                    "AutomatedActions"
                ]
            }
        }
    },
    "tags": [
        {
            "name": "AccessLease",
            "description": "Access Leases",
            "type": "NetworkSecurity"
        },
        {
            "name": "AccessLeaseInvitation",
            "description": "Access Lease Invitations",
            "type": "NetworkSecurity"
        },
        {
            "name": "Account",
            "type": "Unclassified"
        },
        {
            "name": "AccountLimitation",
            "type": "Unclassified"
        },
        {
            "name": "AccountPollingInterval",
            "type": "Unclassified"
        },
        {
            "name": "AccountRegistration",
            "type": "Unclassified"
        },
        {
            "name": "AccountTrust",
            "description": "Allow you to define a trust between accounts in order to allow users in a certain account to make changes and operation on another account.\nActions can be taken on a trustee account via a role which is defined on it. \nThe role should be assumed by a user from the trusted account.",
            "type": "Administration"
        },
        {
            "name": "Agent",
            "type": "Unclassified"
        },
        {
            "name": "Agentless",
            "description": "Agentless Workload Posture",
            "type": "WorkloadProtection"
        },
        {
            "name": "Alert",
            "type": "Unclassified"
        },
        {
            "name": "AlibabaCloudAccount",
            "description": "Alibaba Cloud Accounts",
            "type": "Onboarding"
        },
        {
            "name": "Application",
            "type": "Unclassified"
        },
        {
            "name": "Assessment",
            "description": "Run and View Compliance Assessments",
            "type": "PostureManagement"
        },
        {
            "name": "AssessmentHistory",
            "type": "Unclassified"
        },
        {
            "name": "AssessmentHistoryV2",
            "description": "Compliance Assessment History",
            "type": "PostureManagement"
        },
        {
            "name": "Audit",
            "description": "Audit logs",
            "type": "Administration"
        },
        {
            "name": "Auth",
            "type": "Unclassified"
        },
        {
            "name": "Aws Cloud Account",
            "description": "Manage AWS Cloud Accounts",
            "type": "Onboarding"
        },
        {
            "name": "AwsAppSync",
            "type": "InventoryAwsApplicationIntegration"
        },
        {
            "name": "AwsConfigSettings",
            "type": "InventoryAwsManagementTools"
        },
        {
            "name": "AwsCustomerGateway",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "AwsEks",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "AwsElasticIp",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "AwsElasticsearchDomain",
            "type": "InventoryAwsAnalytics"
        },
        {
            "name": "AwsEmrCluster",
            "type": "InventoryAwsAnalytics"
        },
        {
            "name": "AwsInspectorFindings",
            "type": "Unclassified"
        },
        {
            "name": "AwsInspectorRuns",
            "type": "Unclassified"
        },
        {
            "name": "AwsLoadBalancersNetworkInterfaces",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "AwsOrganizations",
            "type": "InventoryAwsGlobal"
        },
        {
            "name": "AwsQuickSightAccount",
            "type": "InventoryAwsAnalytics"
        },
        {
            "name": "AwsQuickSightGroup",
            "type": "InventoryAwsAnalytics"
        },
        {
            "name": "AwsQuickSightUser",
            "type": "InventoryAwsAnalytics"
        },
        {
            "name": "AwsQuickSightVpcConnections",
            "type": "InventoryAwsAnalytics"
        },
        {
            "name": "AwsSageMaker",
            "type": "InventoryAwsMachineLearning"
        },
        {
            "name": "AwsSecurityGroup",
            "type": "NetworkSecurity"
        },
        {
            "name": "AwsSecurityGroupPolicy",
            "type": "NetworkSecurity"
        },
        {
            "name": "AwsSecurityGroupsIndex",
            "type": "Unclassified"
        },
        {
            "name": "AwsUnifiedOnboarding",
            "description": "Aws Unified Onboarding",
            "type": "Onboarding"
        },
        {
            "name": "AwsVpcEndpoint",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "AzureAnalysisService",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureApplicationGateway",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureApplicationSecurityGroup",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureCloudAccount",
            "description": "Onboard Azure accounts",
            "type": "Onboarding"
        },
        {
            "name": "AzureCosmosDbAccount",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureFunction",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureKeyVault",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureKubernetes",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureLoadBalancer",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureLock",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureLogicApp",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureLogProfile",
            "type": "InventoryAzure"
        },
        {
            "name": "AzurePolicyAssignment",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureRedisCache",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureResourceGroup",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureRouteTable",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureSecurityGroup",
            "type": "NetworkSecurity"
        },
        {
            "name": "AzureSecurityGroupPolicy",
            "description": "Azure Network Security Group Policies",
            "type": "NetworkSecurity"
        },
        {
            "name": "AzureSqlDb",
            "type": "Unclassified"
        },
        {
            "name": "AzureSqlServer",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureStorageAccounts",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureSubnet",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureUser",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureVirtualMachine",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureVirtualMachineImage",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureVirtualMachineScaleSet",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureVirtualNetworkPeering",
            "type": "InventoryAzure"
        },
        {
            "name": "AzureWebApp",
            "type": "InventoryAzure"
        },
        {
            "name": "BigTable",
            "type": "InventoryGcp"
        },
        {
            "name": "BillableAssets",
            "description": "Retrieve billable assets data",
            "type": "Administration"
        },
        {
            "name": "BillableAssetsReport",
            "description": "Billable Assets Report",
            "type": "Administration"
        },
        {
            "name": "Billing",
            "type": "Unclassified"
        },
        {
            "name": "Clarity",
            "type": "Unclassified"
        },
        {
            "name": "CloudAcmCertificate",
            "type": "InventoryAwsSecurityIdentityAndCompliance"
        },
        {
            "name": "CloudAmi",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudApplicationLoadBalancer",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudAutoScalingGroup",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudDbInstance",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudDirectConnect",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudDynamoDb",
            "type": "InventoryAwsDatabase"
        },
        {
            "name": "CloudEcsCluster",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudEcsService",
            "description": "Cloud Ecs Service",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudEcsTaskDefinition",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudEfs",
            "type": "InventoryAwsStorage"
        },
        {
            "name": "CloudElastiCacheCluster",
            "type": "Unclassified"
        },
        {
            "name": "CloudFlowLogs",
            "type": "Unclassified"
        },
        {
            "name": "CloudFrontDistribution",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudGuardDutyDetector",
            "type": "Unclassified"
        },
        {
            "name": "CloudIamAccountSummary",
            "type": "InventoryAwsIam"
        },
        {
            "name": "CloudIamCredentialReport",
            "type": "InventoryAwsIam"
        },
        {
            "name": "CloudIamGroup",
            "type": "InventoryAwsIam"
        },
        {
            "name": "CloudIamPasswordPolicy",
            "type": "InventoryAwsIam"
        },
        {
            "name": "CloudIamPolicy",
            "type": "InventoryAwsIam"
        },
        {
            "name": "CloudIamRole",
            "type": "InventoryAwsIam"
        },
        {
            "name": "CloudIamServerCertificate",
            "type": "InventoryAwsIam"
        },
        {
            "name": "CloudIamUser",
            "type": "InventoryAwsIam"
        },
        {
            "name": "CloudIamVirtualMfaDevice",
            "type": "InventoryAwsIam"
        },
        {
            "name": "CloudInfraUser",
            "description": "CloudInfra Users",
            "type": "Administration"
        },
        {
            "name": "CloudInstance",
            "description": "Cloud Instances",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudInternetGateway",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudKinesisStream",
            "type": "InventoryAwsAnalytics"
        },
        {
            "name": "CloudKms",
            "type": "Unclassified"
        },
        {
            "name": "CloudKmsAlias",
            "type": "InventoryAwsSecurityIdentityAndCompliance"
        },
        {
            "name": "CloudLambdaFunction",
            "description": "Cloud Lambda Function",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudLoadBalancer",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudLogGroups",
            "type": "InventoryAwsManagementTools"
        },
        {
            "name": "CloudMetricAlarm",
            "type": "InventoryAwsManagementTools"
        },
        {
            "name": "CloudNacl",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudNetworkInterfaces",
            "type": "Unclassified"
        },
        {
            "name": "CloudNetworkLoadBalancer",
            "type": "Unclassified"
        },
        {
            "name": "CloudRedshiftCluster",
            "type": "InventoryAwsDatabase"
        },
        {
            "name": "CloudRegion",
            "type": "InventoryAwsGlobal"
        },
        {
            "name": "CloudRoute53Domain",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudRoute53HostedZone",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudRoute53RecordSetGroup",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudRouteTable",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudS3Bucket",
            "description": "",
            "type": "Inventory"
        },
        {
            "name": "CloudSecurityGroup",
            "description": "AWS Security Groups",
            "type": "NetworkSecurity"
        },
        {
            "name": "CloudSnsSubscription",
            "type": "InventoryAwsApplicationIntegration"
        },
        {
            "name": "CloudSnsTopic",
            "type": "InventoryAwsApplicationIntegration"
        },
        {
            "name": "CloudSql",
            "type": "InventoryGcp"
        },
        {
            "name": "CloudSqs",
            "description": "",
            "type": "Inventory"
        },
        {
            "name": "CloudSubnet",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudTrail",
            "description": "CloudTrail",
            "type": "InventoryAwsManagementTools"
        },
        {
            "name": "CloudVolume",
            "type": "InventoryAwsComputeAndContainers"
        },
        {
            "name": "CloudVpc",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudVpcPeeringConnection",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudVPNConnection",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudVpnGateway",
            "type": "InventoryAwsNetworkingAndContentDelivery"
        },
        {
            "name": "CloudWAFRegional",
            "type": "InventoryAwsSecurityIdentityAndCompliance"
        },
        {
            "name": "CloudWatchEventsRule",
            "description": "CloudWatchEventsRule",
            "type": "InventoryAwsManagementTools"
        },
        {
            "name": "ComplianceExclusion",
            "description": "Compliance Exclusions",
            "type": "PostureManagement"
        },
        {
            "name": "CompliancePolicy",
            "type": "Unclassified"
        },
        {
            "name": "ComplianceRemediation",
            "description": "Compliance Remediation",
            "type": "PostureManagement"
        },
        {
            "name": "ComplianceRemediationOld",
            "description": "Compliance Remediation - DEPRECATED - please use /Compliance/Remediation instead",
            "type": "PostureManagement"
        },
        {
            "name": "ComplianceRuleset",
            "description": "ComplianceRuleset",
            "type": "PostureManagement"
        },
        {
            "name": "ContinuousComplianceNotification",
            "description": "Continuous Compliance Notification Policies",
            "type": "Administration"
        },
        {
            "name": "ContinuousCompliancePolicy",
            "type": "Unclassified"
        },
        {
            "name": "ContinuousCompliancePolicyV2",
            "description": "Continuous Compliance Policies",
            "type": "PostureManagement"
        },
        {
            "name": "EmergencyPolicy",
            "type": "Unclassified"
        },
        {
            "name": "EntityFetchStatus",
            "type": "Inventory"
        },
        {
            "name": "EntityReport",
            "type": "Inventory"
        },
        {
            "name": "ExclusionOld",
            "description": "Compliance Exclusions - DEPRECATED - please use /Compliance/Exclusion instead",
            "type": "PostureManagement"
        },
        {
            "name": "ExternalFindings",
            "description": "Findings from External (3rd-party) systems",
            "type": "Events"
        },
        {
            "name": "Fim",
            "type": "Unclassified"
        },
        {
            "name": "Finding",
            "description": "Compliance Findings",
            "type": "Events"
        },
        {
            "name": "FindingsReport",
            "description": "Compliance Findings csv reports",
            "type": "Events"
        },
        {
            "name": "GcpBigQuery",
            "type": "Unclassified"
        },
        {
            "name": "GcpDisk",
            "type": "InventoryGcp"
        },
        {
            "name": "GcpGkeCluster",
            "type": "InventoryGcp"
        },
        {
            "name": "GcpImage",
            "type": "InventoryGcp"
        },
        {
            "name": "GcpKmsKeyRing",
            "type": "Unclassified"
        },
        {
            "name": "GcpProjectInfo",
            "description": "Google Cloud Project Info",
            "type": "InventoryGcp"
        },
        {
            "name": "GcpPubSub",
            "type": "InventoryGcp"
        },
        {
            "name": "GcpSecurityGroup",
            "type": "Unclassified"
        },
        {
            "name": "GcpServiceAccount",
            "type": "Unclassified"
        },
        {
            "name": "GcpStorageBucket",
            "type": "Unclassified"
        },
        {
            "name": "GenericList",
            "description": "Generic Lists",
            "type": "PostureManagement"
        },
        {
            "name": "GlobalSearch",
            "description": "Global search for all CloudGuard services",
            "type": "Administration"
        },
        {
            "name": "GoogleCloudAccount",
            "description": "Google Cloud Accounts",
            "type": "Onboarding"
        },
        {
            "name": "GoogleCloudFirewallRule",
            "type": "InventoryGcp"
        },
        {
            "name": "GoogleCloudFunction",
            "type": "InventoryGcp"
        },
        {
            "name": "GoogleCloudIamPolicy",
            "type": "InventoryGcp"
        },
        {
            "name": "GoogleCloudNetwork",
            "description": "Google Cloud Network",
            "type": "InventoryGcp"
        },
        {
            "name": "GoogleCloudSubnet",
            "type": "InventoryGcp"
        },
        {
            "name": "GoogleCloudVMInstance",
            "type": "InventoryGcp"
        },
        {
            "name": "Home",
            "type": "Unclassified"
        },
        {
            "name": "IamSafeLease",
            "description": "IAM Safety Leases",
            "type": "Identity"
        },
        {
            "name": "IncidentsStatus",
            "type": "Unclassified"
        },
        {
            "name": "InfrastructureAssessment",
            "type": "Unclassified"
        },
        {
            "name": "Intelligence",
            "description": "CloudGuard Intelligence allows you to visualize and analyze Account Activity and Network Traffic into and out of your cloud environment.",
            "type": "Intelligence"
        },
        {
            "name": "IpAddressMetadata",
            "description": "IP Address Metadata",
            "type": "NetworkSecurity"
        },
        {
            "name": "IpList",
            "description": "IP Lists",
            "type": "NetworkSecurity"
        },
        {
            "name": "LicenseActivator",
            "type": "Unclassified"
        },
        {
            "name": "Licensing",
            "type": "Unclassified"
        },
        {
            "name": "ManagedGenericList",
            "type": "Unclassified"
        },
        {
            "name": "Msp",
            "type": "Unclassified"
        },
        {
            "name": "OrganizationalUnit",
            "description": "Manage Organizational Units",
            "type": "InventoryAwsGlobal"
        },
        {
            "name": "Permission",
            "type": "Unclassified"
        },
        {
            "name": "ProtectedAsset",
            "type": "Inventory"
        },
        {
            "name": "ProtectedAssetsReport",
            "description": "Compliance Protected Asset csv reports",
            "type": "Events"
        },
        {
            "name": "ProtegoStatistics",
            "description": "Protego statistics by dates",
            "type": "WorkloadProtection"
        },
        {
            "name": "Role",
            "description": "CloudGuard Roles",
            "type": "Administration"
        },
        {
            "name": "RulesEngine",
            "type": "Unclassified"
        },
        {
            "name": "SecurityGroup",
            "type": "Unclassified"
        },
        {
            "name": "Serverless",
            "type": "WorkloadProtection"
        },
        {
            "name": "ServerlessPolicy",
            "description": "Serverless policy",
            "type": "WorkloadProtection"
        },
        {
            "name": "ServiceAccount",
            "description": "CloudGuard Service Accounts",
            "type": "Administration"
        },
        {
            "name": "ServicePort",
            "type": "Unclassified"
        },
        {
            "name": "Settings",
            "description": "Account Settings",
            "type": "Administration"
        },
        {
            "name": "ShiftLeft",
            "description": "ShiftLeft",
            "type": "WorkloadProtection"
        },
        {
            "name": "SystemHealth",
            "type": "Unclassified"
        },
        {
            "name": "TenableAccount",
            "description": "Onboard Tenable accounts",
            "type": "Administration"
        },
        {
            "name": "User",
            "description": "CloudGuard account users",
            "type": "Administration"
        },
        {
            "name": "ContainerRegistryAccount",
            "description": "Container Registry Account",
            "type": "Onboarding"
        },
        {
            "name": "ContainerRegistryAccountInternal",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "ContainerRegistryImageAssurancePolicy",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "Dashboard",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "EcsConfiguration",
            "description": "",
            "type": "WorkloadProtection"
        },
        {
            "name": "EcsImageAssurancePolicy",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "Environment",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "ImageAssuranceDashboard",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "ImageAssuranceReport",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesAccount",
            "description": "Kubernetes Accounts",
            "type": "Onboarding"
        },
        {
            "name": "KubernetesAccountInternal",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesAccountOld",
            "description": "(deprecated: this api is deprecated, please use '/v2/kubernetes/account' instead)",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesAdmissionControl",
            "description": "Kubernetes Admission Control",
            "type": "WorkloadProtection"
        },
        {
            "name": "KubernetesAdmissionControlPoliciesSummary",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesClusterRole",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesImage",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesImageAdmissionExclusion",
            "description": "[Preview feature] Kubernetes Image admission exclusions",
            "type": "WorkloadProtection"
        },
        {
            "name": "KubernetesImageAssurance",
            "description": "Kubernetes Image Assurance",
            "type": "WorkloadProtection"
        },
        {
            "name": "KubernetesImageAssurancePolicy",
            "description": "Kubernetes Image Assurance Policy",
            "type": "WorkloadProtection"
        },
        {
            "name": "KubernetesIngress",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesNetworkPolicy",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesNode",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesPod",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesPodGroup",
            "description": "Kubernetes Pod Groups",
            "type": "WorkloadProtection"
        },
        {
            "name": "KubernetesPodGroupOwner",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesPodSecurityPolicy",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesRole",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesRuntimeAssurance",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesService",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "KubernetesServiceAccount",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "Shiftleft",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "ShiftLeftAccount",
            "description": "ShiftLeft",
            "type": "WorkloadProtection"
        },
        {
            "name": "ShiftLeftPolicy",
            "description": "ShiftLeft Policy",
            "type": "WorkloadProtection"
        },
        {
            "name": "Workload",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "WorkloadAccountSetting",
            "description": "Workload Account Setting",
            "type": "WorkloadProtection"
        },
        {
            "name": "WorkloadChangeMonitoring",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "WorkloadImageAssurance",
            "description": "Workload Image Assurance",
            "type": "WorkloadProtection"
        },
        {
            "name": "WorkloadImageAssuranceInternal",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "WorkloadInternal",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "WorkloadRuntimeProtection",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "Alerts",
            "description": "",
            "type": "Ciem"
        },
        {
            "name": "Azure",
            "description": "",
            "type": "Intelligence"
        },
        {
            "name": "FindingOrchestration",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "Gcp",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "Remediation",
            "description": "Remediation Actions",
            "type": "Intelligence"
        },
        {
            "name": "Reports",
            "description": "",
            "type": "Intelligence"
        },
        {
            "name": "NotificationIntegrationInternal",
            "description": "(deprecated: This controller is deprecated and will be removed in the future)",
            "type": "Unclassified"
        },
        {
            "name": "OciCloudAccount",
            "description": "Onboard OCI accounts",
            "type": "Onboarding"
        },
        {
            "name": "Regions",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "Spectral",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "RestrictedWorkloadClientModules",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "WorkloadClientModules",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "WorkloadTelemetry",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "Integration",
            "description": "Integration",
            "type": "Administration"
        },
        {
            "name": "IntegrationInternal",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "Notification",
            "description": "Notification",
            "type": "Administration"
        },
        {
            "name": "NotificationInternal",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "AssetMetadataSyncNow",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "BusinessPriorityModifier",
            "description": "Business Priority Rules",
            "type": "RiskManagement"
        },
        {
            "name": "CustomRuleset",
            "description": "Risk Management Rulesets",
            "type": "RiskManagement"
        },
        {
            "name": "Dspm",
            "description": "DSPM Controller",
            "type": "RiskManagement"
        },
        {
            "name": "Exposure",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "GroupRiskManagement",
            "description": "Groups Risk Management",
            "type": "RiskManagement"
        },
        {
            "name": "RemediationActions",
            "description": "Remediation Actions",
            "type": "RiskManagement"
        },
        {
            "name": "RiskModifiers",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "SecurityEvents",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "SimilarAssetGroups",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "AwsOrganizationManagement",
            "description": "AwsOrganizationManagement",
            "type": "Onboarding"
        },
        {
            "name": "AwsOrganizationManagementOnboarding",
            "description": "AwsOrganizationManagementOnboarding",
            "type": "Onboarding"
        },
        {
            "name": "AzureOrganizationManagement",
            "description": "AzureOrganizationManagement",
            "type": "Onboarding"
        },
        {
            "name": "InternalSBOM",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "InternalVulnerabilityAccountStatsBatch",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "InternalVulnerabilityCleanup",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "InternalVulnerabilityScanResults",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "SBOM",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "SBOMExport",
            "description": "SBOM Export",
            "type": "WorkloadProtection"
        },
        {
            "name": "Vulnerabilities",
            "description": "Vulnerabilities",
            "type": "WorkloadProtection"
        },
        {
            "name": "VulnerabilityAssessment",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "VulnerabilitySBOM",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "GcpMachineImage",
            "description": "",
            "type": "InventoryGcp"
        },
        {
            "name": "OciCompartment",
            "description": "",
            "type": "InventoryOci"
        },
        {
            "name": "AssetLabelsService",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "AssetOpenFindings",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "BasicAdmin",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "BasicUser",
            "description": "",
            "type": "Unclassified"
        },
        {
            "name": "EntityTypes",
            "description": "The entity types endpoint allows you to get the supported entity types and the platform they're supported for.",
            "type": "RiskManagement"
        },
        {
            "name": "EvidencePath",
            "description": "The evidence path endpoint allows you to get the evidence path for a given findingId.",
            "type": "RiskManagement"
        },
        {
            "name": "Exclusions",
            "description": "The exclusion endpoint provides API to perform CRUD operations on the resource.",
            "type": "RiskManagement"
        },
        {
            "name": "Rules",
            "description": "The rules endpoint provides APIs to get the security rules data",
            "type": "RiskManagement"
        },
        {
            "name": "SecurityIssues",
            "description": "The Findings endpoint provides APIs query the findings store which contains findings such as security issues. It provides APIs to get, search and group findings.",
            "type": "RiskManagement"
        },
        {
            "name": "AutomatedActions",
            "description": "The Automated Actions resource provides API to perform CRUD operations on the resource.",
            "type": "RiskManagement"
        }
    ],
    "components": {
        "schemas": {
            "Models-AwsAccessLeasePostViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "AWS account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "description": "AWS region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "securityGroupId": {
                        "description": "Security Group id of Security Group affected by lease. Can be in internal  format (integer) or external AWS format (\"sg-XXXXX\")",
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "[readonly] lease id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "account id",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ip": {
                        "description": "IP address of the lease",
                        "type": "string"
                    },
                    "note": {
                        "description": "not used",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "description": "time lease was created",
                        "type": "string"
                    },
                    "user": {
                        "description": "user for whom the lease was created",
                        "type": "string"
                    },
                    "length": {
                        "description": "the duration of the lease ([D].H:M:S)",
                        "type": "string"
                    },
                    "protocol": {
                        "description": "the network protocol to be used in the lease",
                        "enum": [
                            "ALL",
                            "HOPOPT",
                            "ICMP",
                            "IGMP",
                            "GGP",
                            "IPV4",
                            "ST",
                            "TCP",
                            "CBT",
                            "EGP",
                            "IGP",
                            "BBN_RCC_MON",
                            "NVP2",
                            "PUP",
                            "ARGUS",
                            "EMCON",
                            "XNET",
                            "CHAOS",
                            "UDP",
                            "MUX",
                            "DCN_MEAS",
                            "HMP",
                            "PRM",
                            "XNS_IDP",
                            "TRUNK1",
                            "TRUNK2",
                            "LEAF1",
                            "LEAF2",
                            "RDP",
                            "IRTP",
                            "ISO_TP4",
                            "NETBLT",
                            "MFE_NSP",
                            "MERIT_INP",
                            "DCCP",
                            "ThreePC",
                            "IDPR",
                            "XTP",
                            "DDP",
                            "IDPR_CMTP",
                            "TPplusplus",
                            "IL",
                            "IPV6",
                            "SDRP",
                            "IPV6_ROUTE",
                            "IPV6_FRAG",
                            "IDRP",
                            "RSVP",
                            "GRE",
                            "DSR",
                            "BNA",
                            "ESP",
                            "AH",
                            "I_NLSP",
                            "SWIPE",
                            "NARP",
                            "MOBILE",
                            "TLSP",
                            "SKIP",
                            "ICMPV6",
                            "IPV6_NONXT",
                            "IPV6_OPTS",
                            "CFTP",
                            "SAT_EXPAK",
                            "KRYPTOLAN",
                            "RVD",
                            "IPPC",
                            "SAT_MON",
                            "VISA",
                            "IPCV",
                            "CPNX",
                            "CPHB",
                            "WSN",
                            "PVP",
                            "BR_SAT_MON",
                            "SUN_ND",
                            "WB_MON",
                            "WB_EXPAK",
                            "ISO_IP",
                            "VMTP",
                            "SECURE_VMTP",
                            "VINES",
                            "TTP",
                            "NSFNET_IGP",
                            "DGP",
                            "TCF",
                            "EIGRP",
                            "OSPFIGP",
                            "SPRITE_RPC",
                            "LARP",
                            "MTP",
                            "AX25",
                            "IPIP",
                            "MICP",
                            "SCC_SP",
                            "ETHERIP",
                            "ENCAP",
                            "GMTP",
                            "IFMP",
                            "PNNI",
                            "PIM",
                            "ARIS",
                            "SCPS",
                            "QNX",
                            "AN",
                            "IPCOMP",
                            "SNP",
                            "COMPAQ_PEER",
                            "IPX_IN_IP",
                            "VRRP",
                            "PGM",
                            "L2TP",
                            "DDX",
                            "IATP",
                            "STP",
                            "SRP",
                            "UTI",
                            "SMP",
                            "SM",
                            "PTP",
                            "ISIS",
                            "FIRE",
                            "CRTP",
                            "CRUDP",
                            "SSCOPMCE",
                            "IPLT",
                            "SPS",
                            "PIPE",
                            "SCTP",
                            "FC",
                            "RSVP_E2E_IGNORE",
                            "MOBILITY_HEADER",
                            "UDPLITE",
                            "MPLS_IN_IP",
                            "MANET",
                            "HIP",
                            "SHIM6",
                            "WESP",
                            "ROHC"
                        ],
                        "type": "string"
                    },
                    "portFrom": {
                        "format": "int32",
                        "description": "the source IP port for the lease",
                        "type": "integer"
                    },
                    "portTo": {
                        "format": "int32",
                        "description": "the destination IP port for the lease",
                        "type": "integer"
                    },
                    "srl": {
                        "description": "internal use only",
                        "type": "string"
                    }
                }
            },
            "Models-AccessLeasesGroupedViewModel": {
                "type": "object",
                "properties": {
                    "aws": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AwsAccessLeaseViewModel"
                        }
                    },
                    "agents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AgentAccessLeaseViewModel"
                        }
                    }
                }
            },
            "Models-AwsAccessLeaseViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "AWS account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "description": "AWS region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "securityGroupId": {
                        "format": "int64",
                        "description": "Security Group affected by lease",
                        "type": "integer"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "[readonly] lease id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "account id",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ip": {
                        "description": "IP address of the lease",
                        "type": "string"
                    },
                    "note": {
                        "description": "not used",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "description": "time lease was created",
                        "type": "string"
                    },
                    "user": {
                        "description": "user for whom the lease was created",
                        "type": "string"
                    },
                    "length": {
                        "description": "the duration of the lease ([D].H:M:S)",
                        "type": "string"
                    },
                    "protocol": {
                        "description": "the network protocol to be used in the lease",
                        "enum": [
                            "ALL",
                            "HOPOPT",
                            "ICMP",
                            "IGMP",
                            "GGP",
                            "IPV4",
                            "ST",
                            "TCP",
                            "CBT",
                            "EGP",
                            "IGP",
                            "BBN_RCC_MON",
                            "NVP2",
                            "PUP",
                            "ARGUS",
                            "EMCON",
                            "XNET",
                            "CHAOS",
                            "UDP",
                            "MUX",
                            "DCN_MEAS",
                            "HMP",
                            "PRM",
                            "XNS_IDP",
                            "TRUNK1",
                            "TRUNK2",
                            "LEAF1",
                            "LEAF2",
                            "RDP",
                            "IRTP",
                            "ISO_TP4",
                            "NETBLT",
                            "MFE_NSP",
                            "MERIT_INP",
                            "DCCP",
                            "ThreePC",
                            "IDPR",
                            "XTP",
                            "DDP",
                            "IDPR_CMTP",
                            "TPplusplus",
                            "IL",
                            "IPV6",
                            "SDRP",
                            "IPV6_ROUTE",
                            "IPV6_FRAG",
                            "IDRP",
                            "RSVP",
                            "GRE",
                            "DSR",
                            "BNA",
                            "ESP",
                            "AH",
                            "I_NLSP",
                            "SWIPE",
                            "NARP",
                            "MOBILE",
                            "TLSP",
                            "SKIP",
                            "ICMPV6",
                            "IPV6_NONXT",
                            "IPV6_OPTS",
                            "CFTP",
                            "SAT_EXPAK",
                            "KRYPTOLAN",
                            "RVD",
                            "IPPC",
                            "SAT_MON",
                            "VISA",
                            "IPCV",
                            "CPNX",
                            "CPHB",
                            "WSN",
                            "PVP",
                            "BR_SAT_MON",
                            "SUN_ND",
                            "WB_MON",
                            "WB_EXPAK",
                            "ISO_IP",
                            "VMTP",
                            "SECURE_VMTP",
                            "VINES",
                            "TTP",
                            "NSFNET_IGP",
                            "DGP",
                            "TCF",
                            "EIGRP",
                            "OSPFIGP",
                            "SPRITE_RPC",
                            "LARP",
                            "MTP",
                            "AX25",
                            "IPIP",
                            "MICP",
                            "SCC_SP",
                            "ETHERIP",
                            "ENCAP",
                            "GMTP",
                            "IFMP",
                            "PNNI",
                            "PIM",
                            "ARIS",
                            "SCPS",
                            "QNX",
                            "AN",
                            "IPCOMP",
                            "SNP",
                            "COMPAQ_PEER",
                            "IPX_IN_IP",
                            "VRRP",
                            "PGM",
                            "L2TP",
                            "DDX",
                            "IATP",
                            "STP",
                            "SRP",
                            "UTI",
                            "SMP",
                            "SM",
                            "PTP",
                            "ISIS",
                            "FIRE",
                            "CRTP",
                            "CRUDP",
                            "SSCOPMCE",
                            "IPLT",
                            "SPS",
                            "PIPE",
                            "SCTP",
                            "FC",
                            "RSVP_E2E_IGNORE",
                            "MOBILITY_HEADER",
                            "UDPLITE",
                            "MPLS_IN_IP",
                            "MANET",
                            "HIP",
                            "SHIM6",
                            "WESP",
                            "ROHC"
                        ],
                        "type": "string"
                    },
                    "portFrom": {
                        "format": "int32",
                        "description": "the source IP port for the lease",
                        "type": "integer"
                    },
                    "portTo": {
                        "format": "int32",
                        "description": "the destination IP port for the lease",
                        "type": "integer"
                    },
                    "srl": {
                        "description": "internal use only",
                        "type": "string"
                    }
                }
            },
            "Models-AgentAccessLeaseViewModel": {
                "type": "object",
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "[readonly] lease id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "account id",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ip": {
                        "description": "IP address of the lease",
                        "type": "string"
                    },
                    "note": {
                        "description": "not used",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "description": "time lease was created",
                        "type": "string"
                    },
                    "user": {
                        "description": "user for whom the lease was created",
                        "type": "string"
                    },
                    "length": {
                        "description": "the duration of the lease ([D].H:M:S)",
                        "type": "string"
                    },
                    "protocol": {
                        "description": "the network protocol to be used in the lease",
                        "enum": [
                            "ALL",
                            "HOPOPT",
                            "ICMP",
                            "IGMP",
                            "GGP",
                            "IPV4",
                            "ST",
                            "TCP",
                            "CBT",
                            "EGP",
                            "IGP",
                            "BBN_RCC_MON",
                            "NVP2",
                            "PUP",
                            "ARGUS",
                            "EMCON",
                            "XNET",
                            "CHAOS",
                            "UDP",
                            "MUX",
                            "DCN_MEAS",
                            "HMP",
                            "PRM",
                            "XNS_IDP",
                            "TRUNK1",
                            "TRUNK2",
                            "LEAF1",
                            "LEAF2",
                            "RDP",
                            "IRTP",
                            "ISO_TP4",
                            "NETBLT",
                            "MFE_NSP",
                            "MERIT_INP",
                            "DCCP",
                            "ThreePC",
                            "IDPR",
                            "XTP",
                            "DDP",
                            "IDPR_CMTP",
                            "TPplusplus",
                            "IL",
                            "IPV6",
                            "SDRP",
                            "IPV6_ROUTE",
                            "IPV6_FRAG",
                            "IDRP",
                            "RSVP",
                            "GRE",
                            "DSR",
                            "BNA",
                            "ESP",
                            "AH",
                            "I_NLSP",
                            "SWIPE",
                            "NARP",
                            "MOBILE",
                            "TLSP",
                            "SKIP",
                            "ICMPV6",
                            "IPV6_NONXT",
                            "IPV6_OPTS",
                            "CFTP",
                            "SAT_EXPAK",
                            "KRYPTOLAN",
                            "RVD",
                            "IPPC",
                            "SAT_MON",
                            "VISA",
                            "IPCV",
                            "CPNX",
                            "CPHB",
                            "WSN",
                            "PVP",
                            "BR_SAT_MON",
                            "SUN_ND",
                            "WB_MON",
                            "WB_EXPAK",
                            "ISO_IP",
                            "VMTP",
                            "SECURE_VMTP",
                            "VINES",
                            "TTP",
                            "NSFNET_IGP",
                            "DGP",
                            "TCF",
                            "EIGRP",
                            "OSPFIGP",
                            "SPRITE_RPC",
                            "LARP",
                            "MTP",
                            "AX25",
                            "IPIP",
                            "MICP",
                            "SCC_SP",
                            "ETHERIP",
                            "ENCAP",
                            "GMTP",
                            "IFMP",
                            "PNNI",
                            "PIM",
                            "ARIS",
                            "SCPS",
                            "QNX",
                            "AN",
                            "IPCOMP",
                            "SNP",
                            "COMPAQ_PEER",
                            "IPX_IN_IP",
                            "VRRP",
                            "PGM",
                            "L2TP",
                            "DDX",
                            "IATP",
                            "STP",
                            "SRP",
                            "UTI",
                            "SMP",
                            "SM",
                            "PTP",
                            "ISIS",
                            "FIRE",
                            "CRTP",
                            "CRUDP",
                            "SSCOPMCE",
                            "IPLT",
                            "SPS",
                            "PIPE",
                            "SCTP",
                            "FC",
                            "RSVP_E2E_IGNORE",
                            "MOBILITY_HEADER",
                            "UDPLITE",
                            "MPLS_IN_IP",
                            "MANET",
                            "HIP",
                            "SHIM6",
                            "WESP",
                            "ROHC"
                        ],
                        "type": "string"
                    },
                    "portFrom": {
                        "format": "int32",
                        "description": "the source IP port for the lease",
                        "type": "integer"
                    },
                    "portTo": {
                        "format": "int32",
                        "description": "the destination IP port for the lease",
                        "type": "integer"
                    },
                    "srl": {
                        "description": "internal use only",
                        "type": "string"
                    }
                }
            },
            "Models-AccessLeaseInvitationViewModel": {
                "type": "object",
                "properties": {
                    "notifyEmail": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "length": {
                        "description": "the duration of the lease ([D].H:M:S)",
                        "type": "string"
                    },
                    "recipientName": {
                        "description": "email of invitation recipient",
                        "type": "string"
                    },
                    "targetSrl": {
                        "description": "internal use",
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "lease id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "expirationTime": {
                        "format": "date-time",
                        "description": "invitation expiration time (YYYY-MM-DD HH:MM:SS.MS TZ)",
                        "type": "string"
                    },
                    "pivotEntity": {
                        "description": "Security Group name",
                        "type": "string"
                    },
                    "serviceName": {
                        "description": "Security Group service for which the lease will be opened",
                        "type": "string"
                    },
                    "issuerName": {
                        "description": "email of  user issuing the lease",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "description": "time lease was created",
                        "type": "string"
                    }
                }
            },
            "Models-ManagingAccountViewModel": {
                "type": "object",
                "properties": {
                    "accountName": {
                        "type": "string"
                    }
                }
            },
            "Models-AccountStatsViewModel": {
                "type": "object",
                "properties": {
                    "Users": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "Roles": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "awsRdsInstances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "awsInstances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "awsElbs": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "awsAlbs": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "awsNlbs": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agents": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "awsLambdaFunctions": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "awsAccounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "awsSecurityGroups": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "awsRedshiftClusters": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "SecurityGroups": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureAccounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureVms": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureElbs": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureNsgs": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "googleCloud": {
                        "$ref": "#/components/schemas/Models-AccountStatsViewModel-GoogleCloudStatsViewModel"
                    },
                    "awsEfs": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "kubernetesNodes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "kubernetesAccounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "alibabaAccounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "alibabaRdsDbInstanceCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "alibabaEcsInstanceCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ociAccounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ociOnlineBillableVirtualMachinesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ociDatabasesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "source": {
                        "enum": [
                            "ElasticSearch",
                            "Database"
                        ],
                        "type": "string"
                    },
                    "timeStamp": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Models-AccountStatsViewModel-GoogleCloudStatsViewModel": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "firewallRules": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "vmInstances": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-Licensing-UpdatePlanContactDetailsModel": {
                "type": "object",
                "properties": {
                    "plan": {
                        "enum": [
                            "Undecided",
                            "Beta_Trial_Plan",
                            "FREE",
                            "METERED",
                            "CF_BASIC",
                            "CF_DEFAULT",
                            "Starter",
                            "Growth",
                            "Large",
                            "XL",
                            "SecOpsR2",
                            "SecOpsR5",
                            "Enterprise",
                            "FREE_Unlimited",
                            "SecOpsX20",
                            "SecOpsX50",
                            "SecOpsX100",
                            "Rackers",
                            "Amazonian",
                            "Reseller",
                            "SecOpsX10",
                            "MSP",
                            "POC",
                            "AWS_Metered",
                            "Enterprise_Trial",
                            "Enterprise_Friend",
                            "Core_M",
                            "Core_L",
                            "Enterprise_New",
                            "Googler",
                            "CheckpointEmployee"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Models-AccountMarketplacePutViewModel": {
                "type": "object",
                "properties": {
                    "subscriptionType": {
                        "enum": [
                            "Metered",
                            "Contract",
                            "Core",
                            "Metered2",
                            "D9",
                            "Logic",
                            "AzureD9",
                            "AzureD9wh"
                        ],
                        "type": "string"
                    }
                }
            },
            "Account-AccountOwnerViewModel": {
                "type": "object",
                "properties": {
                    "userId": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Models-AccountSSOConfigViewModel": {
                "required": [
                    "idpEndpointUrl",
                    "accountSSOId",
                    "x509Certificate",
                    "assertionIssuer",
                    "isJitProvisionAllow"
                ],
                "type": "object",
                "properties": {
                    "idpEndpointUrl": {
                        "type": "string"
                    },
                    "accountSSOId": {
                        "type": "string"
                    },
                    "x509Certificate": {
                        "type": "string"
                    },
                    "assertionIssuer": {
                        "type": "string"
                    },
                    "logoutLandingPage": {
                        "type": "string"
                    },
                    "isJitProvisionAllow": {
                        "type": "boolean"
                    },
                    "samlRoleAttributeName": {
                        "type": "string"
                    }
                }
            },
            "Models-CrossAccountIdentifierViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Account-AccountUsageViewModel": {
                "type": "object",
                "properties": {
                    "timeStamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "plan": {
                        "enum": [
                            "Undecided",
                            "Beta_Trial_Plan",
                            "FREE",
                            "METERED",
                            "CF_BASIC",
                            "CF_DEFAULT",
                            "Starter",
                            "Growth",
                            "Large",
                            "XL",
                            "SecOpsR2",
                            "SecOpsR5",
                            "Enterprise",
                            "FREE_Unlimited",
                            "SecOpsX20",
                            "SecOpsX50",
                            "SecOpsX100",
                            "Rackers",
                            "Amazonian",
                            "Reseller",
                            "SecOpsX10",
                            "MSP",
                            "POC",
                            "AWS_Metered",
                            "Enterprise_Trial",
                            "Enterprise_Friend",
                            "Core_M",
                            "Core_L",
                            "Enterprise_New",
                            "Googler",
                            "CheckpointEmployee"
                        ],
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "billingProvider": {
                        "enum": [
                            "",
                            "CloudFlare",
                            "VPLS",
                            "AppDirect",
                            "Newvem",
                            "MSP",
                            "AWS",
                            "AZURE"
                        ],
                        "type": "string"
                    },
                    "billingProviderName": {
                        "type": "string"
                    },
                    "serversOnline": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "serversDefined": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudInstancesOnline": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudBillableInstancesOnline": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudNonBillableInstancesOnline": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudLoadBalancers": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudDbInstances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudBillableDbInstances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudNonBillableDbInstances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudLambdaFunctionProtectedFspCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudLambdaFunctionProtectEnabledCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudLambdaFunctionLatestFspInvocationsCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudLambdaFunctionProtectedCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudSubnets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudNacl": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudVPC": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudSecurityGroups": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudLambdaFunctions": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudBillableLambdaFunctions": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudApplicationLoadBalancers": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudRedshifts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudAccounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudAccountsInvalid": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "usersCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "iamSafeAccounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalIamUsers": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalIamRoles": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "restrictedIamUsers": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "restrictedIamRoles": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protectedIamUsers": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protectedIamRoles": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureCloudAccounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureVirtualMachinesOnline": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureVirtualMachinesOnlineBillable": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureLoadBalancers": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureSecurityGroups": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "googleCloudAccounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "googleVms": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "googleVmsBillable": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudEfs": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudS3Buckets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudKms": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "licenseComplianceEnabled": {
                        "type": "boolean"
                    },
                    "licenseIamSafeEnabled": {
                        "type": "boolean"
                    },
                    "licensefimEnabled": {
                        "type": "boolean"
                    },
                    "licenseEnterpriseFeaturesEnabled": {
                        "type": "boolean"
                    },
                    "licenseAllowedUsers": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "billableAssets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "billableAwsAssets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "billableAzureAssets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "billableGoogleAssets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "billableKubernetesAssets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "billableAlibabaAssets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureSqlInstances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureDbInstances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ociCloudAccounts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ociBillableAssets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ociVirtualMachinesAssets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ociBillableVirtualMachinesAssets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ociDatabasesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "azureVirtualMachinesNonBillable": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "googleVmsNonBillable": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalAccountBillabeAndNonBillableAssetsCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "kubernetesNodesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "kubernetesInactiveNodesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "kubernetesBillableNodes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "kubernetesPremiumBillableNodes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "kubernetesAccounts": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Models-ExceedingLicenseViewModel": {
                "type": "object",
                "properties": {
                    "exceedingAgents": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "exceedingInstances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "exceedingUsers": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isExceeding": {
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "Models-LicenseViewModel": {
                "description": "A view model representation of the account's License informatino",
                "type": "object",
                "properties": {
                    "planName": {
                        "type": "string"
                    },
                    "agents": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "instances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "users": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "trialEnd": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "trialExtensionCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxTrialExtensionsAllowed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "featureTier": {
                        "enum": [
                            "Trial",
                            "Basic",
                            "Advanced",
                            "Premium"
                        ],
                        "type": "string"
                    },
                    "maxClarityEntriesAllowed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "clarityEntriesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "networkEnabled": {
                        "type": "boolean"
                    },
                    "complianceEnabled": {
                        "type": "boolean"
                    },
                    "complianceUpdatedBy": {
                        "type": "string"
                    },
                    "complianceUpdatedDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "canUpdateAccountFeatures": {
                        "type": "boolean"
                    },
                    "iamsafeEnabled": {
                        "type": "boolean"
                    },
                    "enterpriseEnabled": {
                        "type": "boolean"
                    },
                    "enterpriseUpdatedBy": {
                        "type": "string"
                    },
                    "enterpriseUpdatedDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "fimEnabled": {
                        "type": "boolean"
                    },
                    "allowedUsers": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "poAssets": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentsEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "Account-MaxInvalidPasswordAttemptsViewModel": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "format": "int32",
                        "maximum": 100,
                        "minimum": 3,
                        "type": "integer"
                    }
                }
            },
            "Account-SessionIdleTimeoutMinutesViewModel": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "format": "int32",
                        "description": "The value of the session idle timeout in minutes, value must be set to a number between 15 and 720.",
                        "maximum": 720,
                        "minimum": 15,
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-AccountEmailFiltersDescriptor": {
                "type": "object",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-EmailFilterItem"
                        }
                    }
                }
            },
            "Falconetix-Model-EmailFilterItem": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "boolean"
                    }
                }
            },
            "Models-AccountViewModel": {
                "type": "object",
                "properties": {
                    "useDefaultExternalId": {
                        "type": "boolean"
                    },
                    "allowEditExternalId": {
                        "type": "boolean"
                    },
                    "pairedToCloudInfra": {
                        "type": "boolean"
                    },
                    "crossAccountIdentifier": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "customMessage": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "ssoEnabled": {
                        "type": "boolean"
                    },
                    "canGenerateCrossAccountId": {
                        "type": "boolean"
                    },
                    "cloudInfraTenantId": {
                        "type": "string"
                    },
                    "billingProvider": {
                        "description": " or other billing providers. In case of Appdirect we format it as Appdirect/Partner",
                        "type": "string"
                    },
                    "billingInfo": {
                        "$ref": "#/components/schemas/Models-BillingViewModel"
                    },
                    "activeFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "iconUrl": {
                        "type": "string"
                    },
                    "isManagedAccount": {
                        "type": "boolean"
                    },
                    "maxInvalidPasswordAttempts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "sessionIdleTimeoutMinutes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isMfaEnforced": {
                        "type": "boolean"
                    },
                    "usersManagedBy": {
                        "enum": [
                            "CloudGuard",
                            "CloudInfra"
                        ],
                        "type": "string"
                    }
                }
            },
            "Models-BillingViewModel": {
                "type": "object",
                "properties": {
                    "cardHolder": {
                        "type": "string"
                    },
                    "last4Digits": {
                        "type": "string"
                    },
                    "expMonth": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "expYear": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "BL-Services-PollingInterval-UpdatePollingIntervalRequestViewModel": {
                "type": "object",
                "properties": {
                    "interval": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "AccountPollingInterval-CreatePollingIntervalViewModel": {
                "type": "object",
                "properties": {
                    "interval": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    }
                }
            },
            "AccountPollingInterval-PollingIntervalViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "entityId": {
                        "$ref": "#/components/schemas/Falconetix-Model-SRL"
                    },
                    "score": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "interval": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-SRL": {
                "description": "a URL like convention for D9 services.\r\nCan identity a service port on an agent server or an Amazon service on a security group in an AWS account",
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "sType": {
                        "enum": [
                            "error",
                            "cmp",
                            "amz",
                            "secgrp",
                            "iplist",
                            "blacklist",
                            "user",
                            "fim",
                            "azure",
                            "google",
                            "compliance",
                            "kubernetes",
                            "organizationalUnit",
                            "ShiftLeft",
                            "KubernetesRuntimeAssurance",
                            "alibaba",
                            "KubernetesInterface",
                            "ContainerRegistry",
                            "ers",
                            "oci"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "AccountRegistration-AccountRegistrationWebViewModel": {
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "recaptchaResponse": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "referrer": {
                        "type": "string"
                    },
                    "code": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "AccountRegistration-AccountRegistrationGetViewModel": {
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "referrer": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-Account-AccountRegistrationSignUpViewModel": {
                "required": [
                    "email",
                    "registrationRequestId",
                    "firstName",
                    "lastName",
                    "password",
                    "accountName",
                    "phoneNum"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "registrationRequestId": {
                        "type": "string"
                    },
                    "firstName": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "lastName": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "accountName": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "phoneNum": {
                        "maxLength": 15,
                        "minLength": 6,
                        "type": "string"
                    },
                    "sendWelcomeEmail": {
                        "type": "boolean"
                    }
                }
            },
            "Account-AccountTrustAssumableRolesViewModel": {
                "type": "object",
                "properties": {
                    "accountName": {
                        "description": "The trsuted account name",
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "The trsuted account Id",
                        "type": "integer"
                    },
                    "roles": {
                        "description": "List of roles that can be assumed by a user in the trusted account",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Account-AccountTrustViewModel": {
                "required": [
                    "sourceAccountId",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Account trust id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "targetAccountName": {
                        "description": "The trusting account name",
                        "type": "string"
                    },
                    "sourceAccountName": {
                        "description": "The trsuted account name",
                        "type": "string"
                    },
                    "sourceAccountId": {
                        "format": "uuid",
                        "description": "The  account id to trust",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "description": {
                        "description": "Description for the trust (a way to document the justification of the trust)",
                        "type": "string"
                    },
                    "restrictions": {
                        "$ref": "#/components/schemas/Account-AccountTrustRestrictionsViewModel"
                    }
                }
            },
            "Account-AccountTrustRestrictionsViewModel": {
                "type": "object",
                "properties": {
                    "roles": {
                        "description": "A list of role names that can be assumed by a user in the trusted account, leave empty to allow all roles to be assumed",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Account-AccountTrustPostViewModel": {
                "required": [
                    "sourceAccountId",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "sourceAccountId": {
                        "format": "uuid",
                        "description": "The  account id to trust",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "description": {
                        "description": "Description for the trust (a way to document the justification of the trust)",
                        "type": "string"
                    },
                    "restrictions": {
                        "$ref": "#/components/schemas/Account-AccountTrustRestrictionsViewModel"
                    }
                }
            },
            "Account-AccountTrustPutViewModel": {
                "required": [
                    "description"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "description": "A description for the account trust",
                        "type": "string"
                    },
                    "restrictions": {
                        "$ref": "#/components/schemas/Account-AccountTrustRestrictionsViewModel",
                        "description": "Restrictions configuration for the account trust"
                    }
                }
            },
            "Models-AgentSecurityGroupAttachDetachViewModel": {
                "type": "object",
                "properties": {
                    "groupid": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Models-AgentViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int64",
                        "description": "Id of the  agent",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of this Agent (server)",
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "description": "List of Id of the  Security Groups that this agent is assigned to",
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "fimPolicyId": {
                        "format": "int64",
                        "description": "The Id of the security group inheriting FIM policy to this agent.\r\n0 if no Fim policy is assigned to this agent",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Models-AgentStatusViewModel"
                    },
                    "cloudMetadata": {
                        "$ref": "#/components/schemas/Models-AgentCloudMetadataViewModel"
                    },
                    "fimStatus": {
                        "$ref": "#/components/schemas/Models-AgentFimStatusViewModel"
                    },
                    "accessPolicy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AgentAccessServiceViewModel"
                        }
                    },
                    "fimDisabled": {
                        "type": "boolean"
                    }
                }
            },
            "Models-AgentStatusViewModel": {
                "type": "object",
                "properties": {
                    "reportedIp": {
                        "type": "string"
                    },
                    "platform": {
                        "enum": [
                            "Windows",
                            "Linux",
                            "GenericLinux"
                        ],
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string"
                    },
                    "lastAgentContact": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "agentState": {
                        "enum": [
                            "Unknown",
                            "Accessible",
                            "Offline"
                        ],
                        "type": "string"
                    },
                    "agentVersion": {
                        "type": "string"
                    }
                }
            },
            "Models-AgentCloudMetadataViewModel": {
                "type": "object",
                "properties": {
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "externalInstanceId": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    }
                }
            },
            "Models-AgentFimStatusViewModel": {
                "type": "object",
                "properties": {
                    "scannerState": {
                        "enum": [
                            "PendingForBaseline",
                            "CreatingBaseline",
                            "PendingForScan",
                            "Scanning",
                            "Idle"
                        ],
                        "type": "string"
                    },
                    "scanRequested": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "baseLineCounter": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastScanStarted": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastScanEnded": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Models-AgentAccessServiceViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "protocol": {
                        "enum": [
                            "ALL",
                            "HOPOPT",
                            "ICMP",
                            "IGMP",
                            "GGP",
                            "IPV4",
                            "ST",
                            "TCP",
                            "CBT",
                            "EGP",
                            "IGP",
                            "BBN_RCC_MON",
                            "NVP2",
                            "PUP",
                            "ARGUS",
                            "EMCON",
                            "XNET",
                            "CHAOS",
                            "UDP",
                            "MUX",
                            "DCN_MEAS",
                            "HMP",
                            "PRM",
                            "XNS_IDP",
                            "TRUNK1",
                            "TRUNK2",
                            "LEAF1",
                            "LEAF2",
                            "RDP",
                            "IRTP",
                            "ISO_TP4",
                            "NETBLT",
                            "MFE_NSP",
                            "MERIT_INP",
                            "DCCP",
                            "ThreePC",
                            "IDPR",
                            "XTP",
                            "DDP",
                            "IDPR_CMTP",
                            "TPplusplus",
                            "IL",
                            "IPV6",
                            "SDRP",
                            "IPV6_ROUTE",
                            "IPV6_FRAG",
                            "IDRP",
                            "RSVP",
                            "GRE",
                            "DSR",
                            "BNA",
                            "ESP",
                            "AH",
                            "I_NLSP",
                            "SWIPE",
                            "NARP",
                            "MOBILE",
                            "TLSP",
                            "SKIP",
                            "ICMPV6",
                            "IPV6_NONXT",
                            "IPV6_OPTS",
                            "CFTP",
                            "SAT_EXPAK",
                            "KRYPTOLAN",
                            "RVD",
                            "IPPC",
                            "SAT_MON",
                            "VISA",
                            "IPCV",
                            "CPNX",
                            "CPHB",
                            "WSN",
                            "PVP",
                            "BR_SAT_MON",
                            "SUN_ND",
                            "WB_MON",
                            "WB_EXPAK",
                            "ISO_IP",
                            "VMTP",
                            "SECURE_VMTP",
                            "VINES",
                            "TTP",
                            "NSFNET_IGP",
                            "DGP",
                            "TCF",
                            "EIGRP",
                            "OSPFIGP",
                            "SPRITE_RPC",
                            "LARP",
                            "MTP",
                            "AX25",
                            "IPIP",
                            "MICP",
                            "SCC_SP",
                            "ETHERIP",
                            "ENCAP",
                            "GMTP",
                            "IFMP",
                            "PNNI",
                            "PIM",
                            "ARIS",
                            "SCPS",
                            "QNX",
                            "AN",
                            "IPCOMP",
                            "SNP",
                            "COMPAQ_PEER",
                            "IPX_IN_IP",
                            "VRRP",
                            "PGM",
                            "L2TP",
                            "DDX",
                            "IATP",
                            "STP",
                            "SRP",
                            "UTI",
                            "SMP",
                            "SM",
                            "PTP",
                            "ISIS",
                            "FIRE",
                            "CRTP",
                            "CRUDP",
                            "SSCOPMCE",
                            "IPLT",
                            "SPS",
                            "PIPE",
                            "SCTP",
                            "FC",
                            "RSVP_E2E_IGNORE",
                            "MOBILITY_HEADER",
                            "UDPLITE",
                            "MPLS_IN_IP",
                            "MANET",
                            "HIP",
                            "SHIM6",
                            "WESP",
                            "ROHC"
                        ],
                        "type": "string"
                    },
                    "normallyOpen": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "serverId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "allowedIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Agentless-AddAgentlessAwsAccountRequestBody": {
                "required": [
                    "crossAccountRoleName",
                    "crossAccountRoleExternalId"
                ],
                "type": "object",
                "properties": {
                    "crossAccountRoleName": {
                        "description": "The AWP cross account role name",
                        "type": "string"
                    },
                    "crossAccountRoleExternalId": {
                        "description": "The AWP cross account role external id",
                        "type": "string"
                    },
                    "cloudGuardAWPStackName": {
                        "description": "The AWP stack name",
                        "type": "string"
                    },
                    "scanMode": {
                        "description": "Scan mode",
                        "enum": [
                            "saas",
                            "inAccount"
                        ],
                        "type": "string"
                    },
                    "isTerraform": {
                        "description": "Indicates whether the account is onboarded with Terraform (Setting True will make AWP assume no cloud formation stack, hence no indication on CFT version updates)",
                        "type": "boolean"
                    },
                    "agentlessAccountSettings": {
                        "$ref": "#/components/schemas/Agentless-AgentlessAccountSettingsViewModel",
                        "description": "AWP account settings"
                    }
                }
            },
            "Agentless-AgentlessAccountSettingsViewModel": {
                "type": "object",
                "properties": {
                    "disabledRegions": {
                        "description": "The list of regions that are disabled for the account",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "skipFunctionAppsScan": {
                        "description": "Skip Azure Function Apps scan (supported for inAccount and inAccountSub scan modes)",
                        "type": "boolean"
                    },
                    "inAccountScannerVPC": {
                        "description": "The VPC mode (supported for inAccount scan mode)",
                        "enum": [
                            "ManagedByAWP",
                            "ManagedByCustomer"
                        ],
                        "type": "string"
                    },
                    "scanMachineIntervalInHours": {
                        "format": "int32",
                        "description": "The interval in hours to scan the account",
                        "type": "integer"
                    },
                    "maxConcurrenceScansPerRegion": {
                        "format": "int32",
                        "description": "The max number of scans that can run concurrently per region",
                        "type": "integer"
                    },
                    "customTags": {
                        "description": "A Dictionary of custom tags that will be added to each resource created by AWP",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Agentless-AddAgentlessAzureAccountRequestBody": {
                "type": "object",
                "properties": {
                    "onboardingCustomizations": {
                        "$ref": "#/components/schemas/Agentless-AzureOnboardingCustomizationViewModel",
                        "description": "AWP Azure Onboarding Customizations"
                    },
                    "scanMode": {
                        "description": "Scan mode",
                        "enum": [
                            "saas",
                            "inAccount"
                        ],
                        "type": "string"
                    },
                    "isTerraform": {
                        "description": "Indicates whether the account is onboarded with Terraform (Setting True will make AWP assume no cloud formation stack, hence no indication on CFT version updates)",
                        "type": "boolean"
                    },
                    "agentlessAccountSettings": {
                        "$ref": "#/components/schemas/Agentless-AgentlessAccountSettingsViewModel",
                        "description": "AWP account settings"
                    }
                }
            },
            "Agentless-AzureOnboardingCustomizationViewModel": {
                "type": "object",
                "properties": {
                    "virtualMachineDataShareRoleName": {
                        "description": "Custom name for the virtual machine data share role",
                        "type": "string"
                    },
                    "virtualMachineScanOperatorRoleName": {
                        "description": "Custom name for the virtual machine scan operator role, not applicable for saas mode",
                        "type": "string"
                    },
                    "functionAppScanOperatorRoleName": {
                        "description": "Custom name for the function-app scan operator role, not applicable for saas mode",
                        "type": "string"
                    },
                    "functionAppScannerRoleName": {
                        "description": "Custom name for the function-app scanner role, not applicable for saas mode",
                        "type": "string"
                    },
                    "resourceGroupName": {
                        "description": "Custom name for the resource group, not applicable for saas mode",
                        "type": "string"
                    },
                    "scannerManagedIdentityName": {
                        "description": "Custom name for the managed-identity used by the function-app scanner, not applicable for saas mode",
                        "type": "string"
                    }
                }
            },
            "Agentless-AddAgentlessAwsCentralizedAccountRequestBody": {
                "required": [
                    "crossAccountRoleName",
                    "crossAccountRoleExternalId"
                ],
                "type": "object",
                "properties": {
                    "crossAccountRoleName": {
                        "description": "The AWP cross account role name",
                        "type": "string"
                    },
                    "crossAccountRoleExternalId": {
                        "description": "The AWP cross account role external id",
                        "type": "string"
                    },
                    "cloudGuardAWPStackName": {
                        "description": "The AWP stack name",
                        "type": "string"
                    },
                    "isTerraform": {
                        "description": "Indicates whether the account is onboarded with Terraform (Setting True will make AWP assume no cloud formation stack, hence no indication on CFT version updates)",
                        "type": "boolean"
                    },
                    "agentlessAccountSettings": {
                        "$ref": "#/components/schemas/Agentless-AgentlessCentralizedAccountSettingsViewModel",
                        "description": "AWP account settings"
                    }
                }
            },
            "Agentless-AgentlessCentralizedAccountSettingsViewModel": {
                "type": "object",
                "properties": {
                    "inAccountScannerVPC": {
                        "description": "The VPC mode",
                        "enum": [
                            "ManagedByAWP",
                            "ManagedByCustomer"
                        ],
                        "type": "string"
                    }
                }
            },
            "Agentless-AddAgentlessAzureCentralizedAccountRequestBody": {
                "type": "object",
                "properties": {
                    "onboardingCustomizations": {
                        "$ref": "#/components/schemas/Agentless-CentralizedAccountOnboardingCustomizationViewModel",
                        "description": "Azure Centralized Account Onboarding Customizations"
                    },
                    "managementGroupId": {
                        "description": "The Azure Management group id associated with the enabled Centralized Account",
                        "type": "string"
                    },
                    "isTerraform": {
                        "description": "Indicates whether the account is onboarded with Terraform (Setting True will make AWP assume no cloud formation stack, hence no indication on CFT version updates)",
                        "type": "boolean"
                    },
                    "agentlessAccountSettings": {
                        "$ref": "#/components/schemas/Agentless-AgentlessCentralizedAccountSettingsViewModel",
                        "description": "AWP account settings"
                    }
                }
            },
            "Agentless-CentralizedAccountOnboardingCustomizationViewModel": {
                "type": "object",
                "properties": {
                    "virtualMachineScanOperatorRoleName": {
                        "description": "Custom name for the virtual machine scan operator role",
                        "type": "string"
                    },
                    "functionAppScanOperatorRoleName": {
                        "description": "Custom name for the function-app scan operator role",
                        "type": "string"
                    },
                    "virtualMachineDataShareRoleName": {
                        "description": "Custom name for the virtual machine data share role",
                        "type": "string"
                    },
                    "functionAppScannerRoleName": {
                        "description": "Custom name for the function-app scanner role",
                        "type": "string"
                    },
                    "resourceGroupName": {
                        "description": "Custom name for the management resource group at the centralized account",
                        "type": "string"
                    },
                    "scannerManagedIdentityName": {
                        "description": "Custom name for the managed-identity used by the function-app scanner",
                        "type": "string"
                    }
                }
            },
            "Agentless-AddAgentlessAwsSubAccountRequestBody": {
                "required": [
                    "crossAccountRoleName",
                    "crossAccountRoleExternalId",
                    "centralizedCloudAccountId"
                ],
                "type": "object",
                "properties": {
                    "crossAccountRoleName": {
                        "description": "The AWP cross account role name",
                        "type": "string"
                    },
                    "crossAccountRoleExternalId": {
                        "description": "The AWP cross account role external id",
                        "type": "string"
                    },
                    "cloudGuardAWPStackName": {
                        "description": "The AWP stack name",
                        "type": "string"
                    },
                    "centralizedCloudAccountId": {
                        "description": "Centralized cloud account Id that AWP scanners will run in",
                        "type": "string"
                    },
                    "isTerraform": {
                        "description": "Indicates whether the account is onboarded with Terraform (Setting True will make AWP assume no cloud formation stack, hence no indication on CFT version updates)",
                        "type": "boolean"
                    },
                    "agentlessAccountSettings": {
                        "$ref": "#/components/schemas/Agentless-AgentlessAccountSettingsViewModel",
                        "description": "AWP account settings"
                    }
                }
            },
            "Agentless-AddAgentlessAzureSubAccountRequestBody": {
                "required": [
                    "centralizedCloudAccountId"
                ],
                "type": "object",
                "properties": {
                    "centralizedCloudAccountId": {
                        "description": "Centralized cloud account Id that AWP scanners will run",
                        "type": "string"
                    },
                    "agentlessAccountSettings": {
                        "$ref": "#/components/schemas/Agentless-AgentlessAccountSettingsViewModel",
                        "description": "AWP account settings"
                    },
                    "onboardingCustomizations": {
                        "$ref": "#/components/schemas/Agentless-SubAccountOnboardingCustomizationViewModel",
                        "description": "Azure Sub Account Onboarding Customizations"
                    },
                    "isTerraform": {
                        "description": "Indicates whether the account is onboarded with Terraform (Setting True will make AWP assume no cloud formation stack, hence no indication on CFT version updates)",
                        "type": "boolean"
                    }
                }
            },
            "Agentless-SubAccountOnboardingCustomizationViewModel": {
                "type": "object",
                "properties": {
                    "resourceGroupName": {
                        "description": "Custom name for the scans resource group at the centralized account",
                        "type": "string"
                    }
                }
            },
            "Agentless-AccountStateViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "description": "The D9 cloud account id",
                        "type": "string"
                    },
                    "agentlessProtectionEnabled": {
                        "description": "A flag indicating whether AWP protection is enabled",
                        "type": "boolean"
                    },
                    "scanMode": {
                        "description": "OSne of saas, inAccount, inAccountHub, inAccountSub",
                        "type": "string"
                    },
                    "provider": {
                        "description": "The cloud provider",
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string"
                    },
                    "shouldUpdate": {
                        "description": "A flag indicating whether AWP resources should be updated",
                        "type": "boolean"
                    },
                    "isOrgOnboarding": {
                        "description": "A flag indicating whether AWP was enabled as part of the organization onboarding",
                        "type": "boolean"
                    },
                    "isOrgOnboardingManagement": {
                        "description": "A flag indicating whether AWP was enabled as part of the organization onboarding as management account",
                        "type": "boolean"
                    },
                    "isTerraform": {
                        "description": "A flag indicating whether AWP was enabled from terraform",
                        "type": "boolean"
                    },
                    "centralizedCloudAccountId": {
                        "description": "Centralized account id in case using centralized-sub accounts",
                        "type": "string"
                    }
                }
            },
            "Agentless-AccountViewModel": {
                "type": "object",
                "properties": {
                    "agentlessAccountSettings": {
                        "$ref": "#/components/schemas/Agentless-AgentlessAccountSettingsViewModel"
                    },
                    "missingAwpPrivateNetworkRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "accountIssues": {
                        "$ref": "#/components/schemas/BL-Std-Services-Agentless-AccountIssues"
                    },
                    "cloudAccountId": {
                        "description": "The D9 cloud account id",
                        "type": "string"
                    },
                    "agentlessProtectionEnabled": {
                        "description": "A flag indicating whether AWP protection is enabled",
                        "type": "boolean"
                    },
                    "scanMode": {
                        "description": "OSne of saas, inAccount, inAccountHub, inAccountSub",
                        "type": "string"
                    },
                    "provider": {
                        "description": "The cloud provider",
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string"
                    },
                    "shouldUpdate": {
                        "description": "A flag indicating whether AWP resources should be updated",
                        "type": "boolean"
                    },
                    "isOrgOnboarding": {
                        "description": "A flag indicating whether AWP was enabled as part of the organization onboarding",
                        "type": "boolean"
                    },
                    "isOrgOnboardingManagement": {
                        "description": "A flag indicating whether AWP was enabled as part of the organization onboarding as management account",
                        "type": "boolean"
                    },
                    "isTerraform": {
                        "description": "A flag indicating whether AWP was enabled from terraform",
                        "type": "boolean"
                    },
                    "centralizedCloudAccountId": {
                        "description": "Centralized account id in case using centralized-sub accounts",
                        "type": "string"
                    }
                }
            },
            "BL-Std-Services-Agentless-AccountIssues": {
                "type": "object",
                "properties": {
                    "regions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BL-Std-Services-Agentless-IssueItem"
                        }
                    },
                    "account": {
                        "$ref": "#/components/schemas/BL-Std-Services-Agentless-IssueItem"
                    }
                }
            },
            "BL-Std-Services-Agentless-IssueItem": {
                "type": "object",
                "properties": {
                    "issueType": {
                        "type": "string"
                    }
                }
            },
            "Agentless-AgentlessInstanceViewModel": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string"
                    },
                    "stateDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Agentless-AgentlessInstanceStateDetailsViewModel"
                        }
                    }
                }
            },
            "Agentless-AgentlessInstanceStateDetailsViewModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "The scan result type",
                        "type": "string"
                    },
                    "description": {
                        "description": "The scan result description",
                        "type": "string"
                    }
                }
            },
            "Agentless-GenerateAgentlessAwsOnboardingDataRequest": {
                "type": "object",
                "properties": {
                    "scanMode": {
                        "description": "One of saas, inAccount, inAccountHub, inAccountSub",
                        "enum": [
                            "saas",
                            "inAccount",
                            "inAccountHub",
                            "inAccountSub"
                        ],
                        "type": "string"
                    },
                    "crossAccountRoleExternalId": {
                        "description": "The AWP stack external id",
                        "type": "string"
                    },
                    "cloudGuardAWPStackName": {
                        "description": "The AWP stack name",
                        "type": "string"
                    },
                    "centralizedCloudAccountId": {
                        "description": "In case of inAccountSub, the account id of the centralized account",
                        "type": "string"
                    }
                }
            },
            "Agentless-AgentlessAwsOnboardingDataViewModel": {
                "type": "object",
                "properties": {
                    "crossAccountTemplateUrl": {
                        "description": "AWP onboarding CloudFormation stack template url",
                        "type": "string"
                    },
                    "crossAccountCloudFormationQuickCreateUrl": {
                        "description": "AWP onboarding CloudFormation stack template quick create url",
                        "type": "string"
                    },
                    "version": {
                        "description": "AWP onboarding script version",
                        "type": "string"
                    }
                }
            },
            "Agentless-GenerateAgentlessAzureOnboardingDataRequest": {
                "type": "object",
                "properties": {
                    "scanMode": {
                        "description": "One of saas, inAccount, inAccountHub, inAccountSub",
                        "enum": [
                            "saas",
                            "inAccount",
                            "inAccountHub",
                            "inAccountSub"
                        ],
                        "type": "string"
                    },
                    "centralizedId": {
                        "description": "In case of inAccountSub, the account id of the centralized account",
                        "type": "string"
                    },
                    "skipFunctionAppsScan": {
                        "description": "Skip function apps scan (supported for inAccount and inAccountSub scan modes)",
                        "type": "boolean"
                    },
                    "managementGroupId": {
                        "description": "The Azure Management group id associated with the enabled Centralized Account. In case not defined, the scope will be the tenant",
                        "type": "string"
                    },
                    "onboardingCustomizations": {
                        "$ref": "#/components/schemas/Agentless-AzureOnboardingCustomizationDataViewModel",
                        "description": "AWP Azure Onboarding Customizations"
                    }
                }
            },
            "Agentless-AzureOnboardingCustomizationDataViewModel": {
                "type": "object",
                "properties": {
                    "virtualMachineDataShareRoleName": {
                        "description": "Custom name for the virtual machine data share role, applicable for saas, centralized, and in account mode",
                        "type": "string"
                    },
                    "virtualMachineScanOperatorRoleName": {
                        "description": "Custom name for the virtual machine scan operator role, applicable for centralized, and in account mode",
                        "type": "string"
                    },
                    "functionAppScanOperatorRoleName": {
                        "description": "Custom name for the function-app scan operator role, applicable for centralized, and in account mode",
                        "type": "string"
                    },
                    "functionAppScannerRoleName": {
                        "description": "Custom name for the function-app scanner role, applicable for centralized and in account mode",
                        "type": "string"
                    },
                    "resourceGroupName": {
                        "description": "Custom name for the resource group, applicable for centralized, sub and in account mode",
                        "type": "string"
                    },
                    "scannerManagedIdentityName": {
                        "description": "Custom name for the managed-identity used by the function-app scanner, applicable for centralized and in account mode",
                        "type": "string"
                    }
                }
            },
            "Agentless-AgentlessAzureOnboardingDataViewModel": {
                "type": "object",
                "properties": {
                    "onboardingScriptCommand": {
                        "description": "The AWP onboarding script command",
                        "type": "string"
                    },
                    "onboardingScriptURL": {
                        "description": "The AWP onboarding script url",
                        "type": "string"
                    },
                    "version": {
                        "description": "AWP onboarding script version",
                        "type": "string"
                    }
                }
            },
            "Agentless-AgentlessAzureOffboardingDataViewModel": {
                "type": "object",
                "properties": {
                    "offboardingScriptCommand": {
                        "description": "The AWP offboarding script command",
                        "type": "string"
                    },
                    "offboardingScriptURL": {
                        "description": "The AWP offboarding script url",
                        "type": "string"
                    },
                    "version": {
                        "description": "AWP offboarding script version",
                        "type": "string"
                    }
                }
            },
            "Agentless-AgentlessAwsValidateStackDataViewModel": {
                "type": "object",
                "properties": {
                    "shouldUpdate": {
                        "type": "boolean"
                    },
                    "updateStackCloudFormationTemplateURL": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "Agentless-CentralizedAzureAccountViewModel": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "description": "The CloudGuard account ID",
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "description": "The CloudGuard cloud account ID",
                        "type": "string"
                    },
                    "externalAccountNumber": {
                        "description": "The external account number",
                        "type": "string"
                    }
                }
            },
            "Agentless-AgentlessSettingsViewModel": {
                "type": "object",
                "properties": {
                    "scanMachineIntervalInHours": {
                        "format": "int32",
                        "description": "The interval in hours to scan the account",
                        "type": "integer"
                    },
                    "maxConcurrenceScansPerRegion": {
                        "format": "int32",
                        "description": "The max number of scans that can run concurrently per region",
                        "type": "integer"
                    },
                    "customTags": {
                        "description": "A Dictionary of custom tags that will be added to each resource created by AWP",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-AlertsCountViewModel": {
                "type": "object",
                "properties": {
                    "fim": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "general": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Models-GetDataParmsTimeFilter": {
                "type": "object",
                "properties": {
                    "from_epoch": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "to_epoch": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    }
                }
            },
            "Alerts-ExportStatusModel-ExportStatusInfo": {
                "type": "object",
                "properties": {
                    "status": {
                        "enum": [
                            "InProgress",
                            "Success"
                        ],
                        "type": "string"
                    }
                }
            },
            "Models-AlertsFilterViewModel": {
                "type": "object",
                "properties": {
                    "getFim": {
                        "type": "boolean"
                    },
                    "getAcknowledged": {
                        "type": "boolean"
                    },
                    "alertTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sgExternalId": {
                        "type": "string"
                    }
                }
            },
            "Models-AlertViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": {
                        "description": " object type",
                        "type": "string"
                    },
                    "name": {
                        "description": "Human friendly Alert type",
                        "type": "string"
                    },
                    "description": {
                        "description": "Actual content of the alert info",
                        "type": "string"
                    },
                    "comment": {
                        "description": "Free field for user comments",
                        "type": "string"
                    },
                    "canBeAcknowledged": {
                        "description": "Signals whether this Alert can be manually acknowledged",
                        "type": "boolean"
                    },
                    "acknowledged": {
                        "description": "Was this Alert manually acknowledged (muted) by the user",
                        "type": "boolean"
                    },
                    "severity": {
                        "enum": [
                            "None",
                            "Low",
                            "Med",
                            "High"
                        ],
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "locationMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Falconetix-Model-AlertLocationEntityMetadata"
                        }
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Falconetix-Model-AlertPivotEntity"
                    },
                    "srl": {
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "modified": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AlertLocationEntityMetadata": {
                "type": "object",
                "properties": {
                    "srl": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AlertPivotEntity": {
                "type": "object",
                "properties": {
                    "srl": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "SecurityGroup",
                            "Agent",
                            "CloudAccount",
                            "AzureSecurityGroup",
                            "AzureCloudAccount",
                            "KubernetesCloudAccount"
                        ],
                        "type": "string"
                    }
                }
            },
            "Models-AlertPatchViewModel": {
                "type": "object",
                "properties": {
                    "acknowledged": {
                        "type": "boolean"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "severity": {
                        "enum": [
                            "None",
                            "Low",
                            "Med",
                            "High"
                        ],
                        "type": "string"
                    }
                }
            },
            "Alibaba-Accounts-AlibabaAccountStatsViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "creationDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "alibabaAccountId": {
                        "type": "string"
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "vendor": {
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Shared-Permissions-CloudAccountMissingPermissionsViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-Permissions-CloudAccountExternalActionStatusViewModel"
                        }
                    }
                }
            },
            "Shared-Permissions-CloudAccountExternalActionStatusViewModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    },
                    "total": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "error": {
                        "$ref": "#/components/schemas/Shared-Permissions-CloudAccountActionFailureViewModel"
                    }
                }
            },
            "Shared-Permissions-CloudAccountActionFailureViewModel": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Shared-Permissions-CloudAccountMissingPermissionsIgnorableViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableViewModel"
                        }
                    }
                }
            },
            "Shared-Permissions-MissingPermissionsIgnorableViewModel": {
                "type": "object",
                "properties": {
                    "permissionId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "isIgnored": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    },
                    "total": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "error": {
                        "$ref": "#/components/schemas/Shared-Permissions-CloudAccountActionFailureViewModel"
                    }
                }
            },
            "Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel": {
                "required": [
                    "isIgnored"
                ],
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "permissionId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "isIgnored": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                }
            },
            "Shared-Permissions-MissingPermissionViewModel": {
                "type": "object",
                "properties": {
                    "srl": {
                        "description": "internal use",
                        "type": "string"
                    },
                    "consecutiveFails": {
                        "format": "int32",
                        "description": "number of consecutive failures due to missing permissions",
                        "type": "integer"
                    },
                    "lastFail": {
                        "format": "date-time",
                        "description": "time of last failure",
                        "type": "string"
                    },
                    "lastSuccess": {
                        "format": "date-time",
                        "description": "time of last successful attempt",
                        "type": "string"
                    },
                    "firstFail": {
                        "format": "date-time",
                        "description": "time of first successful attempt",
                        "type": "string"
                    },
                    "lastFailErrorCode": {
                        "description": "error code for last failed attempt",
                        "type": "string"
                    },
                    "lastFailMessage": {
                        "description": "error message for last failed attempt",
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "retryMetadata": {
                        "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionMetadataViewModel"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "Cloud account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "vendor": {
                        "description": "cloud account provider (AWS, Azure, GCP)",
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Shared-Permissions-MissingPermissionMetadataViewModel": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "description": "list of missing permissions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    }
                }
            },
            "Alibaba-Accounts-AlibabaAccountNameViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Alibaba-Accounts-AlibabaCloudAccountGetViewModel": {
                "required": [
                    "credentials"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Alibaba id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "description": "Alibaba account name in ",
                        "type": "string"
                    },
                    "creationDate": {
                        "format": "date-time",
                        "description": "creation date for project in Alibaba",
                        "type": "string"
                    },
                    "alibabaAccountId": {
                        "description": "the Alibaba account id (that will be onboarded)",
                        "type": "string"
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaAccountCredentialsViewGetModel",
                        "description": "ALibaba account credentials"
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "organizationalUnitName": {
                        "type": "string"
                    },
                    "vendor": {
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Alibaba-Accounts-AlibabaAccountCredentialsViewGetModel": {
                "required": [
                    "accessKey"
                ],
                "type": "object",
                "properties": {
                    "accessKey": {
                        "description": "Alibaba access key",
                        "type": "string"
                    }
                }
            },
            "Alibaba-Accounts-AlibabaAccountCredentialsViewPostModel": {
                "required": [
                    "accessKey",
                    "accessSecret"
                ],
                "type": "object",
                "properties": {
                    "accessKey": {
                        "description": "Alibaba access key",
                        "type": "string"
                    },
                    "accessSecret": {
                        "description": "Password for account",
                        "type": "string"
                    }
                }
            },
            "BL-Std-Services-OrganizationalUnit-UpdateIdViewModel": {
                "type": "object",
                "properties": {
                    "organizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "BL-Std-Services-OrganizationalUnit-MoveOrganizationalUnitViewModel": {
                "type": "object",
                "properties": {
                    "sourceOrganizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "targetOrganizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "BL-Std-Services-OrganizationalUnit-AttachCloudAccountsViewModel": {
                "type": "object",
                "properties": {
                    "entries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Alibaba-Accounts-AlibabaCloudAccountPostViewModel": {
                "required": [
                    "name",
                    "credentials"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/Alibaba-Accounts-AlibabaAccountCredentialsViewPostModel"
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Models-AppMenuViewModel": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-AppD9AccountViewModel": {
                "type": "object",
                "properties": {
                    "d9AwsAccountNumber": {
                        "type": "string"
                    }
                }
            },
            "Models-AppIntercomViewModel": {
                "type": "object",
                "properties": {
                    "appId": {
                        "type": "string"
                    },
                    "userHash": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-Assessment-AssessmentBundleRequestViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int64",
                        "description": "the bundle id",
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    },
                    "name": {
                        "description": "the bundle name",
                        "type": "string"
                    },
                    "description": {
                        "description": "the bundle description",
                        "type": "string"
                    },
                    "CloudAccountId": {
                        "format": "uuid",
                        "description": "The  account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalCloudAccountId": {
                        "description": "account id on cloud provider (AWS, Azure, GCP)",
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "description": "account id on cloud provider (AWS, Azure, GCP)",
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "description": "the cloud provider (AWS/Azure/GCP)",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "requestId": {
                        "format": "uuid",
                        "description": "the assessment id (returned in the response)",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "shouldMinimizeResult": {
                        "description": "Minimized the entity results",
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-Assessment-BaseAssessmentRequestViewModel": {
                "description": "Roy note: This is a temp impl that unites the request the result and the rule. All these 3 concepts will be split.",
                "type": "object",
                "properties": {
                    "CloudAccountId": {
                        "format": "uuid",
                        "description": "The  account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalCloudAccountId": {
                        "description": "account id on cloud provider (AWS, Azure, GCP)",
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "description": "account id on cloud provider (AWS, Azure, GCP)",
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "description": "the cloud provider (AWS/Azure/GCP)",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "requestId": {
                        "format": "uuid",
                        "description": "the assessment id (returned in the response)",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "shouldMinimizeResult": {
                        "description": "Minimized the entity results",
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-RuleTestResult": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "testedCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "relevantCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "nonComplyingCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "exclusionStats": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-RuleTestResultStats"
                    },
                    "entityResults": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-ValidationResult"
                        }
                    },
                    "rule": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-RuleEntity"
                    },
                    "testPassed": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-Entites-RuleEngine-LocationMetadata": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-LocationConventionMetadataViewModel"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-Assessment-AssessmentDataSyncStatusEntityViewModel": {
                "type": "object",
                "properties": {
                    "entityType": {
                        "type": "string"
                    },
                    "recentlySuccessfulSync": {
                        "type": "boolean"
                    },
                    "generalFetchPermissionIssues": {
                        "type": "boolean"
                    },
                    "entitiesWithPermissionIssues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Assessment-EntityWithPermissionIssueViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-RuleTestResultStats": {
                "type": "object",
                "properties": {
                    "testedCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "relevantCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "nonComplyingCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-ValidationResult": {
                "type": "object",
                "properties": {
                    "validationStatus": {
                        "enum": [
                            "Relevant",
                            "Valid",
                            "Excluded"
                        ],
                        "type": "string"
                    },
                    "isRelevant": {
                        "description": "means if entity is relevant for this rule\r\nfor example rule = \"Instance where name like '%db%' should have...\", returns false in instance name = 'scheduler1'",
                        "type": "boolean"
                    },
                    "isValid": {
                        "description": "means if entity is compliant.\r\nfor example for rule=\"Instance should have vpc\", return true if instance i-123 is under vpc-234, and false if not",
                        "type": "boolean"
                    },
                    "isExcluded": {
                        "description": "means if entity is excluded.\r\nfor example for rule=\"Instance should have vpc exclude name='test'\", return true if instance name is test, and false if not",
                        "type": "boolean"
                    },
                    "exclusionId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "remediationId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "error": {
                        "description": "note that the lambda is not aware of this field",
                        "type": "string"
                    },
                    "testObj": {
                        "description": "note that the lambda is not aware of this field",
                        "type": "object"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-RuleEntity": {
                "type": "object",
                "properties": {
                    "rlmId": {
                        "format": "uuid",
                        "description": "rlm rule id, do not expose this on API for now",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "description": "rule name",
                        "type": "string"
                    },
                    "severity": {
                        "description": "rule severity (High/Medium/Low)",
                        "enum": [
                            "Informational",
                            "Low",
                            "Medium",
                            "High",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "logic": {
                        "description": "the GSL statement for the rule (text string)",
                        "type": "string"
                    },
                    "description": {
                        "description": "description of the rule (text)",
                        "type": "string"
                    },
                    "remediation": {
                        "description": "remediation text for the rule (text)",
                        "type": "string"
                    },
                    "cloudbots": {
                        "description": "the Cloudbots section for the rule (optional)",
                        "type": "string"
                    },
                    "complianceTag": {
                        "description": "the compliance section for the rule (optional)",
                        "type": "string"
                    },
                    "domain": {
                        "description": "this field is not used",
                        "type": "string"
                    },
                    "priority": {
                        "description": "this field is not used",
                        "type": "string"
                    },
                    "controlTitle": {
                        "description": "this field is not used",
                        "type": "string"
                    },
                    "ruleId": {
                        "description": "this field is not used",
                        "type": "string"
                    },
                    "category": {
                        "description": "Rule Category",
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logicHash": {
                        "description": "MD5 hash of the rule logic (serves as a unique ID for the rule), returned in response",
                        "type": "string",
                        "readOnly": true
                    },
                    "isDefault": {
                        "description": "The property represents default rule",
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-LocationConventionMetadataViewModel": {
                "type": "object",
                "properties": {
                    "srl": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-Assessment-EntityWithPermissionIssueViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "cloudVendorIdentifier": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryResultViewModel": {
                "type": "object",
                "properties": {
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-RuleTestResult"
                        }
                    },
                    "createdTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "assessmentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryBundleResultViewModel"
                    },
                    "assessmentPassed": {
                        "type": "boolean"
                    },
                    "hasErrors": {
                        "type": "boolean"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryStatsViewModel"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryBundleResultViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "isTemplate": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "CloudAccountId": {
                        "format": "uuid",
                        "description": "The  account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalCloudAccountId": {
                        "description": "account id on cloud provider (AWS, Azure, GCP)",
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "description": "account id on cloud provider (AWS, Azure, GCP)",
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "description": "the cloud provider (AWS/Azure/GCP)",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "requestId": {
                        "format": "uuid",
                        "description": "the assessment id (returned in the response)",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "shouldMinimizeResult": {
                        "description": "Minimized the entity results",
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryStatsViewModel": {
                "type": "object",
                "properties": {
                    "passed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "failed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "error": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "failedEntities": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryViewResultViewModel": {
                "type": "object",
                "properties": {
                    "createdTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "assessmentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryBundleResultViewModel"
                    },
                    "assessmentPassed": {
                        "type": "boolean"
                    },
                    "hasErrors": {
                        "type": "boolean"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-AssessmentHistoryStatsViewModel"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-RuleTestResultViewModel": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "testedCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "relevantCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "nonComplyingCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "exclusionStats": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-RuleTestResultStats"
                    },
                    "entityResults": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-ValidationResult"
                        }
                    },
                    "rule": {
                        "$ref": "#/components/schemas/Falconetix-Model-Compliance-Ruleset-RuleViewModel"
                    },
                    "testPassed": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-Exclusion-ExclusionViewModel": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "platform": {
                        "description": "Exclusion platform",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Exclusion ID",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "rules": {
                        "description": "[Optional] List of rules to apply the exclusion on.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Exclusion-RuleViewModel"
                        }
                    },
                    "logicExpressions": {
                        "description": "[Optional] The GSL logic expressions of the exclusion.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(severity like '(informational|low|medium|high|critical)')|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "regions": {
                        "description": "[Optional] List of regions to exclude, for example 'us_east_1'.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rulesetId": {
                        "format": "int64",
                        "description": "Ruleset ID to apply exclusion on.",
                        "type": "integer"
                    },
                    "cloudAccountIds": {
                        "description": "[Optional] List of cloud account IDs to apply exclusion on.\r\nIf neither cloud account IDs nor organizational unit IDs are supplied, exclusion will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "organizationalUnitIds": {
                        "description": "[Optional] List of organizational unit IDs to apply exclusion on.\r\nIf neither organizational unit IDs nor cloud account IDs are supplied, exclusion will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "comment": {
                        "description": "Comment text (free text)",
                        "type": "string"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Falconetix-Model-DateTimeRange",
                        "description": "[Optional] Effective date range for the exclusion.\r\nLeaving 'From' null will take only 'To' into account.\r\nLeaving 'To' null will take only 'From' into account.\r\nDateRange with both 'From' and 'To' null will be disregarded."
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-Remediation-RemediationViewModel": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "platform": {
                        "description": "Remediation platform",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Remediation ID",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "rules": {
                        "description": "[Optional] List of rules to apply the remediation on.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Exclusion-RuleViewModel"
                        }
                    },
                    "logicExpressions": {
                        "description": "[Optional] The GSL logic expressions of the exclusion.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(severity like '(informational|low|medium|high|critical)')|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rulesetId": {
                        "format": "int64",
                        "description": "Ruleset ID to apply exclusion on.",
                        "type": "integer"
                    },
                    "cloudAccountIds": {
                        "description": "[Optional] List of cloud account IDs to apply exclusion on.\r\nIf neither cloud account IDs nor organizational unit IDs are supplied, exclusion will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "comment": {
                        "description": "Comment text (free text)",
                        "type": "string"
                    },
                    "cloudBots": {
                        "description": "Cloud bots execution expressions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "organizationalUnitIds": {
                        "description": "[Optional] List of organizational unit IDs to apply exclusion on.\r\nIf neither organizational unit IDs nor cloud account IDs are supplied, exclusion will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Falconetix-Model-DateTimeRange",
                        "description": "[Optional] Effective date range for the exclusion.\r\nLeaving 'From' null will take only 'To' into account.\r\nLeaving 'To' null will take only 'From' into account.\r\nDateRange with both 'From' and 'To' null will be disregarded."
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryStatsV2ViewModel": {
                "type": "object",
                "properties": {
                    "passed": {
                        "format": "int32",
                        "description": "number of passed rules",
                        "type": "integer"
                    },
                    "passedRulesBySeverity": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-StatsBySeverityViewModel",
                        "description": "passed rules divided by severity"
                    },
                    "failed": {
                        "format": "int32",
                        "description": "number of failed rules",
                        "type": "integer"
                    },
                    "failedRulesBySeverity": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-StatsBySeverityViewModel",
                        "description": "failed rules divided by severity"
                    },
                    "error": {
                        "format": "int32",
                        "description": "number of errors",
                        "type": "integer"
                    },
                    "failedTests": {
                        "format": "int32",
                        "description": "number of failed tests (entities) - same entity will be counted multiple times if it is relevant for multiple failed tests)",
                        "type": "integer"
                    },
                    "logicallyTested": {
                        "format": "int32",
                        "description": "Total number of tests performed",
                        "type": "integer"
                    },
                    "failedEntities": {
                        "format": "int32",
                        "description": "number of failed entities. (Distinct count of the entities - no duplications)",
                        "type": "integer"
                    },
                    "excludedTests": {
                        "format": "int32",
                        "description": "number of excluded tests",
                        "type": "integer"
                    },
                    "excludedFailedTests": {
                        "format": "int32",
                        "description": "number of excluded tests that also failed",
                        "type": "integer"
                    },
                    "excludedRules": {
                        "format": "int32",
                        "description": "number of rules that contains only excluded tests",
                        "type": "integer"
                    },
                    "excludedRulesBySeverity": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-StatsBySeverityViewModel",
                        "description": "excluded rules divided by severity"
                    },
                    "failedTestsBySeverity": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-StatsBySeverityViewModel",
                        "description": "Amount of failed tests (entities) divided by severity.\r\n(same entity will be counted multiple times if it is relevant for multiple failed tests)"
                    },
                    "totalRelevantTestsBySeverity": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-StatsBySeverityViewModel",
                        "description": "Amount of Relevant tests (entities) divided by severity.\r\n(same entity will be counted multiple times if it is relevant for multiple failed tests)"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryBundleResultV2ViewModel": {
                "type": "object",
                "properties": {
                    "isTemplate": {
                        "type": "boolean"
                    },
                    "id": {
                        "format": "int64",
                        "description": "the bundle id",
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    },
                    "name": {
                        "description": "the bundle name",
                        "type": "string"
                    },
                    "description": {
                        "description": "the bundle description",
                        "type": "string"
                    },
                    "CloudAccountId": {
                        "format": "uuid",
                        "description": "The  account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalCloudAccountId": {
                        "description": "account id on cloud provider (AWS, Azure, GCP)",
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "description": "account id on cloud provider (AWS, Azure, GCP)",
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "description": "the cloud provider (AWS/Azure/GCP)",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "requestId": {
                        "format": "uuid",
                        "description": "the assessment id (returned in the response)",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "shouldMinimizeResult": {
                        "description": "Minimized the entity results",
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-Compliance-Ruleset-RuleViewModel": {
                "required": [
                    "name",
                    "logic"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "rule name",
                        "type": "string"
                    },
                    "severity": {
                        "description": "rule severity (High/Medium/Low)",
                        "enum": [
                            "Informational",
                            "Low",
                            "Medium",
                            "High",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "rlmId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "logic": {
                        "description": "the GSL statement for the rule (text string)",
                        "type": "string"
                    },
                    "description": {
                        "description": "description of the rule (text)",
                        "type": "string"
                    },
                    "remediation": {
                        "description": "remediation text for the rule (text)",
                        "type": "string"
                    },
                    "cloudbots": {
                        "description": "the Cloudbots section for the rule (optional)",
                        "type": "string"
                    },
                    "complianceTag": {
                        "description": "the compliance section for the rule (optional)",
                        "type": "string"
                    },
                    "domain": {
                        "description": "this field is not used",
                        "type": "string"
                    },
                    "priority": {
                        "description": "this field is not used",
                        "type": "string"
                    },
                    "controlTitle": {
                        "description": "this field is not used",
                        "type": "string"
                    },
                    "ruleId": {
                        "description": "this field is not used",
                        "type": "string"
                    },
                    "category": {
                        "description": "Rule Category",
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logicHash": {
                        "description": "MD5 hash of the rule logic (serves as a unique ID for the rule), returned in response",
                        "type": "string"
                    },
                    "isDefault": {
                        "description": "The property represents default rule",
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-Exclusion-RuleViewModel": {
                "type": "object",
                "properties": {
                    "logicHash": {
                        "description": "Rule logic hash",
                        "pattern": "^[A-Za-z0-9+/]{22}?$",
                        "type": "string"
                    },
                    "id": {
                        "description": "Rule ID",
                        "type": "string"
                    },
                    "name": {
                        "description": "Rule name",
                        "type": "string"
                    },
                    "rlmId": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-DateTimeRange": {
                "type": "object",
                "properties": {
                    "from": {
                        "format": "date-time",
                        "description": "From date time",
                        "type": "string"
                    },
                    "to": {
                        "format": "date-time",
                        "description": "To date time",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-StatsBySeverityViewModel": {
                "type": "object",
                "properties": {
                    "informational": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "low": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "medium": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "high": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "critical": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-Compliance-AssessmentTrend-AssessmentTrendItemViewModel": {
                "type": "object",
                "properties": {
                    "assessmentDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "failedTests": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "totalTests": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "passedTests": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-AssessmentsRequestFilterViewModel": {
                "description": "Assessment Filter Model",
                "required": [
                    "cloudAccountBundleFilters"
                ],
                "type": "object",
                "properties": {
                    "cloudAccountBundleFilters": {
                        "description": "Cloud Account Filter Models",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-CloudAccountBundleFilterViewModel"
                        }
                    },
                    "from": {
                        "format": "date-time",
                        "description": "[OPTIONAL] Filter latest results that are later than this date.",
                        "type": "string"
                    },
                    "to": {
                        "format": "date-time",
                        "description": "[OPTIONAL] Filter latest results that are earlier than this date.",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-CloudAccountBundleFilterViewModel": {
                "description": "Filter model per cloud account type",
                "required": [
                    "bundleIds",
                    "cloudAccountIds"
                ],
                "type": "object",
                "properties": {
                    "bundleIds": {
                        "description": "Bundle IDs",
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "cloudAccountIds": {
                        "description": "Cloud Account IDs (GUIDs)",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "cloudAccountType": {
                        "description": "Cloud Account Type - \"Aws\", \"Azure\", \"Google\"",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryViewResultV2ViewModel": {
                "type": "object",
                "properties": {
                    "createdTime": {
                        "format": "date-time",
                        "description": "date of assessment",
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "description": "assessment id",
                        "type": "integer"
                    },
                    "assessmentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "triggeredBy": {
                        "description": "reason for assessment",
                        "enum": [
                            "Unknown",
                            "ContinuousCompliancePolicy",
                            "Manual",
                            "SystemBundle",
                            "Serverless",
                            "Logic",
                            "Magellan",
                            "KubernetesRuntimeAssurance",
                            "ContainersRuntimeProtection",
                            "ExternalFinding",
                            "CIEM",
                            "Incident",
                            "WorkloadChangeMonitoring"
                        ],
                        "type": "string"
                    },
                    "assessmentPassed": {
                        "description": "assessment result",
                        "type": "boolean"
                    },
                    "hasErrors": {
                        "description": "assessment has errors",
                        "type": "boolean"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryStatsV2ViewModel",
                        "description": "summary statistics for assessment"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryBundleResultV2ViewModel"
                    },
                    "hasDataSyncStatusIssues": {
                        "type": "boolean"
                    },
                    "comparisonCustomId": {
                        "type": "string"
                    },
                    "additionalFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-AssessmentHistoryMinimizedEntity": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vpc": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-VpcMinimizedEntity"
                    },
                    "network": {
                        "type": "string"
                    },
                    "virtualNetwork": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-TagRuleEntity"
                        }
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "vendorIdentifier": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-VpcMinimizedEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-TagRuleEntity": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-AssessmentExecutiveReport": {
                "type": "object",
                "properties": {
                    "date": {
                        "format": "date-time",
                        "description": "date of assessment",
                        "type": "string"
                    },
                    "rulesetName": {
                        "description": "bundle name",
                        "type": "string"
                    },
                    "vendor": {
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "numberOfEnvironments": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "topEnvironmentsWithHighSeverityFindings": {
                        "description": "Top 10 environments with high severity findings and number of findings for each environment",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-AssessmentExecutiveReportEnvironmentFinding"
                        }
                    },
                    "testedEntities": {
                        "description": "Entity name and number of entities in each category",
                        "type": "object",
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "failedTestedBySeverity": {
                        "type": "object",
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "passedPerEntityType": {
                        "type": "object",
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "failedPerEntityType": {
                        "type": "object",
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "allTestsScore": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-AssessmentData-TestsScore"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-AssessmentExecutiveReportEnvironmentFinding": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "countFindingsBySeverity": {
                        "type": "object",
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                }
            },
            "Falconetix-Model-RuleEngine-AssessmentData-TestsScore": {
                "type": "object",
                "properties": {
                    "tested": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "passed": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "failed": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-OrganizationalUnitAssessmentHistoryRequestModel": {
                "type": "object",
                "properties": {
                    "organizationalUnitIds": {
                        "description": "List of Organizational Units on which assessments were run",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "bundleIds": {
                        "description": "List of bundles (rulesets) run on the accounts in the Organizational Units",
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-OrganizationalUnitAssessmentHistoryViewModel": {
                "type": "object",
                "properties": {
                    "organizationalUnitPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "bundleId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "statistics": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-AssessmentHistoryStats"
                    },
                    "resultId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "resultDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "triggeredBy": {
                        "enum": [
                            "Unknown",
                            "ContinuousCompliancePolicy",
                            "Manual",
                            "SystemBundle",
                            "Serverless",
                            "Logic",
                            "Magellan",
                            "KubernetesRuntimeAssurance",
                            "ContainersRuntimeProtection",
                            "ExternalFinding",
                            "CIEM",
                            "Incident",
                            "WorkloadChangeMonitoring"
                        ],
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-AssessmentHistoryStats": {
                "type": "object",
                "properties": {
                    "passed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "passedRulesBySeverity": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-StatsBySeverity"
                    },
                    "logicallyTested": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "failed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "failedRulesBySeverity": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-StatsBySeverity"
                    },
                    "failedTests": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "error": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "failedEntities": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalEntities": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "excludedTests": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "excludedFailedTests": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "excludedRules": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "excludedRulesBySeverity": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-StatsBySeverity"
                    },
                    "failedTestsBySeverity": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-StatsBySeverity"
                    },
                    "totalRelevantTestsBySeverity": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-StatsBySeverity"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-StatsBySeverity": {
                "type": "object",
                "properties": {
                    "informational": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "low": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "medium": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "high": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "critical": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentViewsByTimeRangeRequest": {
                "required": [
                    "creationTime"
                ],
                "type": "object",
                "properties": {
                    "creationTime": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentViewsByTimeRangeRequest-CreationTimeFieldViewModel"
                    },
                    "pageSize": {
                        "format": "int32",
                        "description": "number of results in a page",
                        "maximum": 500,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "pageNumber": {
                        "format": "int32",
                        "description": "result page number to retrieve (results are grouped in pages, according to PageSize)",
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "requestId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "filterFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentViewsByTimeRangeRequest-FilterFieldViewModel"
                        }
                    },
                    "rulesetTypes": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "aws",
                                "hp",
                                "mellanox",
                                "awsgov",
                                "azure",
                                "google",
                                "awschina",
                                "azuregov",
                                "kubernetes",
                                "azurechina",
                                "terraform",
                                "generic",
                                "kubernetesruntimeassurance",
                                "shiftleft",
                                "sourcecodeassurance",
                                "imageassurance",
                                "alibaba",
                                "cft",
                                "containerregistry",
                                "ers",
                                "oci",
                                "ocigov",
                                "ocigovuk",
                                "CIEM"
                            ],
                            "type": "string"
                        }
                    },
                    "sorting": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentViewsByTimeRangeRequest-SortingFieldViewModel"
                    },
                    "hideCount": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentViewsByTimeRangeRequest-CreationTimeFieldViewModel": {
                "required": [
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "format": "date-time",
                        "description": "Starting time/date for assessments to be retrieved",
                        "type": "string"
                    },
                    "to": {
                        "format": "date-time",
                        "description": "End time/date for assessments to be retrieved",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentViewsByTimeRangeRequest-FilterFieldViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentViewsByTimeRangeRequest-SortingFieldViewModel": {
                "type": "object",
                "properties": {
                    "fieldName": {
                        "description": "field to sort the retrieved results",
                        "type": "string"
                    },
                    "direction": {
                        "format": "int32",
                        "description": "direction of sort",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessnentHistoryViewResultsTimeRangeViewModel": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryViewResultV2ViewModel"
                        }
                    },
                    "totalResultsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "pageNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "pageSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requestId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Models-AuditEntryViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "object"
                    },
                    "cell": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-Audit-ApiAuditResult": {
                "type": "object",
                "properties": {
                    "user_name": {
                        "type": "string"
                    },
                    "request_url": {
                        "type": "string"
                    },
                    "http_method": {
                        "type": "string"
                    },
                    "http_status": {
                        "type": "string"
                    },
                    "time": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "request_body": {
                        "type": "string"
                    },
                    "request_parameters": {
                        "type": "string"
                    },
                    "event_name": {
                        "type": "string"
                    },
                    "client_ip": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-Audit-SystemAuditResult": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "time": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "event_name": {
                        "type": "string"
                    },
                    "cloud_account_id": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-Audit-CountAuditResult": {
                "type": "object",
                "properties": {
                    "count": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Models-AuditViewModel": {
                "type": "object",
                "properties": {
                    "total": {
                        "format": "int32",
                        "description": "the number of pages in the view",
                        "type": "integer"
                    },
                    "page": {
                        "format": "int32",
                        "description": "the current page number",
                        "type": "integer"
                    },
                    "records": {
                        "format": "int64",
                        "description": "the total number of records (events) in all the pages",
                        "type": "integer"
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AuditEntryViewModel"
                        }
                    }
                }
            },
            "Auth-AssumeRoleViewModel": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "roleName": {
                        "type": "string"
                    },
                    "expirationInMin": {
                        "format": "int32",
                        "maximum": 300,
                        "minimum": 5,
                        "type": "integer"
                    }
                }
            },
            "Auth-ResetPasswordRequestViewModel": {
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "recaptchaResponse": {
                        "type": "string"
                    }
                }
            },
            "Auth-ResetPasswordByEmailRequestViewModel": {
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    }
                }
            },
            "Auth-ResetPasswordGetViewModel": {
                "required": [
                    "verificationToken"
                ],
                "type": "object",
                "properties": {
                    "verificationToken": {
                        "type": "string"
                    },
                    "mfa": {
                        "type": "boolean"
                    }
                }
            },
            "Auth-ResetPasswordPostViewModel": {
                "required": [
                    "requestId",
                    "verificationToken",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "requestId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "verificationToken": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "mfaCode": {
                        "type": "string"
                    }
                }
            },
            "Auth-ChangePasswordViewModel": {
                "required": [
                    "currentPassword",
                    "newPassword"
                ],
                "type": "object",
                "properties": {
                    "currentPassword": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudAccountRegionConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "region": {
                        "description": "[Required]  representation value for the AWS region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "description": "[Readonly] The region name",
                        "type": "string"
                    },
                    "hidden": {
                        "description": "[Deprecated]",
                        "type": "boolean"
                    },
                    "newGroupBehavior": {
                        "description": "[Required] The Protection Mode that  will apply to new security groups detected in the cloud account. <br /><strong>ReadOnly</strong> New Security Groups will be included in  in Read-Only mode, without changes to any of the rules<br /><strong>FullManage</strong> New Security Groups will be included in  in Full Protection mode, without changes to any of the rules<br /><strong>Reset</strong> New Security Groups will be included in  in Full Protection mode, and all inbound and outbound rules will be cleared",
                        "enum": [
                            "ReadOnly",
                            "FullManage",
                            "Reset"
                        ],
                        "type": "string"
                    }
                }
            },
            "Models-CloudAccountCredentialsViewModel": {
                "type": "object",
                "properties": {
                    "apikey": {
                        "description": "[Deprecated]",
                        "type": "string"
                    },
                    "arn": {
                        "description": "[Required] AWS Role ARN (to be assumed by  System)",
                        "type": "string"
                    },
                    "secret": {
                        "description": "[Required] The AWS role External ID ( System will have to use this secret in order to assume the role)",
                        "type": "string"
                    },
                    "iamUser": {
                        "description": "[Deprecated]",
                        "type": "string"
                    },
                    "type": {
                        "description": "[Required] The cloud account onbiarding method. Should be set to \"RoleBased\" as other methods are deprecated",
                        "enum": [
                            "UserBased",
                            "RoleBased"
                        ],
                        "type": "string"
                    },
                    "isReadOnly": {
                        "description": "[Readonly] The credential permission state.\r\nThis filed is determined based on the operation response status performed by  on the target AWS cloud account.",
                        "type": "boolean"
                    }
                }
            },
            "Models-AwsSyncNowResultViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "the AWS account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "description": "the account name",
                        "type": "string"
                    },
                    "externalAccountNumber": {
                        "description": "the AWS external account number",
                        "type": "string"
                    },
                    "workFlowId": {
                        "format": "uuid",
                        "description": "the AWS workflow id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Models-CloudAccountViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "[Readonly] The  id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "vendor": {
                        "description": "[Readonly] The cloud provider (AWS)",
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "description": "The cloud account name",
                        "type": "string"
                    },
                    "externalAccountNumber": {
                        "description": "[Readonly] The AWS account number",
                        "type": "string"
                    },
                    "error": {
                        "description": "[Readonly] credentials error status",
                        "type": "string"
                    },
                    "isFetchingSuspended": {
                        "description": "[Readonly] fetching suspending status",
                        "type": "boolean"
                    },
                    "creationDate": {
                        "format": "date-time",
                        "description": "[Readonly] account creation date",
                        "type": "string"
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/Models-CloudAccountCredentialsViewModel",
                        "description": "[Required] The information needed for  System in order to connect to the AWS cloud account"
                    },
                    "iamSafe": {
                        "$ref": "#/components/schemas/Models-CloudAccountIamSafeViewModel",
                        "description": "[Readonly] The IamSafety configuration of the AWS cloud account"
                    },
                    "netSec": {
                        "$ref": "#/components/schemas/Models-CloudAccountNetSecViewModel",
                        "description": "[Readonly] The network security configuration for the AWS cloud account."
                    },
                    "magellan": {
                        "description": "[Readonly] Flag to determine if Magellan is enabled/disabled for the account",
                        "type": "boolean"
                    },
                    "fullProtection": {
                        "description": "[Required] As part of the AWS account onboarding, the account security groups are imported. \r\nThis flag determines whether to enable Tamper Protection mode for those security groups.",
                        "type": "boolean"
                    },
                    "allowReadOnly": {
                        "description": "[Required] Determines the AWS cloud account operation mode.\r\nFor \"Manage\" set to true, for \"Readonly\" set to false.",
                        "type": "boolean"
                    },
                    "organizationId": {
                        "description": "The unique identifier (ID) of an AWS organization. E.g. 9w9xc7rq7p",
                        "type": "string"
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "organizationalUnitName": {
                        "type": "string"
                    },
                    "lambdaScanner": {
                        "description": "Flag indicating if lambda scanner is enabled/disabled for the account",
                        "type": "boolean"
                    },
                    "serverless": {
                        "$ref": "#/components/schemas/Models-SeverlessConfigViewModel"
                    },
                    "onboardingMode": {
                        "enum": [
                            "Undefined",
                            "Legacy",
                            "CloudGuardManaged",
                            "CustomerManaged"
                        ],
                        "type": "string"
                    }
                }
            },
            "Models-CloudAccountIamSafeViewModel": {
                "type": "object",
                "properties": {
                    "awsGroupArn": {
                        "type": "string"
                    },
                    "awsPolicyArn": {
                        "type": "string"
                    },
                    "mode": {
                        "enum": [
                            "OptIn",
                            "Mandatory"
                        ],
                        "type": "string"
                    },
                    "state": {
                        "enum": [
                            "Enabled",
                            "Disabled"
                        ],
                        "type": "string"
                    },
                    "excludedIamEntities": {
                        "$ref": "#/components/schemas/Models-CloudAccountIamSafeIamEntitiesViewModel"
                    },
                    "restrictedIamEntities": {
                        "$ref": "#/components/schemas/Models-CloudAccountIamSafeIamEntitiesViewModel"
                    }
                }
            },
            "Models-CloudAccountNetSecViewModel": {
                "type": "object",
                "properties": {
                    "regions": {
                        "description": "List of network security configuration per AWS region",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudAccountRegionConfigurationViewModel"
                        }
                    }
                }
            },
            "Models-SeverlessConfigViewModel": {
                "type": "object",
                "properties": {
                    "codeAnalyzerEnabled": {
                        "type": "boolean"
                    },
                    "codeDependencyAnalyzerEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "Models-CloudAccountIamSafeIamEntitiesViewModel": {
                "type": "object",
                "properties": {
                    "rolesArns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "usersArns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AwsAppSync-AwsAppSyncViewModel": {
                "type": "object",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "additionalAuthenticationProviders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncAdditionalAuthenticationProvider"
                        }
                    },
                    "arn": {
                        "type": "string"
                    },
                    "authenticationType": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncAuthenticationType"
                    },
                    "lambdaAuthorizerConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncLambdaAuthorizerConfig"
                    },
                    "logConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncLogConfig"
                    },
                    "name": {
                        "type": "string"
                    },
                    "openIDConnectConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncOpenIDConnectConfig"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "uris": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "userPoolConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncUserPoolConfig"
                    },
                    "wafWebAclArn": {
                        "type": "string"
                    },
                    "xrayEnabled": {
                        "type": "boolean"
                    },
                    "dataSources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncDataSource"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncAdditionalAuthenticationProvider": {
                "type": "object",
                "properties": {
                    "authenticationType": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncAuthenticationType"
                    },
                    "lambdaAuthorizerConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncLambdaAuthorizerConfig"
                    },
                    "openIDConnectConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncOpenIDConnectConfig"
                    },
                    "userPoolConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncUserPoolConfig"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncAuthenticationType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncLambdaAuthorizerConfig": {
                "type": "object",
                "properties": {
                    "authorizerResultTtlInSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "authorizerUri": {
                        "type": "string"
                    },
                    "identityValidationExpression": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncLogConfig": {
                "type": "object",
                "properties": {
                    "cloudWatchLogsRoleArn": {
                        "type": "string"
                    },
                    "excludeVerboseContent": {
                        "type": "boolean"
                    },
                    "fieldLogLevel": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncFieldLogLevel"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncOpenIDConnectConfig": {
                "type": "object",
                "properties": {
                    "authTTL": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "iatTTL": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "issuer": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncUserPoolConfig": {
                "type": "object",
                "properties": {
                    "appIdClientRegex": {
                        "type": "string"
                    },
                    "awsRegion": {
                        "type": "string"
                    },
                    "userPoolId": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncDataSource": {
                "type": "object",
                "properties": {
                    "dataSourceArn": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dynamodbConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncDynamodbDataSourceConfig"
                    },
                    "elasticsearchConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncElasticsearchConfig"
                    },
                    "httpConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncHttpConfig"
                    },
                    "lambdaConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncLambdaConfig"
                    },
                    "name": {
                        "type": "string"
                    },
                    "openSearchServiceConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncOpenSearchServiceConfig"
                    },
                    "relationalDatabaseConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncRelationalDatabaseConfig"
                    },
                    "serviceRoleArn": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncDataSourceType"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncFieldLogLevel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncDynamodbDataSourceConfig": {
                "type": "object",
                "properties": {
                    "awsRegion": {
                        "type": "string"
                    },
                    "deltaSyncConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncDeltaSyncConfig"
                    },
                    "tableName": {
                        "type": "string"
                    },
                    "useCallerCredentials": {
                        "type": "boolean"
                    },
                    "versioned": {
                        "type": "boolean"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncElasticsearchConfig": {
                "type": "object",
                "properties": {
                    "awsRegion": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncHttpConfig": {
                "type": "object",
                "properties": {
                    "authorizationConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncAuthorizationConfig"
                    },
                    "endpoint": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncLambdaConfig": {
                "type": "object",
                "properties": {
                    "lambdaFunctionArn": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncOpenSearchServiceConfig": {
                "type": "object",
                "properties": {
                    "awsRegion": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncRelationalDatabaseConfig": {
                "type": "object",
                "properties": {
                    "rdsHttpEndpointConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncRdsHttpEndpointConfig"
                    },
                    "relationalDatabaseSourceType": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncRelationalDatabaseSourceType"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncDataSourceType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncDeltaSyncConfig": {
                "type": "object",
                "properties": {
                    "baseTableTTL": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "deltaSyncTableName": {
                        "type": "string"
                    },
                    "deltaSyncTableTTL": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncAuthorizationConfig": {
                "type": "object",
                "properties": {
                    "authorizationType": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncAuthorizationType"
                    },
                    "awsIamConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AppSyncAwsIamConfig"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncRdsHttpEndpointConfig": {
                "type": "object",
                "properties": {
                    "awsRegion": {
                        "type": "string"
                    },
                    "awsSecretStoreArn": {
                        "type": "string"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "dbClusterIdentifier": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncRelationalDatabaseSourceType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncAuthorizationType": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AppSyncAwsIamConfig": {
                "type": "object",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "signingServiceName": {
                        "type": "string"
                    }
                }
            },
            "AwsConfigSetting-AwsConfigSettingsViewModel": {
                "type": "object",
                "properties": {
                    "recordingIsOn": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "allResourcesInRegionSupported": {
                        "type": "boolean"
                    },
                    "includeGlobalResourceTypes": {
                        "type": "boolean"
                    },
                    "resourceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "recordingStatus": {
                        "$ref": "#/components/schemas/AwsConfigSetting-AwsConfigSettingsRecorderStatusViewModel"
                    },
                    "deliveryChannel": {
                        "$ref": "#/components/schemas/AwsConfigSetting-AwsConfigSettingsDeliveryChannelViewModel"
                    },
                    "retentionPeriodInDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "AwsConfigSetting-AwsConfigSettingsRecorderStatusViewModel": {
                "type": "object",
                "properties": {
                    "lastErrorCode": {
                        "type": "string"
                    },
                    "lastErrorMessage": {
                        "type": "string"
                    },
                    "lastStartTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastStatus": {
                        "type": "string"
                    },
                    "lastStatusChangeTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastStopTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "recording": {
                        "type": "boolean"
                    }
                }
            },
            "AwsConfigSetting-AwsConfigSettingsDeliveryChannelViewModel": {
                "type": "object",
                "properties": {
                    "s3BucketName": {
                        "type": "string"
                    },
                    "s3KeyPrefix": {
                        "type": "string"
                    },
                    "snsTopicARN": {
                        "type": "string"
                    }
                }
            },
            "CloudCustomerGateway-AwsCustomerGatewayViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "bgpAsn": {
                        "type": "string"
                    },
                    "customerGatewayId": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "identity": {
                        "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-IdentityViewModel"
                    },
                    "logging": {
                        "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-LoggingViewModel"
                    },
                    "clusterName": {
                        "type": "string"
                    },
                    "resourcesVpcConfig": {
                        "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-ResourcesVpcConfigViewModel"
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "nodeGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-NodeGroupViewModel"
                        }
                    },
                    "fargateProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-FargateProfileViewModel"
                        }
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-IdentityViewModel": {
                "type": "object",
                "properties": {
                    "oidc": {
                        "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-OidcViewModel"
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-LoggingViewModel": {
                "type": "object",
                "properties": {
                    "clusterLogging": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-LoggingLogSetupViewModel"
                        }
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-ResourcesVpcConfigViewModel": {
                "type": "object",
                "properties": {
                    "clusterSecurityGroupId": {
                        "type": "string"
                    },
                    "endpointPrivateAccess": {
                        "type": "boolean"
                    },
                    "endpointPublicAccess": {
                        "type": "boolean"
                    },
                    "publicAccessCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string"
                    }
                }
            },
            "Shared-SharedViewModels-TagViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-NodeGroupViewModel": {
                "type": "object",
                "properties": {
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "scalingConfig": {
                        "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-NodegroupScalingConfigViewModel"
                    },
                    "resources": {
                        "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-NodegroupResourcesViewModel"
                    },
                    "remoteAccess": {
                        "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-RemoteAccessConfigViewModel"
                    },
                    "releaseVersion": {
                        "type": "string"
                    },
                    "nodeRole": {
                        "type": "string"
                    },
                    "nodegroupName": {
                        "type": "string"
                    },
                    "nodegroupArn": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "instanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "health": {
                        "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-NodegroupHealthViewModel"
                    },
                    "diskSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "clusterName": {
                        "type": "string"
                    },
                    "amiType": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-FargateProfileViewModel": {
                "type": "object",
                "properties": {
                    "clusterName": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "fargateProfileArn": {
                        "type": "string"
                    },
                    "fargateProfileName": {
                        "type": "string"
                    },
                    "podExecutionRoleArn": {
                        "type": "string"
                    },
                    "selectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-FargateProfileSelectorViewModel"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-OidcViewModel": {
                "type": "object",
                "properties": {
                    "issuer": {
                        "type": "string"
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-LoggingLogSetupViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-NodegroupScalingConfigViewModel": {
                "type": "object",
                "properties": {
                    "desiredSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minSize": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-NodegroupResourcesViewModel": {
                "type": "object",
                "properties": {
                    "autoScalingGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-AutoScalingGroupViewModel"
                        }
                    },
                    "remoteAccessSecurityGroup": {
                        "type": "string"
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-RemoteAccessConfigViewModel": {
                "type": "object",
                "properties": {
                    "ec2SshKey": {
                        "type": "string"
                    },
                    "sourceSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-NodegroupHealthViewModel": {
                "type": "object",
                "properties": {
                    "issues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEks-AwsEksClusterViewModel-IssueViewModel"
                        }
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-FargateProfileSelectorViewModel": {
                "type": "object",
                "properties": {
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "namespace": {
                        "type": "string"
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-AutoScalingGroupViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "AwsEks-AwsEksClusterViewModel-IssueViewModel": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "resourceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-AwsElasticIPViewModel": {
                "type": "object",
                "properties": {
                    "allocationId": {
                        "type": "string"
                    },
                    "associationId": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "networkInterfaceId": {
                        "type": "string"
                    },
                    "networkInterfaceOwnerId": {
                        "type": "string"
                    },
                    "privateIpAddress": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchDomainStatusViewModel": {
                "type": "object",
                "properties": {
                    "accessPolicies": {
                        "type": "string"
                    },
                    "advancedOptions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "arn": {
                        "type": "string"
                    },
                    "cognitoOptions": {
                        "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchCognitoOptionsViewModel"
                    },
                    "created": {
                        "type": "boolean"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "ebsOptions": {
                        "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchEBSOptionsViewModel"
                    },
                    "elasticsearchClusterConfig": {
                        "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchClusterConfigViewModel"
                    },
                    "elasticsearchVersion": {
                        "type": "string"
                    },
                    "encryptionAtRestOptions": {
                        "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchEncryptionAtRestOptionsViewModel"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "logPublishingOptions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchLogPublishingOptionViewModel"
                        }
                    },
                    "nodeToNodeEncryptionOptions": {
                        "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchNodeToNodeEncryptionOptionsViewModel"
                    },
                    "processing": {
                        "type": "boolean"
                    },
                    "serviceSoftwareOptions": {
                        "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchServiceSoftwareOptionsViewModel"
                    },
                    "snapshotOptions": {
                        "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchSnapshotOptionsViewModel"
                    },
                    "upgradeProcessing": {
                        "type": "boolean"
                    },
                    "vpcOptions": {
                        "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchVPCDerivedInfoViewModel"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchCognitoOptionsViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "identityPoolId": {
                        "type": "string"
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "userPoolId": {
                        "type": "string"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchEBSOptionsViewModel": {
                "type": "object",
                "properties": {
                    "ebsEnabled": {
                        "type": "boolean"
                    },
                    "iops": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "volumeSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "volumeType": {
                        "type": "string"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchClusterConfigViewModel": {
                "type": "object",
                "properties": {
                    "dedicatedMasterCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dedicatedMasterEnabled": {
                        "type": "boolean"
                    },
                    "dedicatedMasterType": {
                        "type": "string"
                    },
                    "instanceCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "zoneAwarenessConfig": {
                        "$ref": "#/components/schemas/AwsElasticsearch-AwsElasticsearchZoneAwarenessConfigViewModel"
                    },
                    "zoneAwarenessEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchEncryptionAtRestOptionsViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "kmsKeyId": {
                        "type": "string"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchLogPublishingOptionViewModel": {
                "type": "object",
                "properties": {
                    "cloudWatchLogsLogGroupArn": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchNodeToNodeEncryptionOptionsViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchServiceSoftwareOptionsViewModel": {
                "type": "object",
                "properties": {
                    "automatedUpdateDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "cancellable": {
                        "type": "boolean"
                    },
                    "currentVersion": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "newVersion": {
                        "type": "string"
                    },
                    "updateAvailable": {
                        "type": "boolean"
                    },
                    "updateStatus": {
                        "type": "string"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchSnapshotOptionsViewModel": {
                "type": "object",
                "properties": {
                    "automatedSnapshotStartHour": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchVPCDerivedInfoViewModel": {
                "type": "object",
                "properties": {
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string"
                    }
                }
            },
            "AwsElasticsearch-AwsElasticsearchZoneAwarenessConfigViewModel": {
                "type": "object",
                "properties": {
                    "availabilityZoneCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "AwsEmrCluster-AwsEmrClusterViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrApplicationViewModel"
                        }
                    },
                    "autoScalingRole": {
                        "type": "string"
                    },
                    "autoTerminate": {
                        "type": "boolean"
                    },
                    "configurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrConfigurationViewModel"
                        }
                    },
                    "customAmiId": {
                        "type": "string"
                    },
                    "ebsRootVolumeSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ec2InstanceAttributes": {
                        "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrEc2InstanceAttributesViewModel"
                    },
                    "instanceCollectionType": {
                        "type": "string"
                    },
                    "logUri": {
                        "type": "string"
                    },
                    "masterPublicDnsName": {
                        "type": "string"
                    },
                    "normalizedInstanceHours": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "releaseLabel": {
                        "type": "string"
                    },
                    "repoUpgradeOnBoot": {
                        "type": "string"
                    },
                    "requestedAmiVersion": {
                        "type": "string"
                    },
                    "runningAmiVersion": {
                        "type": "string"
                    },
                    "scaleDownBehavior": {
                        "type": "string"
                    },
                    "securityConfiguration": {
                        "type": "string"
                    },
                    "serviceRole": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrClusterStatusViewModel"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "terminationProtected": {
                        "type": "boolean"
                    },
                    "visibleToAllUsers": {
                        "type": "boolean"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrInstanceViewModel"
                        }
                    }
                }
            },
            "AwsEmrCluster-AwsEmrApplicationViewModel": {
                "type": "object",
                "properties": {
                    "additionalInfo": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "AwsEmrCluster-AwsEmrConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "classification": {
                        "type": "string"
                    },
                    "configurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrConfigurationViewModel"
                        }
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/System-Collections-Generic-KeyValuePair_System-String_System-String_"
                        }
                    }
                }
            },
            "AwsEmrCluster-AwsEmrEc2InstanceAttributesViewModel": {
                "type": "object",
                "properties": {
                    "additionalMasterSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "additionalSlaveSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ec2AvailabilityZone": {
                        "type": "string"
                    },
                    "ec2KeyName": {
                        "type": "string"
                    },
                    "ec2SubnetId": {
                        "type": "string"
                    },
                    "emrManagedMasterSecurityGroup": {
                        "type": "string"
                    },
                    "emrManagedSlaveSecurityGroup": {
                        "type": "string"
                    },
                    "iamInstanceProfile": {
                        "type": "string"
                    },
                    "requestedEc2AvailabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requestedEc2SubnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceAccessSecurityGroup": {
                        "type": "string"
                    }
                }
            },
            "AwsEmrCluster-AwsEmrClusterStatusViewModel": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string"
                    },
                    "stateChangeReason": {
                        "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrClusterStateChangeReasonViewModel"
                    },
                    "timeline": {
                        "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrClusterTimelineViewModel"
                    }
                }
            },
            "AwsEmrCluster-AwsEmrInstanceViewModel": {
                "type": "object",
                "properties": {
                    "ebsVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrEbsVolumeViewModel"
                        }
                    },
                    "ec2InstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceFleetId": {
                        "type": "string"
                    },
                    "instanceGroupId": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "market": {
                        "type": "string"
                    },
                    "privateDnsName": {
                        "type": "string"
                    },
                    "privateIpAddress": {
                        "type": "string"
                    },
                    "publicDnsName": {
                        "type": "string"
                    },
                    "publicIpAddress": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrInstanceStatusViewModel"
                    }
                }
            },
            "AwsEmrCluster-AwsEmrClusterStateChangeReasonViewModel": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "AwsEmrCluster-AwsEmrClusterTimelineViewModel": {
                "type": "object",
                "properties": {
                    "creationDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "endDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "readyDateTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "AwsEmrCluster-AwsEmrEbsVolumeViewModel": {
                "type": "object",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "volumeId": {
                        "type": "string"
                    }
                }
            },
            "AwsEmrCluster-AwsEmrInstanceStatusViewModel": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string"
                    },
                    "stateChangeReason": {
                        "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrInstanceStateChangeReasonViewModel"
                    },
                    "timeline": {
                        "$ref": "#/components/schemas/AwsEmrCluster-AwsEmrInstanceTimelineViewModel"
                    }
                }
            },
            "AwsEmrCluster-AwsEmrInstanceStateChangeReasonViewModel": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "AwsEmrCluster-AwsEmrInstanceTimelineViewModel": {
                "type": "object",
                "properties": {
                    "creationDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "endDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "readyDateTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsInspectorFindingsViewModel": {
                "type": "object",
                "properties": {
                    "findingArn": {
                        "type": "string"
                    },
                    "assessmentRunArn": {
                        "type": "string"
                    },
                    "rulesPackage": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsInspectorRulesPackageViewModel"
                    },
                    "agentId": {
                        "type": "string"
                    },
                    "assetType": {
                        "type": "string"
                    },
                    "creationTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "findingId": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "recommendation": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsInspectorRulesPackageViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsInspectorRunsViewModel": {
                "type": "object",
                "properties": {
                    "runArn": {
                        "type": "string"
                    },
                    "templateArn": {
                        "type": "string"
                    },
                    "runName": {
                        "type": "string"
                    },
                    "rulesPackages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsInspectorRulesPackageViewModel"
                        }
                    },
                    "durationInSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "findingsCount": {
                        "type": "object",
                        "properties": {
                            "high": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "medium": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "low": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "informational": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "creationTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "startTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "endTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Models-AwsLoadBalancersNetworkInterfacesViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "vpc": {
                        "type": "string"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scheme": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "canonicalHostedZoneId": {
                        "type": "string"
                    },
                    "ipAddressType": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AwsNetworkInterfaceViewModel"
                        }
                    }
                }
            },
            "Models-AwsNetworkInterfaceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "association": {
                        "$ref": "#/components/schemas/CloudNetworkInerfaces-CloudNetworkInterfaceAssociationViewModel",
                        "readOnly": true
                    },
                    "attachment": {
                        "$ref": "#/components/schemas/CloudNetworkInerfaces-CloudNetworkInterfaceAttachmentViewModel",
                        "readOnly": true
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudNetworkInerfaces-CloudNetworkInterfaceGroupIdentifierViewModel"
                        },
                        "readOnly": true
                    },
                    "interfaceType": {
                        "type": "string"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "networkInterfaceId": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "privateDnsName": {
                        "type": "string"
                    },
                    "privateIpAddress": {
                        "type": "string"
                    },
                    "privateIpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudNetworkInerfaces-CloudNetworkInterfacePrivateIpAddressViewModel"
                        },
                        "readOnly": true
                    },
                    "requesterId": {
                        "type": "string"
                    },
                    "requesterManaged": {
                        "type": "boolean"
                    },
                    "sourceDestCheck": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    }
                }
            },
            "CloudNetworkInerfaces-CloudNetworkInterfaceAssociationViewModel": {
                "type": "object",
                "properties": {
                    "allocationId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "associationId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ipOwnerId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "publicDnsName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "publicIp": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "CloudNetworkInerfaces-CloudNetworkInterfaceAttachmentViewModel": {
                "type": "object",
                "properties": {
                    "attachmentId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "attachTime": {
                        "format": "date-time",
                        "type": "string",
                        "readOnly": true
                    },
                    "deleteOnTermination": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "deviceIndex": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "instanceId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "instanceOwnerId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "CloudNetworkInerfaces-CloudNetworkInterfaceGroupIdentifierViewModel": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "groupName": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "CloudNetworkInerfaces-CloudNetworkInterfacePrivateIpAddressViewModel": {
                "type": "object",
                "properties": {
                    "association": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsEc2NetworkInterfaceAssociation",
                        "readOnly": true
                    },
                    "primary": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "privateDnsName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "privateIpAddress": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsEc2NetworkInterfaceAssociation": {
                "type": "object",
                "properties": {
                    "allocationId": {
                        "type": "string"
                    },
                    "associationId": {
                        "type": "string"
                    },
                    "ipOwnerId": {
                        "type": "string"
                    },
                    "publicDnsName": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    }
                }
            },
            "AwsOrganizationViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "unitPath": {
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "organizationType": {
                        "enum": [
                            "Root",
                            "Account",
                            "Unit"
                        ],
                        "type": "string"
                    },
                    "organizationPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Organizations-AwsOrganizationPolicyViewModel"
                        }
                    }
                }
            },
            "Organizations-AwsOrganizationPolicyViewModel": {
                "type": "object",
                "properties": {
                    "policyDocument": {
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "awsManaged": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "summaryType": {
                        "type": "string"
                    }
                }
            },
            "AwsOrganizationAccountViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "ouPath": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "joinedMethod": {
                        "enum": [
                            "CREATED",
                            "INVITED"
                        ],
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "ACTIVE",
                            "SUSPENDED"
                        ],
                        "type": "string"
                    },
                    "organizationType": {
                        "enum": [
                            "Root",
                            "Account",
                            "Unit"
                        ],
                        "type": "string"
                    },
                    "organizationPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Organizations-AwsOrganizationPolicyViewModel"
                        }
                    },
                    "organizationTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Organizations-AwsOrganizationTagViewModel"
                        }
                    }
                }
            },
            "Organizations-AwsOrganizationTagViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "AwsQuickSight-AwsQuickSightAccountViewModel": {
                "type": "object",
                "properties": {
                    "accountName": {
                        "type": "string"
                    },
                    "defaultNamespace": {
                        "type": "string"
                    },
                    "edition": {
                        "type": "string"
                    },
                    "notificationEmail": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "publicSharingEnabled": {
                        "type": "boolean"
                    },
                    "terminationProtectionEnabled": {
                        "type": "boolean"
                    },
                    "ipRulesEnabled": {
                        "type": "boolean"
                    },
                    "ipRestrictionRuleMap": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsQuickSight-IpRestrictionRuleViewModel"
                        }
                    },
                    "Id": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                }
            },
            "AwsQuickSight-IpRestrictionRuleViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "AwsQuickSight-AwsQuickSightGroupViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "principalId": {
                        "type": "string"
                    },
                    "groupMemberList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsQuickSight-QuickSightGroupMemberViewModel"
                        }
                    },
                    "Id": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                }
            },
            "AwsQuickSight-QuickSightGroupMemberViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "memberName": {
                        "type": "string"
                    }
                }
            },
            "AwsQuickSight-AwsQuickSightUserViewModel": {
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "customPermissionsName": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "externalLoginFederationProviderType": {
                        "type": "string"
                    },
                    "externalLoginFederationProviderUrl": {
                        "type": "string"
                    },
                    "externalLoginId": {
                        "type": "string"
                    },
                    "identityType": {
                        "type": "string"
                    },
                    "principalId": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                }
            },
            "AwsQuickSight-AwsQuickSightVpcConnectionsViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "availabilityStatus": {
                        "type": "string"
                    },
                    "createdTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "dnsResolvers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lastUpdatedTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsQuickSight-NetworkInterfaceViewModel"
                        }
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcConnectionId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsSecurityGroup-AwsSecurityGroupViewModel"
                        }
                    },
                    "role": {
                        "$ref": "#/components/schemas/Models-CloudIamRoleViewModel"
                    }
                }
            },
            "AwsQuickSight-NetworkInterfaceViewModel": {
                "type": "object",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "networkInterfaceId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "AwsSecurityGroup-AwsSecurityGroupViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "regionId": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "securityGroupName": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudIamRoleViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "srl": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "createDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "maxSessionDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "roleLastUsed": {
                        "$ref": "#/components/schemas/CloudIamRoles-AwsIamRoleLastUsedViewModel"
                    },
                    "attachedManagedPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudIamRoles-AwsIamRolePolicyViewModel"
                        }
                    },
                    "inlinePolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudIamRoles-CloudIamRoleInlinePolicyViewModel"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "rolePermissionsBoundary": {
                        "$ref": "#/components/schemas/Models-CloudIamRoleViewModel-PermissionsBoundary"
                    },
                    "assumeRolePolicy": {
                        "type": "object"
                    }
                }
            },
            "CloudIamRoles-AwsIamRoleLastUsedViewModel": {
                "type": "object",
                "properties": {
                    "roleLastUsed": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                }
            },
            "CloudIamRoles-AwsIamRolePolicyViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CloudIamRoles-CloudIamRoleInlinePolicyViewModel": {
                "type": "object",
                "properties": {
                    "policyName": {
                        "type": "string"
                    },
                    "policyDocument": {
                        "type": "object"
                    }
                }
            },
            "Models-CloudIamRoleViewModel-PermissionsBoundary": {
                "type": "object",
                "properties": {
                    "permissionsBoundaryArn": {
                        "type": "string"
                    },
                    "permissionsBoundaryType": {
                        "type": "string"
                    }
                }
            },
            "AwsSageMaker-AwsSageMakerNotebookViewModel": {
                "type": "object",
                "properties": {
                    "acceleratorTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "additionalCodeRepositories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultCodeRepository": {
                        "type": "string"
                    },
                    "directInternetAccess": {
                        "type": "string"
                    },
                    "failureReason": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "networkInterfaceId": {
                        "type": "string"
                    },
                    "notebookInstanceArn": {
                        "type": "string"
                    },
                    "notebookInstanceLifecycleConfigName": {
                        "type": "string"
                    },
                    "notebookInstanceName": {
                        "type": "string"
                    },
                    "notebookInstanceStatus": {
                        "type": "string"
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "rootAccess": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "volumeSizeInGB": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-CloudSecurityGroupPolicyViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "securityGroupName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcName": {
                        "type": "string"
                    },
                    "regionId": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "type": "string"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "securityGroupId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "srl": {
                        "type": "string"
                    },
                    "inboundServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudSecurityGroupPolicyServiceViewModel"
                        }
                    },
                    "outboundServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudSecurityGroupPolicyServiceViewModel"
                        }
                    }
                }
            },
            "Models-CloudSecurityGroupPolicyServiceViewModel": {
                "required": [
                    "name",
                    "protocolType",
                    "openForAll"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "protocolType": {
                        "description": "Service Protocol",
                        "enum": [
                            "ALL",
                            "HOPOPT",
                            "ICMP",
                            "IGMP",
                            "GGP",
                            "IPV4",
                            "ST",
                            "TCP",
                            "CBT",
                            "EGP",
                            "IGP",
                            "BBN_RCC_MON",
                            "NVP2",
                            "PUP",
                            "ARGUS",
                            "EMCON",
                            "XNET",
                            "CHAOS",
                            "UDP",
                            "MUX",
                            "DCN_MEAS",
                            "HMP",
                            "PRM",
                            "XNS_IDP",
                            "TRUNK1",
                            "TRUNK2",
                            "LEAF1",
                            "LEAF2",
                            "RDP",
                            "IRTP",
                            "ISO_TP4",
                            "NETBLT",
                            "MFE_NSP",
                            "MERIT_INP",
                            "DCCP",
                            "ThreePC",
                            "IDPR",
                            "XTP",
                            "DDP",
                            "IDPR_CMTP",
                            "TPplusplus",
                            "IL",
                            "IPV6",
                            "SDRP",
                            "IPV6_ROUTE",
                            "IPV6_FRAG",
                            "IDRP",
                            "RSVP",
                            "GRE",
                            "DSR",
                            "BNA",
                            "ESP",
                            "AH",
                            "I_NLSP",
                            "SWIPE",
                            "NARP",
                            "MOBILE",
                            "TLSP",
                            "SKIP",
                            "ICMPV6",
                            "IPV6_NONXT",
                            "IPV6_OPTS",
                            "CFTP",
                            "SAT_EXPAK",
                            "KRYPTOLAN",
                            "RVD",
                            "IPPC",
                            "SAT_MON",
                            "VISA",
                            "IPCV",
                            "CPNX",
                            "CPHB",
                            "WSN",
                            "PVP",
                            "BR_SAT_MON",
                            "SUN_ND",
                            "WB_MON",
                            "WB_EXPAK",
                            "ISO_IP",
                            "VMTP",
                            "SECURE_VMTP",
                            "VINES",
                            "TTP",
                            "NSFNET_IGP",
                            "DGP",
                            "TCF",
                            "EIGRP",
                            "OSPFIGP",
                            "SPRITE_RPC",
                            "LARP",
                            "MTP",
                            "AX25",
                            "IPIP",
                            "MICP",
                            "SCC_SP",
                            "ETHERIP",
                            "ENCAP",
                            "GMTP",
                            "IFMP",
                            "PNNI",
                            "PIM",
                            "ARIS",
                            "SCPS",
                            "QNX",
                            "AN",
                            "IPCOMP",
                            "SNP",
                            "COMPAQ_PEER",
                            "IPX_IN_IP",
                            "VRRP",
                            "PGM",
                            "L2TP",
                            "DDX",
                            "IATP",
                            "STP",
                            "SRP",
                            "UTI",
                            "SMP",
                            "SM",
                            "PTP",
                            "ISIS",
                            "FIRE",
                            "CRTP",
                            "CRUDP",
                            "SSCOPMCE",
                            "IPLT",
                            "SPS",
                            "PIPE",
                            "SCTP",
                            "FC",
                            "RSVP_E2E_IGNORE",
                            "MOBILITY_HEADER",
                            "UDPLITE",
                            "MPLS_IN_IP",
                            "MANET",
                            "HIP",
                            "SHIM6",
                            "WESP",
                            "ROHC"
                        ],
                        "type": "string"
                    },
                    "port": {
                        "description": "indicates a port range",
                        "type": "string"
                    },
                    "openForAll": {
                        "description": "indicates the service is open to all ports",
                        "type": "boolean"
                    },
                    "scope": {
                        "description": "List of scopes for the service (CIDR / DNS / AWS Security group / IP List / Magic IP)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-WebApi-Models-ScopeElementViewModel"
                        }
                    },
                    "icmpType": {
                        "description": "/ ICMP type (when protocol is ICMP)",
                        "enum": [
                            "All",
                            "EchoReply",
                            "DestinationUnreachable",
                            "SourceQuench",
                            "Redirect",
                            "AlternateHostAddress",
                            "Echo",
                            "RouterAdvertisement",
                            "RouterSelection",
                            "TimeExceeded",
                            "ParameterProblem",
                            "Timestamp",
                            "TimestampReply",
                            "InformationRequest",
                            "InformationReply",
                            "AddressMaskRequest",
                            "AddressMaskReply",
                            "Traceroute",
                            "DatagramConversionError",
                            "MobileHostRedirect",
                            "IPv6WhereAreYou",
                            "IPv6IAmHere",
                            "MobileRegistrationRequest",
                            "MobileRegistrationReply",
                            "DomainNameRequest",
                            "DomainNameReply",
                            "SKIP",
                            "Photuris"
                        ],
                        "type": "string"
                    },
                    "icmpv6Type": {
                        "description": "ICMP V6 type (when protocol is ICMPV6)",
                        "enum": [
                            "All"
                        ],
                        "type": "string"
                    }
                }
            },
            "Falconetix-WebApi-Models-ScopeElementViewModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "CIDR",
                            "DNS",
                            "IPList",
                            "MagicIP",
                            "AWS",
                            "Tag",
                            "ASG",
                            "CIDRv6",
                            "PrefixList"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-CloudSecurityGroupProtectionModeChangeViewModel": {
                "required": [
                    "protectionMode"
                ],
                "type": "object",
                "properties": {
                    "protectionMode": {
                        "enum": [
                            "FullManage",
                            "ReadOnly"
                        ],
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudSecurityGroupServiceViewModel": {
                "required": [
                    "name",
                    "protocolType",
                    "openForAll"
                ],
                "type": "object",
                "properties": {
                    "inbound": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "protocolType": {
                        "description": "Service Protocol",
                        "enum": [
                            "ALL",
                            "HOPOPT",
                            "ICMP",
                            "IGMP",
                            "GGP",
                            "IPV4",
                            "ST",
                            "TCP",
                            "CBT",
                            "EGP",
                            "IGP",
                            "BBN_RCC_MON",
                            "NVP2",
                            "PUP",
                            "ARGUS",
                            "EMCON",
                            "XNET",
                            "CHAOS",
                            "UDP",
                            "MUX",
                            "DCN_MEAS",
                            "HMP",
                            "PRM",
                            "XNS_IDP",
                            "TRUNK1",
                            "TRUNK2",
                            "LEAF1",
                            "LEAF2",
                            "RDP",
                            "IRTP",
                            "ISO_TP4",
                            "NETBLT",
                            "MFE_NSP",
                            "MERIT_INP",
                            "DCCP",
                            "ThreePC",
                            "IDPR",
                            "XTP",
                            "DDP",
                            "IDPR_CMTP",
                            "TPplusplus",
                            "IL",
                            "IPV6",
                            "SDRP",
                            "IPV6_ROUTE",
                            "IPV6_FRAG",
                            "IDRP",
                            "RSVP",
                            "GRE",
                            "DSR",
                            "BNA",
                            "ESP",
                            "AH",
                            "I_NLSP",
                            "SWIPE",
                            "NARP",
                            "MOBILE",
                            "TLSP",
                            "SKIP",
                            "ICMPV6",
                            "IPV6_NONXT",
                            "IPV6_OPTS",
                            "CFTP",
                            "SAT_EXPAK",
                            "KRYPTOLAN",
                            "RVD",
                            "IPPC",
                            "SAT_MON",
                            "VISA",
                            "IPCV",
                            "CPNX",
                            "CPHB",
                            "WSN",
                            "PVP",
                            "BR_SAT_MON",
                            "SUN_ND",
                            "WB_MON",
                            "WB_EXPAK",
                            "ISO_IP",
                            "VMTP",
                            "SECURE_VMTP",
                            "VINES",
                            "TTP",
                            "NSFNET_IGP",
                            "DGP",
                            "TCF",
                            "EIGRP",
                            "OSPFIGP",
                            "SPRITE_RPC",
                            "LARP",
                            "MTP",
                            "AX25",
                            "IPIP",
                            "MICP",
                            "SCC_SP",
                            "ETHERIP",
                            "ENCAP",
                            "GMTP",
                            "IFMP",
                            "PNNI",
                            "PIM",
                            "ARIS",
                            "SCPS",
                            "QNX",
                            "AN",
                            "IPCOMP",
                            "SNP",
                            "COMPAQ_PEER",
                            "IPX_IN_IP",
                            "VRRP",
                            "PGM",
                            "L2TP",
                            "DDX",
                            "IATP",
                            "STP",
                            "SRP",
                            "UTI",
                            "SMP",
                            "SM",
                            "PTP",
                            "ISIS",
                            "FIRE",
                            "CRTP",
                            "CRUDP",
                            "SSCOPMCE",
                            "IPLT",
                            "SPS",
                            "PIPE",
                            "SCTP",
                            "FC",
                            "RSVP_E2E_IGNORE",
                            "MOBILITY_HEADER",
                            "UDPLITE",
                            "MPLS_IN_IP",
                            "MANET",
                            "HIP",
                            "SHIM6",
                            "WESP",
                            "ROHC"
                        ],
                        "type": "string"
                    },
                    "port": {
                        "description": "indicates a port range",
                        "type": "string"
                    },
                    "openForAll": {
                        "description": "indicates the service is open to all ports",
                        "type": "boolean"
                    },
                    "scope": {
                        "description": "List of scopes for the service (CIDR / DNS / AWS Security group / IP List / Magic IP)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-WebApi-Models-ScopeElementViewModel"
                        }
                    },
                    "icmpType": {
                        "description": "/ ICMP type (when protocol is ICMP)",
                        "enum": [
                            "All",
                            "EchoReply",
                            "DestinationUnreachable",
                            "SourceQuench",
                            "Redirect",
                            "AlternateHostAddress",
                            "Echo",
                            "RouterAdvertisement",
                            "RouterSelection",
                            "TimeExceeded",
                            "ParameterProblem",
                            "Timestamp",
                            "TimestampReply",
                            "InformationRequest",
                            "InformationReply",
                            "AddressMaskRequest",
                            "AddressMaskReply",
                            "Traceroute",
                            "DatagramConversionError",
                            "MobileHostRedirect",
                            "IPv6WhereAreYou",
                            "IPv6IAmHere",
                            "MobileRegistrationRequest",
                            "MobileRegistrationReply",
                            "DomainNameRequest",
                            "DomainNameReply",
                            "SKIP",
                            "Photuris"
                        ],
                        "type": "string"
                    },
                    "icmpv6Type": {
                        "description": "ICMP V6 type (when protocol is ICMPV6)",
                        "enum": [
                            "All"
                        ],
                        "type": "string"
                    }
                }
            },
            "Models-CloudSecurityGroupTagsChangeViewModel": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-CloudSecurityGroupBaseViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "securityGroupName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcName": {
                        "type": "string"
                    },
                    "regionId": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "type": "string"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-AwsSecurityGroupsIndexGroupViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcName": {
                        "type": "string"
                    },
                    "vpcTags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "regionId": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "awsAccountExternalId": {
                        "type": "string"
                    },
                    "awsAccountName": {
                        "type": "string"
                    },
                    "awsAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "alertsCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "instanceCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Onboarding-Requests-OnboardingConfigurationRequest": {
                "type": "object",
                "properties": {
                    "onboardType": {
                        "enum": [
                            "Simple",
                            "Advanced"
                        ],
                        "type": "string"
                    },
                    "fullProtection": {
                        "type": "boolean"
                    },
                    "cloudVendor": {
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "enableStackModify": {
                        "type": "boolean"
                    },
                    "postureManagementConfiguration": {
                        "$ref": "#/components/schemas/Falconetix-Model-Onboarding-PostureManagement-PostureManagementConfiguration"
                    },
                    "serverlessConfiguration": {
                        "$ref": "#/components/schemas/Falconetix-Model-Onboarding-Serverless-ServerlessConfiguration"
                    },
                    "intelligenceConfigurations": {
                        "$ref": "#/components/schemas/Falconetix-Model-Onboarding-Logic-IntelligenceConfigurations"
                    }
                }
            },
            "Falconetix-Model-Onboarding-PostureManagement-PostureManagementConfiguration": {
                "type": "object",
                "properties": {
                    "rulesets": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Falconetix-Model-Onboarding-Serverless-ServerlessConfiguration": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-Onboarding-Logic-IntelligenceConfigurations": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "rulesets": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Onboarding-ViewModel-AwsStackConfigViewModel": {
                "type": "object",
                "properties": {
                    "stackName": {
                        "type": "string"
                    },
                    "templateUrl": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Onboarding-ViewModel-Parameter"
                        }
                    },
                    "iamCapabilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Onboarding-ViewModel-Parameter": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Onboarding-ViewModel-OnboardingInfoViewModel": {
                "type": "object",
                "properties": {
                    "onboardingId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "initiatedUserName": {
                        "type": "string"
                    },
                    "initiatedUserId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "environmentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "environmentName": {
                        "type": "string"
                    },
                    "environmentExternalId": {
                        "type": "string"
                    },
                    "rootStackId": {
                        "type": "string"
                    },
                    "cftVersion": {
                        "type": "string"
                    },
                    "onboardingRequest": {
                        "$ref": "#/components/schemas/Onboarding-Requests-OnboardingConfigurationRequest"
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Onboarding-ViewModel-OnboardingStatus"
                        }
                    },
                    "intelligenceStackRegion": {
                        "type": "string"
                    }
                }
            },
            "Onboarding-ViewModel-OnboardingStatus": {
                "type": "object",
                "properties": {
                    "module": {
                        "type": "string"
                    },
                    "feature": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "stackStatus": {
                        "type": "string"
                    },
                    "stackMessage": {
                        "type": "string"
                    },
                    "remediationRecommendation": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsVpcEndpointViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "creationTimestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "policyDocument": {
                        "type": "string"
                    },
                    "routeTableIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "endpointServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-VpcEndpointServiceViewModel"
                        }
                    },
                    "state": {
                        "type": "string"
                    },
                    "vpcEndpointId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-VpcEndpointServiceViewModel": {
                "type": "object",
                "properties": {
                    "acceptanceRequired": {
                        "type": "boolean"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "baseEndpointDnsNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "managesVpcEndpoints": {
                        "type": "boolean"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "payerResponsibility": {
                        "type": "string"
                    },
                    "privateDnsName": {
                        "type": "string"
                    },
                    "privateDnsNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsPrivateDnsDetailsViewModel"
                        }
                    },
                    "privateDnsNameVerificationState": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsServiceTypeDetailViewModel"
                        }
                    },
                    "supportedIpAddressTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcEndpointPolicySupported": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-AwsPrivateDnsDetailsViewModel": {
                "type": "object",
                "properties": {
                    "privateDnsName": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsServiceTypeDetailViewModel": {
                "type": "object",
                "properties": {
                    "serviceType": {
                        "type": "string"
                    }
                }
            },
            "Azure-AnalysisService-AzureAnalysisServiceViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "$ref": "#/components/schemas/Models-AzureResourceGroupViewModel"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/Azure-AnalysisService-AzureAnalysisServicePropertiesViewModel"
                    },
                    "sku": {
                        "$ref": "#/components/schemas/Azure-AnalysisService-AzureAnalysisServiceSkuViewModel"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-AzureResourceGroupViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Azure-AnalysisService-AzureAnalysisServicePropertiesViewModel": {
                "type": "object",
                "properties": {
                    "asAdministrators": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "backupBlobContainerUri": {
                        "type": "string"
                    },
                    "ipV4FirewallSettings": {
                        "$ref": "#/components/schemas/Azure-AnalysisService-AzureAnalysisServiceIpV4FirewallSettingsViewModel"
                    },
                    "gatewayDetails": {
                        "$ref": "#/components/schemas/Azure-AnalysisService-AzureAnalysisServiceGatewayDetailsViewModel"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "querypoolConnectionMode": {
                        "type": "string"
                    },
                    "serverFullName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "Azure-AnalysisService-AzureAnalysisServiceSkuViewModel": {
                "type": "object",
                "properties": {
                    "capacity": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tier": {
                        "type": "string"
                    }
                }
            },
            "Azure-AnalysisService-AzureAnalysisServiceIpV4FirewallSettingsViewModel": {
                "type": "object",
                "properties": {
                    "enablePowerBIService": {
                        "type": "boolean"
                    },
                    "firewallRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-AnalysisService-AzureAnalysisServiceIPv4FirewallRuleViewModel"
                        }
                    }
                }
            },
            "Azure-AnalysisService-AzureAnalysisServiceGatewayDetailsViewModel": {
                "type": "object",
                "properties": {
                    "dmtsClusterUri": {
                        "type": "string"
                    },
                    "gatewayObjectId": {
                        "type": "string"
                    },
                    "gatewayResourceId": {
                        "type": "string"
                    }
                }
            },
            "Azure-AnalysisService-AzureAnalysisServiceIPv4FirewallRuleViewModel": {
                "type": "object",
                "properties": {
                    "firewallRuleName": {
                        "type": "string"
                    },
                    "rangeStart": {
                        "type": "string"
                    },
                    "rangeEnd": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-AzureApplicationGatewayViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "operationalState": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "vNetName": {
                        "type": "string"
                    },
                    "subnetName": {
                        "type": "string"
                    },
                    "subnetExternalId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "requestRoutingRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-RequestRoutingRulesViewModel"
                        }
                    },
                    "backendAddressPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-BackendAddressPoolViewModel"
                        }
                    },
                    "backendHttpSettingsCollection": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-BackendHttpSettingsCollectionViewModel"
                        }
                    },
                    "frontendIPConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-FrontendIPConfigurationViewModel"
                        }
                    },
                    "frontendPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-FrontendPortViewModel"
                        }
                    },
                    "gatewayIPConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-GatewayIPConfigurationViewModel"
                        }
                    },
                    "httpListeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-HttpListenerViewModel"
                        }
                    },
                    "probes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-ProbeViewModel"
                        }
                    },
                    "sku": {
                        "$ref": "#/components/schemas/Azure-ApplicationGateway-SkuViewModel"
                    },
                    "wafConfiguration": {
                        "$ref": "#/components/schemas/Azure-ApplicationGateway-WafConfigurationViewModel"
                    },
                    "urlPathMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-UrlPathMapViewModel"
                        }
                    },
                    "sslCertificates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-SslCertificateViewModel"
                        }
                    },
                    "sslProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-SslProfileViewModel"
                        }
                    },
                    "sslPolicyInListener": {
                        "$ref": "#/components/schemas/Azure-ApplicationGateway-SslPolicyViewModel"
                    },
                    "authenticationlCertificates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-AuthenticationlCertificateViewModel"
                        }
                    },
                    "diagnosticSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-DiagnosticSettings-DiagnosticSettingsViewModel"
                        }
                    }
                }
            },
            "Azure-ApplicationGateway-RequestRoutingRulesViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "backendAddressPoolExternalId": {
                        "type": "string"
                    },
                    "backendHttpSettingsExternalId": {
                        "type": "string"
                    },
                    "httpListnerExternalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "ruleType": {
                        "type": "string"
                    },
                    "urlPathMapId": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-BackendAddressPoolViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "backendIpConfigurations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "backendAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Azure-ApplicationGateway-BackendHttpSettingsCollectionViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "authenticationCertificatesIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cookieBasedAffinity": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "requestTimeout": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Azure-ApplicationGateway-FrontendIPConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateIPAddress": {
                        "type": "string"
                    },
                    "privateIPAllocationMethod": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "subneExternaltId": {
                        "type": "string"
                    },
                    "publicIPExternalId": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-FrontendPortViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "provisioningState": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-GatewayIPConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subnetExternalId": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-HttpListenerViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "frontendIPConfigurationExternalId": {
                        "type": "string"
                    },
                    "frontEndPortExternalId": {
                        "type": "string"
                    },
                    "hostName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "requireServerNameIndication": {
                        "type": "boolean"
                    },
                    "sslCertificateExternalId": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-ProbeViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "interval": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "timeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "unhealthyThreshold": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Azure-ApplicationGateway-SkuViewModel": {
                "type": "object",
                "properties": {
                    "capacity": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tier": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-WafConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "firewallMode": {
                        "type": "string"
                    },
                    "ruleSetType": {
                        "type": "string"
                    },
                    "ruleSetVersion": {
                        "type": "string"
                    },
                    "disabledRuleGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-DisabledRuleGroupViewModel"
                        }
                    }
                }
            },
            "Azure-ApplicationGateway-UrlPathMapViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "defaultBackendAddresPoolExternalId": {
                        "type": "string"
                    },
                    "defaultRedirectConfigurationExternalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "pathRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-ApplicationGateway-PathRuleViewModel"
                        }
                    }
                }
            },
            "Azure-ApplicationGateway-SslCertificateViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-SslProfileViewModel": {
                "type": "object",
                "properties": {
                    "trustedClientCertificates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-AzureNetworkSubResourceViewModel"
                        }
                    },
                    "sslPolicy": {
                        "$ref": "#/components/schemas/Azure-ApplicationGateway-SslPolicyViewModel"
                    },
                    "clientAuthConfiguration": {
                        "$ref": "#/components/schemas/Azure-ApplicationGateway-ClientAuthConfigurationViewModel"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "etag": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-SslPolicyViewModel": {
                "type": "object",
                "properties": {
                    "disabledSslProtocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "policyType": {
                        "type": "string"
                    },
                    "policyName": {
                        "type": "string"
                    },
                    "cipherSuites": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "minProtocolVersion": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-AuthenticationlCertificateViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    }
                }
            },
            "Azure-DiagnosticSettings-DiagnosticSettingsViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "eventHubAuthorizationRuleId": {
                        "type": "string"
                    },
                    "eventHubName": {
                        "type": "string"
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-DiagnosticSettings-LogAuditViewModel"
                        }
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-DiagnosticSettings-MetricAuditViewModel"
                        }
                    },
                    "storageAccount": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-DisabledRuleGroupViewModel": {
                "type": "object",
                "properties": {
                    "ruleGroupName": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                }
            },
            "Azure-ApplicationGateway-PathRuleViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "backendAddressPoolExternalId": {
                        "type": "string"
                    },
                    "backendHttpSettingsExternalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Azure-AzureNetworkSubResourceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Azure-ApplicationGateway-ClientAuthConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "verifyClientCertIssuerDN": {
                        "type": "boolean"
                    },
                    "verifyClientRevocation": {
                        "type": "string"
                    }
                }
            },
            "Azure-DiagnosticSettings-LogAuditViewModel": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "categoryGroup": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "retentionDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "retentionStatus": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-DiagnosticSettings-MetricAuditViewModel": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "retentionDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "retentionStatus": {
                        "type": "boolean"
                    },
                    "timeGrain": {
                        "type": "string"
                    }
                }
            },
            "Models-AzureApplicationSecurityGroupViewModel": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "CGN-Common-Model-CloudAccounts-Onboarding-AzureSimplifiedOnboardingExecCmdRequest": {
                "required": [
                    "activeBlades"
                ],
                "type": "object",
                "properties": {
                    "workflowId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "managementGroupIdOrTenantId": {
                        "type": "string"
                    },
                    "useCloudGuardManagedApp": {
                        "type": "boolean"
                    },
                    "validatePermission": {
                        "type": "boolean"
                    },
                    "appId": {
                        "type": "string"
                    },
                    "appName": {
                        "type": "string"
                    },
                    "accountType": {
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "activeBlades": {
                        "$ref": "#/components/schemas/CGN-Common-Model-CloudAccounts-Onboarding-Blades-Blades"
                    }
                }
            },
            "CGN-Common-Model-CloudAccounts-Onboarding-Blades-Blades": {
                "required": [
                    "awp",
                    "serverless",
                    "cdr",
                    "postureManagement"
                ],
                "type": "object",
                "properties": {
                    "awp": {
                        "$ref": "#/components/schemas/CGN-Common-Model-CloudAccounts-Onboarding-Blades-AwpConfiguration"
                    },
                    "serverless": {
                        "$ref": "#/components/schemas/CGN-Common-Model-CloudAccounts-Onboarding-Blades-ServerlessConfiguration"
                    },
                    "cdr": {
                        "$ref": "#/components/schemas/CGN-Common-Model-CloudAccounts-Onboarding-Blades-CdrConfiguration"
                    },
                    "postureManagement": {
                        "$ref": "#/components/schemas/CGN-Common-Model-CloudAccounts-Onboarding-Blades-PostureManagement"
                    }
                }
            },
            "CGN-Common-Model-CloudAccounts-Onboarding-Blades-AwpConfiguration": {
                "type": "object",
                "properties": {
                    "onboardingMode": {
                        "enum": [
                            "saas",
                            "inAccount",
                            "inAccountHub"
                        ],
                        "type": "string"
                    },
                    "centralizedSubscriptionId": {
                        "type": "string"
                    },
                    "withFunctionAppsScan": {
                        "type": "boolean"
                    },
                    "isEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "CGN-Common-Model-CloudAccounts-Onboarding-Blades-ServerlessConfiguration": {
                "type": "object",
                "properties": {
                    "isEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "CGN-Common-Model-CloudAccounts-Onboarding-Blades-CdrConfiguration": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-Common-Model-CloudAccounts-Onboarding-Blades-StorageAccount"
                        }
                    },
                    "isEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "CGN-Common-Model-CloudAccounts-Onboarding-Blades-PostureManagement": {
                "type": "object",
                "properties": {
                    "onboardingMode": {
                        "enum": [
                            "Read",
                            "Manage"
                        ],
                        "type": "string"
                    }
                }
            },
            "CGN-Common-Model-CloudAccounts-Onboarding-Blades-StorageAccount": {
                "type": "object",
                "properties": {
                    "storageId": {
                        "type": "string"
                    },
                    "logTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Azure-Accounts-AzureAccountOperationModeViewModel": {
                "required": [
                    "operationMode"
                ],
                "type": "object",
                "properties": {
                    "operationMode": {
                        "enum": [
                            "Read",
                            "Manage"
                        ],
                        "type": "string"
                    }
                }
            },
            "Models-AzureCloudAccountViewModel": {
                "description": "account details",
                "required": [
                    "subscriptionId",
                    "tenantId",
                    "credentials",
                    "operationMode"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "account id in ",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "description": "account name (in )",
                        "type": "string"
                    },
                    "subscriptionId": {
                        "description": "Azure subscription id",
                        "type": "string"
                    },
                    "managementGroupId": {
                        "description": "Azure management group id",
                        "type": "string"
                    },
                    "tenantId": {
                        "description": "Azure tenant id",
                        "type": "string"
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/Models-AzureAccountCredentialsViewModel",
                        "description": "Azure account credentials"
                    },
                    "operationMode": {
                        "description": " operation mode for the Azure account (Read-Only or Managed)",
                        "enum": [
                            "Read",
                            "Manage"
                        ],
                        "type": "string"
                    },
                    "error": {
                        "description": "Error status for the account onboarding process to ",
                        "type": "string"
                    },
                    "creationDate": {
                        "format": "date-time",
                        "description": "date Azure account was onboarded to a  account",
                        "type": "string"
                    },
                    "isMultiTenant": {
                        "description": "Indicates whether the cloud account is managed under a multi-tenant account",
                        "type": "boolean"
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "organizationalUnitName": {
                        "type": "string"
                    },
                    "vendor": {
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "onboardingManagementMethod": {
                        "enum": [
                            "Undefined",
                            "OrganizationOnboarding",
                            "DetachedFromOrganizationOnboarding",
                            "UnifiedOnboarding",
                            "SimplifiedOnboarding",
                            "ManualOnboarding"
                        ],
                        "type": "string"
                    },
                    "magellan": {
                        "type": "boolean"
                    }
                }
            },
            "Models-AzureAccountCredentialsViewModel": {
                "required": [
                    "clientId",
                    "clientPassword"
                ],
                "type": "object",
                "properties": {
                    "clientId": {
                        "description": "Azure account id",
                        "type": "string"
                    },
                    "clientPassword": {
                        "description": "Password for account",
                        "type": "string"
                    }
                }
            },
            "Azure-Accounts-AzureAccountNameModeViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Azure-Accounts-AzureCloudAccountCredentialsPutViewModel": {
                "required": [
                    "applicationId",
                    "applicationKey"
                ],
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "applicationKey": {
                        "type": "string"
                    }
                }
            },
            "Azure-CosmosDbAccount-AzureCosmosDbAccountViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/System-Collections-Generic-KeyValuePair_System-String_System-String_"
                        }
                    },
                    "documentEndpoint": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "consistencyPolicy": {
                        "$ref": "#/components/schemas/Azure-CosmosDbAccount-AzureCosmosDbConsistencyPolicyViewModel"
                    },
                    "defaultConsistencyLevel": {
                        "enum": [
                            "Eventual",
                            "Session",
                            "BoundedStaleness",
                            "Strong",
                            "ConsistentPrefix"
                        ],
                        "type": "string"
                    },
                    "readableReplications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-CosmosDbAccount-AzureCosmosDbLocationViewModel"
                        }
                    },
                    "writableReplications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-CosmosDbAccount-AzureCosmosDbLocationViewModel"
                        }
                    },
                    "databaseAccountOfferType": {
                        "enum": [
                            "Standard"
                        ],
                        "type": "string"
                    },
                    "ipRangeFilter": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Azure-CosmosDbAccount-AzureCosmosDbConsistencyPolicyViewModel": {
                "type": "object",
                "properties": {
                    "defaultConsistencyLevel": {
                        "enum": [
                            "Eventual",
                            "Session",
                            "BoundedStaleness",
                            "Strong",
                            "ConsistentPrefix"
                        ],
                        "type": "string"
                    },
                    "maxStalenessPrefix": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "maxIntervalInSeconds": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Azure-CosmosDbAccount-AzureCosmosDbLocationViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "locationName": {
                        "type": "string"
                    },
                    "documentEndpoint": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "failoverPriority": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-AzureAppServiceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "inner": {
                        "$ref": "#/components/schemas/Falconetix-Model-AppServiceSiteInnerViewModel"
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AppServiceFunctionsViewModel"
                        }
                    },
                    "applicationSettings": {
                        "$ref": "#/components/schemas/Falconetix-Model-AppServiceApplicationSettings"
                    }
                }
            },
            "Falconetix-Model-AppServiceSiteInnerViewModel": {
                "type": "object",
                "properties": {
                    "hostNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repositorySiteName": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enabledHostNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hostNameSslStates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AppServiceHostNameSslStateViewModel"
                        }
                    },
                    "serverFarmId": {
                        "type": "string"
                    },
                    "reserved": {
                        "type": "boolean"
                    },
                    "lastModifiedTimeUtc": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "clientCertEnabled": {
                        "type": "boolean"
                    },
                    "outboundIpAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "possibleOutboundIpAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "defaultHostName": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AppServiceFunctionsViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "functionAppId": {
                        "type": "string"
                    },
                    "scriptRootPathHref": {
                        "type": "string"
                    },
                    "scriptHref": {
                        "type": "string"
                    },
                    "configHref": {
                        "type": "string"
                    },
                    "secretsFileHref": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string"
                    },
                    "config": {
                        "type": "string"
                    },
                    "files": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "testData": {
                        "type": "string"
                    },
                    "testDataHref": {
                        "type": "string"
                    },
                    "invokeUrlTemplate": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-AppServiceApplicationSettings": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-AppServiceHostNameSslStateViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "sslState": {
                        "type": "string"
                    },
                    "virtualIP": {
                        "type": "string"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "toUpdate": {
                        "type": "boolean"
                    },
                    "hostType": {
                        "type": "string"
                    }
                }
            },
            "Azure-KeyVault-AzureKeyVaultViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "properties": {
                        "$ref": "#/components/schemas/Azure-KeyVault-PropertiesViewModel"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-KeyVault-KeyViewModel"
                        }
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-KeyVault-SecretViewModel"
                        }
                    },
                    "certificates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-KeyVault-CertificateViewModel"
                        }
                    },
                    "diagnosticSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-DiagnosticSettings-DiagnosticSettingsViewModel"
                        }
                    }
                }
            },
            "Azure-KeyVault-PropertiesViewModel": {
                "type": "object",
                "properties": {
                    "enabledForDeployment": {
                        "type": "boolean"
                    },
                    "enabledForDiskEncryption": {
                        "type": "boolean"
                    },
                    "enabledForTemplateDeployment": {
                        "type": "boolean"
                    },
                    "enableSoftDelete": {
                        "type": "boolean"
                    },
                    "sku": {
                        "type": "string"
                    },
                    "vaultUri": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "accessPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-KeyVault-AccessPolicyViewModel"
                        }
                    }
                }
            },
            "Azure-KeyVault-KeyViewModel": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "kid": {
                        "type": "string"
                    },
                    "managed": {
                        "type": "boolean"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "expires": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "notBefore": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "Azure-KeyVault-SecretViewModel": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "managed": {
                        "type": "boolean"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "expires": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "notBefore": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "Azure-KeyVault-CertificateViewModel": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "x509Thumbprint": {
                        "type": "string"
                    },
                    "certificatePolicy": {
                        "$ref": "#/components/schemas/Azure-KeyVault-CertificatePolicyViewModel"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "expires": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "notBefore": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "Azure-KeyVault-AccessPolicyViewModel": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/Azure-KeyVault-PermissionsViewModel"
                    }
                }
            },
            "Azure-KeyVault-CertificatePolicyViewModel": {
                "type": "object",
                "properties": {
                    "issuerName": {
                        "type": "string"
                    },
                    "certificateType": {
                        "type": "string"
                    },
                    "keyProperties": {
                        "$ref": "#/components/schemas/Azure-KeyVault-CertificatePolicyKeyPropertiesViewModel"
                    },
                    "lifeTimeActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-KeyVault-CertificatePolicyLifeTimeActionViewModel"
                        }
                    },
                    "secretContentType": {
                        "type": "string"
                    },
                    "x509CertificateProperties": {
                        "$ref": "#/components/schemas/Azure-KeyVault-CertificatePolicyX509PropertiesViewModel"
                    }
                }
            },
            "Azure-KeyVault-PermissionsViewModel": {
                "type": "object",
                "properties": {
                    "certificates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "storage": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Azure-KeyVault-CertificatePolicyKeyPropertiesViewModel": {
                "type": "object",
                "properties": {
                    "exportable": {
                        "type": "boolean"
                    },
                    "keySize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "keyType": {
                        "type": "string"
                    },
                    "reuseKey": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-KeyVault-CertificatePolicyLifeTimeActionViewModel": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "trigger": {
                        "type": "string"
                    },
                    "lifeTimeValue": {
                        "type": "string"
                    }
                }
            },
            "Azure-KeyVault-CertificatePolicyX509PropertiesViewModel": {
                "type": "object",
                "properties": {
                    "ekus": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keyUsage": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subject": {
                        "type": "string"
                    },
                    "dnsNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "identity": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterIdentityViewModel"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesPropertiesViewModel"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterIdentityViewModel": {
                "type": "object",
                "properties": {
                    "principalId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesPropertiesViewModel": {
                "type": "object",
                "properties": {
                    "aadProfile": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterAADProfileViewModel"
                    },
                    "addonProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/System-Collections-Generic-KeyValuePair_System-String_Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterAddonProfileViewModel_"
                        }
                    },
                    "agentPoolProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterAgentPoolProfileViewModel"
                        }
                    },
                    "apiServerAccessProfile": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterAPIServerAccessProfileViewModel"
                    },
                    "dnsPrefix": {
                        "type": "string"
                    },
                    "enablePodSecurityPolicy": {
                        "type": "boolean"
                    },
                    "enableRBAC": {
                        "type": "boolean"
                    },
                    "fqdn": {
                        "type": "string"
                    },
                    "kubernetesVersion": {
                        "type": "string"
                    },
                    "linuxProfile": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesContainerServiceLinuxProfileViewModel"
                    },
                    "maxAgentPools": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "networkProfile": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesContainerServiceNetworkProfileViewModel"
                    },
                    "nodeResourceGroup": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "servicePrincipalProfile": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterServicePrincipalProfileViewModel"
                    },
                    "windowsProfile": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterWindowsProfileViewModel"
                    },
                    "identityProfile": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterIdentityProfileViewModel"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterAADProfileViewModel": {
                "type": "object",
                "properties": {
                    "clientAppID": {
                        "type": "string"
                    },
                    "serverAppID": {
                        "type": "string"
                    },
                    "tenantID": {
                        "type": "string"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterAgentPoolProfileViewModel": {
                "type": "object",
                "properties": {
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "count": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "enableAutoScaling": {
                        "type": "boolean"
                    },
                    "enableNodePublicIP": {
                        "type": "boolean"
                    },
                    "maxCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxPods": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeTaints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "orchestratorVersion": {
                        "type": "string"
                    },
                    "osDiskSizeGB": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "osType": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "scaleSetEvictionPolicy": {
                        "type": "string"
                    },
                    "scaleSetPriority": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vmSize": {
                        "type": "string"
                    },
                    "vnetSubnetID": {
                        "type": "string"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterAPIServerAccessProfileViewModel": {
                "type": "object",
                "properties": {
                    "authorizedIPRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enablePrivateCluster": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesContainerServiceLinuxProfileViewModel": {
                "type": "object",
                "properties": {
                    "adminUsername": {
                        "type": "string"
                    },
                    "ssh": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesContainerServiceSshConfigurationViewModel"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesContainerServiceNetworkProfileViewModel": {
                "type": "object",
                "properties": {
                    "dnsServiceIP": {
                        "type": "string"
                    },
                    "dockerBridgeCidr": {
                        "type": "string"
                    },
                    "loadBalancerProfile": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel"
                    },
                    "loadBalancerSku": {
                        "type": "string"
                    },
                    "networkPlugin": {
                        "type": "string"
                    },
                    "networkPolicy": {
                        "type": "string"
                    },
                    "podCidr": {
                        "type": "string"
                    },
                    "serviceCidr": {
                        "type": "string"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterServicePrincipalProfileViewModel": {
                "type": "object",
                "properties": {
                    "clientId": {
                        "type": "string"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterWindowsProfileViewModel": {
                "type": "object",
                "properties": {
                    "adminUsername": {
                        "type": "string"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterIdentityProfileViewModel": {
                "type": "object",
                "properties": {
                    "kubeletidentity": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterKubeletIdentityViewModel"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterAddonProfileViewModel": {
                "type": "object",
                "properties": {
                    "config": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/System-Collections-Generic-KeyValuePair_System-String_System-String_"
                        }
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesContainerServiceSshConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "publicKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesContainerServiceSshConfigurationViewModel-ContainerServiceSshPublicKeyViewModel"
                        }
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel": {
                "type": "object",
                "properties": {
                    "effectiveOutboundIPs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel-ResourceReferenceViewModel"
                        }
                    },
                    "managedOutboundIPs": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel-AzureKubernetesManagedOutboundIPsViewModel"
                    },
                    "outboundIpPrefixes": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel-OutboundIPPrefixesViewModel"
                    },
                    "outboundIPs": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel-AzureKubernetesOutboundIPsViewModel"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterKubeletIdentityViewModel": {
                "type": "object",
                "properties": {
                    "clientId": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesContainerServiceSshConfigurationViewModel-ContainerServiceSshPublicKeyViewModel": {
                "type": "object",
                "properties": {
                    "keyData": {
                        "type": "string"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel-ResourceReferenceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel-AzureKubernetesManagedOutboundIPsViewModel": {
                "type": "object",
                "properties": {
                    "count": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel-OutboundIPPrefixesViewModel": {
                "type": "object",
                "properties": {
                    "publicIPPrefixes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel-ResourceReferenceViewModel"
                        }
                    }
                }
            },
            "Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel-AzureKubernetesOutboundIPsViewModel": {
                "type": "object",
                "properties": {
                    "publicIPs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterLoadBalancerProfileViewModel-ResourceReferenceViewModel"
                        }
                    }
                }
            },
            "Models-AzureLoadBalancerViewModel": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "loadBalancerType": {
                        "type": "string"
                    },
                    "virtualNetworkId": {
                        "type": "string"
                    },
                    "virtualNetworkName": {
                        "type": "string"
                    },
                    "backendAddressPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AzureBackendAddressPoolViewModel"
                        }
                    },
                    "healthProbes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AzureLoadBalancerProbeViewModel"
                        }
                    },
                    "inboundNatServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AzureInboundNatServiceViewModel"
                        }
                    },
                    "loadBalancingServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AzureLoadBalancingServiceViewModel"
                        }
                    },
                    "ipConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AzureIPConfigurationViewModel"
                        }
                    }
                }
            },
            "Models-AzureBackendAddressPoolViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "virtualMachines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-AzureLoadBalancerProbeViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "intervalInSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "unhealthyThreshold": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requestPath": {
                        "type": "string"
                    }
                }
            },
            "Models-AzureInboundNatServiceViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "virtualMachineTarget": {
                        "type": "string"
                    },
                    "backendPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frontendPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "enableFloatingIP": {
                        "type": "boolean"
                    }
                }
            },
            "Models-AzureLoadBalancingServiceViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "backendAddressPool": {
                        "type": "string"
                    },
                    "backendPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frontendPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "probe": {
                        "type": "string"
                    },
                    "idleTimeoutInMinutes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "loadDistribution": {
                        "type": "string"
                    },
                    "enableFloatingIP": {
                        "type": "boolean"
                    }
                }
            },
            "Models-AzureIPConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "publicIPAddress": {
                        "type": "string"
                    },
                    "publicIPAllocationMethod": {
                        "enum": [
                            "Unallocated",
                            "Dynamic",
                            "Static"
                        ],
                        "type": "string"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "privateIPAddress": {
                        "type": "string"
                    },
                    "privateIPAllocationMethod": {
                        "enum": [
                            "Unallocated",
                            "Dynamic",
                            "Static"
                        ],
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    }
                }
            },
            "Azure-Locks-AzureLockViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureLogicAppViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "provisioningState": {
                        "enum": [
                            "NotSpecified",
                            "Accepted",
                            "Running",
                            "Ready",
                            "Creating",
                            "Created",
                            "Deleting",
                            "Deleted",
                            "Canceled",
                            "Failed",
                            "Succeeded",
                            "Moving",
                            "Updating",
                            "Registering",
                            "Registered",
                            "Unregistering",
                            "Unregistered",
                            "Completed"
                        ],
                        "type": "string"
                    },
                    "createdTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "changedTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "state": {
                        "enum": [
                            "NotSpecified",
                            "Completed",
                            "Enabled",
                            "Disabled",
                            "Deleted",
                            "Suspended"
                        ],
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "accessEndpoint": {
                        "type": "string"
                    },
                    "definition": {
                        "type": "object"
                    },
                    "sku": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureLogicAppSkuViewModel"
                    },
                    "integrationAccount": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureLogicAppResourceReferenceViewModel"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Falconetix-Model-AzureLogicAppWorkflowParameterViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-AzureLogicAppSkuViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "enum": [
                            "NotSpecified",
                            "Free",
                            "Shared",
                            "Basic",
                            "Standard",
                            "Premium"
                        ],
                        "type": "string"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureLogicAppResourceReferenceViewModel"
                    }
                }
            },
            "Falconetix-Model-AzureLogicAppResourceReferenceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureLogicAppWorkflowParameterViewModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "value": {
                        "type": "object"
                    },
                    "metadata": {
                        "type": "object"
                    }
                }
            },
            "Azure-LogProfile-AzureLogProfileViewModel": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/Azure-LogProfile-AzureLogProfilePropertiesViewModel"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "resourceGroup": {
                        "type": "string"
                    }
                }
            },
            "Azure-LogProfile-AzureLogProfilePropertiesViewModel": {
                "type": "object",
                "properties": {
                    "storageAccountId": {
                        "type": "string"
                    },
                    "serviceBusRuleId": {
                        "type": "string"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "retentionPolicy": {
                        "$ref": "#/components/schemas/Azure-LogProfile-AzureLogProfileRetentionPolicyViewModel"
                    }
                }
            },
            "Azure-LogProfile-AzureLogProfileRetentionPolicyViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "string"
                    },
                    "days": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Azure-PolicyAssignment-AzurePolicyAssignmentViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "identity": {
                        "$ref": "#/components/schemas/Azure-AzureRestApiIdentityViewModel"
                    },
                    "sku": {
                        "$ref": "#/components/schemas/Azure-AzureRestApiSkuViewModel"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/Azure-PolicyAssignment-AzurePolicyAssignmentPropertiesViewModel"
                    }
                }
            },
            "Azure-AzureRestApiIdentityViewModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "principalId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    }
                }
            },
            "Azure-AzureRestApiSkuViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tier": {
                        "type": "string"
                    }
                }
            },
            "Azure-PolicyAssignment-AzurePolicyAssignmentPropertiesViewModel": {
                "type": "object",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "policyDefinitionId": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "notScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/Azure-PolicyAssignment-AzurePolicyAssignmentMetadataViewModel"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "Azure-PolicyAssignment-AzurePolicyAssignmentMetadataViewModel": {
                "type": "object",
                "properties": {
                    "assignedBy": {
                        "type": "string"
                    },
                    "createdOn": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedOn": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Azure-RedisCache-ViewModels-AzureRedisCacheViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "enableNonSslPort": {
                        "type": "boolean"
                    },
                    "hostName": {
                        "type": "string"
                    },
                    "linkedServersIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nonSslPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "redisConfiguration": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/System-Collections-Generic-KeyValuePair_System-String_System-String_"
                        }
                    },
                    "redisVersion": {
                        "type": "string"
                    },
                    "shardCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "sku": {
                        "$ref": "#/components/schemas/Azure-RedisCache-ViewModels-AzureSkuViewModel"
                    },
                    "sslPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "staticIP": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "tenantSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/System-Collections-Generic-KeyValuePair_System-String_System-String_"
                        }
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "firewallRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-RedisCache-ViewModels-AzureRedisFirewallRuleViewModel"
                        }
                    },
                    "linkedServers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-RedisCache-ViewModels-AzureRedisLinkedServerViewModel"
                        }
                    },
                    "scheduleUpdates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-RedisCache-ViewModels-AzureRedisScheduleEntryViewModel"
                        }
                    }
                }
            },
            "Azure-RedisCache-ViewModels-AzureSkuViewModel": {
                "type": "object",
                "properties": {
                    "capacity": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "family": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Azure-RedisCache-ViewModels-AzureRedisFirewallRuleViewModel": {
                "type": "object",
                "properties": {
                    "endIp": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "startIp": {
                        "type": "string"
                    }
                }
            },
            "Azure-RedisCache-ViewModels-AzureRedisLinkedServerViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "linkedRedisCacheId": {
                        "type": "string"
                    },
                    "linkedRedisCacheLocation": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "serverRole": {
                        "type": "string"
                    }
                }
            },
            "Azure-RedisCache-ViewModels-AzureRedisScheduleEntryViewModel": {
                "type": "object",
                "properties": {
                    "dayOfWeek": {
                        "type": "string"
                    },
                    "maintenanceWindow": {
                        "type": "string"
                    },
                    "startHourUtc": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Azure-RouteTable-AzureRouteTableViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "location": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-RouteTable-AzureRouteViewModel"
                        }
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "disableBgpRoutePropagation": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "provisioningState": {
                        "type": "string",
                        "readOnly": true
                    },
                    "etag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "resourceGroup": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Azure-RouteTable-AzureRouteViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "etag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "addressPrefix": {
                        "type": "string",
                        "readOnly": true
                    },
                    "nextHopIpAddress": {
                        "type": "string",
                        "readOnly": true
                    },
                    "nextHopType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "provisioningState": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Models-AzureSecurityGroupViewModel": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "services": {
                        "type": "object",
                        "properties": {
                            "inbound": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-AzureSecurityGroupServiceViewModel"
                                }
                            },
                            "outbound": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-AzureSecurityGroupServiceViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "Models-AzureSecurityGroupServiceViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "access": {
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "type": "string"
                    },
                    "direction": {
                        "enum": [
                            "Inbound",
                            "Outbound"
                        ],
                        "type": "string"
                    },
                    "priority": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "sourceAddressPrefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourcePortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destinationAddressPrefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destinationPortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isDefault": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyGetViewModel": {
                "required": [
                    "cloudAccountId",
                    "name",
                    "region",
                    "resourceGroup"
                ],
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Policy id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalSecurityGroupId": {
                        "description": "Internal use only",
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": " account id",
                        "type": "integer"
                    },
                    "cloudAccountName": {
                        "description": "Azure cloud account name",
                        "type": "string"
                    },
                    "lastUpdatedBy": {
                        "type": "boolean"
                    },
                    "error": {
                        "$ref": "#/components/schemas/Azure-AzureErrorStateViewModel"
                    },
                    "inboundServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyServiceGetViewModel"
                        }
                    },
                    "outboundServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyServiceGetViewModel"
                        }
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "Cloud account id for policy",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "description": "policy name",
                        "type": "string"
                    },
                    "description": {
                        "description": "policy description",
                        "type": "string"
                    },
                    "region": {
                        "description": "policy region",
                        "type": "string"
                    },
                    "resourceGroup": {
                        "description": "Azure resource group name",
                        "type": "string"
                    },
                    "isTamperProtected": {
                        "description": "policy is tamper protected",
                        "type": "boolean"
                    }
                }
            },
            "Azure-AzureErrorStateViewModel": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                }
            },
            "Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyServiceGetViewModel": {
                "required": [
                    "name",
                    "priority",
                    "access",
                    "protocol",
                    "sourceScopes",
                    "destinationScopes"
                ],
                "type": "object",
                "properties": {
                    "direction": {
                        "description": "Service direction (Inbound / Outbound)",
                        "type": "string"
                    },
                    "name": {
                        "description": "Service name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Service description",
                        "type": "string"
                    },
                    "priority": {
                        "format": "int32",
                        "description": "Service priority (a number between 100 and 4096)",
                        "type": "integer"
                    },
                    "access": {
                        "description": "Service access (Allow / Deny)",
                        "type": "string"
                    },
                    "protocol": {
                        "description": "Service protocol (UDP / TCP / ANY)",
                        "type": "string"
                    },
                    "sourcePortRanges": {
                        "description": "Source port ranges",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourceScopes": {
                        "description": "List of source scopes for the service (CIDR / IP List / Tag)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-WebApi-Models-ScopeElementViewModel"
                        }
                    },
                    "destinationPortRanges": {
                        "description": "Destination port ranges",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destinationScopes": {
                        "description": "List of destination scopes for the service (CIDR / IP List / Tag)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-WebApi-Models-ScopeElementViewModel"
                        }
                    },
                    "isDefault": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyPostViewModel": {
                "required": [
                    "cloudAccountId",
                    "name",
                    "region",
                    "resourceGroup"
                ],
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "inboundServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyServiceViewModel"
                        }
                    },
                    "outboundServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyServiceViewModel"
                        }
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "Cloud account id for policy",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "description": "policy name",
                        "type": "string"
                    },
                    "description": {
                        "description": "policy description",
                        "type": "string"
                    },
                    "region": {
                        "description": "policy region",
                        "type": "string"
                    },
                    "resourceGroup": {
                        "description": "Azure resource group name",
                        "type": "string"
                    },
                    "isTamperProtected": {
                        "description": "policy is tamper protected",
                        "type": "boolean"
                    }
                }
            },
            "Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyServiceViewModel": {
                "required": [
                    "name",
                    "priority",
                    "access",
                    "protocol",
                    "sourceScopes",
                    "destinationScopes"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Service name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Service description",
                        "type": "string"
                    },
                    "priority": {
                        "format": "int32",
                        "description": "Service priority (a number between 100 and 4096)",
                        "type": "integer"
                    },
                    "access": {
                        "description": "Service access (Allow / Deny)",
                        "type": "string"
                    },
                    "protocol": {
                        "description": "Service protocol (UDP / TCP / ANY)",
                        "type": "string"
                    },
                    "sourcePortRanges": {
                        "description": "Source port ranges",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourceScopes": {
                        "description": "List of source scopes for the service (CIDR / IP List / Tag)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-WebApi-Models-ScopeElementViewModel"
                        }
                    },
                    "destinationPortRanges": {
                        "description": "Destination port ranges",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destinationScopes": {
                        "description": "List of destination scopes for the service (CIDR / IP List / Tag)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-WebApi-Models-ScopeElementViewModel"
                        }
                    },
                    "isDefault": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-SecurityGroupPolicy-ViewModels-AzureSgPolicyStatsViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Policy id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "description": "Policy name",
                        "type": "string"
                    },
                    "resourceGroup": {
                        "description": "Azure resource group name",
                        "type": "string"
                    },
                    "region": {
                        "description": "Region in which the policy is defined",
                        "type": "string"
                    },
                    "cloudAccountName": {
                        "description": "Azure cloud account name",
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "Azure cloud account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "isTamperProtected": {
                        "description": "Tamper protection is enabled for the policy",
                        "type": "boolean"
                    },
                    "alertsCount": {
                        "format": "int32",
                        "description": "The number of alerts opened on the policy",
                        "type": "integer"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-AzureSqlDbViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "collation": {
                        "type": "string"
                    },
                    "containmentState": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "creationDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "azureDatabaseId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "defaultSecondaryLocation": {
                        "type": "string"
                    },
                    "earliestRestoreDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "edition": {
                        "type": "string"
                    },
                    "maxSizeBytes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "readScale": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "sqlServer": {
                        "type": "string"
                    },
                    "transparentDataEncryption": {
                        "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-TransparentDataEncryptionViewModel"
                    },
                    "securityAleryPolicy": {
                        "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-SecurityAleryPolicyViewModel"
                    },
                    "blobAuditingPolicy": {
                        "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-BlobAuditingPolicyViewModel"
                    },
                    "dataMaskingRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-DataMaskingRuleViewModel"
                        }
                    },
                    "backupLongTermRetentionPolicy": {
                        "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-BackupLongTermRetentionPolicyViewModel"
                    },
                    "protectionPolicyResource": {
                        "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-ProtectionPolicyResourceViewModel"
                    },
                    "geoBackupPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-GeoBackupPolicyViewModel"
                        }
                    },
                    "replicationLinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-ReplicationLinkViewModel"
                        }
                    }
                }
            },
            "Azure-SqlServers-ViewModels-TransparentDataEncryptionViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-SecurityAleryPolicyViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "disabledAlerts": {
                        "type": "string"
                    },
                    "emailAccountAdmins": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "emailAddresses": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "retentionDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "storageAccountAccessKey": {
                        "type": "string"
                    },
                    "storageEndpoint": {
                        "type": "string"
                    },
                    "useServerDefault": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-BlobAuditingPolicyViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "auditActionsAndGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isStorageSecondaryKeyInUse": {
                        "type": "boolean"
                    },
                    "retentionDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "storageAccountAccessKey": {
                        "type": "string"
                    },
                    "storageAccountSubscriptionId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "storageEndpoint": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-DataMaskingRuleViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "columnName": {
                        "type": "string"
                    },
                    "dataMaskingRuleId": {
                        "type": "string"
                    },
                    "maskingFunction": {
                        "type": "string"
                    },
                    "numberFrom": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "numberTo": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "replacementString": {
                        "type": "string"
                    },
                    "suffix": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "schemaName": {
                        "type": "string"
                    },
                    "tableName": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-BackupLongTermRetentionPolicyViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "recoveryServicesBackupPolicyResourceId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-ProtectionPolicyResourceViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "retentionPolicyType": {
                        "type": "string"
                    },
                    "retentionPolicyDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "retentionPolicyDurationType": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-GeoBackupPolicyViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-ReplicationLinkViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "isTerminationAllowed": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "partnerDatabase": {
                        "type": "string"
                    },
                    "partnerRegion": {
                        "type": "string"
                    },
                    "partnerRole": {
                        "type": "string"
                    },
                    "percentComplete": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "replicationMode": {
                        "type": "string"
                    },
                    "replicationState": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-AzureSqlServerViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "state": {
                        "type": "string"
                    },
                    "administratorLogin": {
                        "type": "string"
                    },
                    "fullyQualifiedDomainName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-AzureSqlDbViewModel"
                        }
                    },
                    "firewallRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-FirewallRuleViewModel"
                        }
                    },
                    "elasticPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-ElasticPoolViewModel"
                        }
                    },
                    "virtualNetworkRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-VirtualNetworkRuleViewModel"
                        }
                    },
                    "activeDirectoryAdministrators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-AzureADAdministratorViewModel"
                        }
                    },
                    "serverKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-ServerKeyViewModel"
                        }
                    },
                    "encryptionProtectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-EncryptionProtectorViewModel"
                        }
                    },
                    "failoverGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-FailoverGroupViewModel"
                        }
                    },
                    "securityAleryPolicy": {
                        "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-SecurityAleryPolicyViewModel"
                    },
                    "blobAuditingPolicy": {
                        "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-BlobAuditingPolicyViewModel"
                    },
                    "isBillable": {
                        "type": "boolean"
                    },
                    "isRunning": {
                        "type": "boolean"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-FirewallRuleViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "startIpAddress": {
                        "type": "string"
                    },
                    "endIpAddress": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-ElasticPoolViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "databaseDtuMax": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "databaseDtuMin": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dtu": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "edition": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "storageInMB": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "zoneRedundant": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-VirtualNetworkRuleViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subnetExternalId": {
                        "type": "string"
                    },
                    "ignoreMissingVnetServiceEndpoint": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-AzureADAdministratorViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "sid": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "tenantId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-ServerKeyViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "creationDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "subRegion": {
                        "type": "string"
                    },
                    "serverKeyType": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-EncryptionProtectorViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "subRegion": {
                        "type": "string"
                    },
                    "serverKeyType": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "serverKeyName": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-FailoverGroupViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "databasesExternalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string"
                    },
                    "partnerServers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-SqlServers-ViewModels-PartnerServerViewModel"
                        }
                    },
                    "readOnlyEndpoint": {
                        "type": "string"
                    },
                    "readWriteEndpoint": {
                        "type": "string"
                    },
                    "failoverWithDataLossGracePeriodInMinutes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "replicationRole": {
                        "type": "string"
                    },
                    "replicationState": {
                        "type": "string"
                    }
                }
            },
            "Azure-SqlServers-ViewModels-PartnerServerViewModel": {
                "type": "object",
                "properties": {
                    "partnerServerExternalId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "replicationRole": {
                        "type": "string"
                    }
                }
            },
            "Azure-Storage-ViewModels-AzureStorageAccountViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdOn": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "customDomainName": {
                        "type": "string"
                    },
                    "customDomainUseSubDomain": {
                        "type": "boolean"
                    },
                    "enableHttpsTrafficOnly": {
                        "type": "boolean"
                    },
                    "encryption": {
                        "$ref": "#/components/schemas/Azure-Storage-ViewModels-AzureStorageAccountEncryptionViewModel"
                    },
                    "lastGeoFailoverTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "networkRuleSet": {
                        "$ref": "#/components/schemas/Azure-Storage-ViewModels-AzureStorageAccountNetworkRuleSetViewModel"
                    },
                    "primaryEndPoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-Storage-ViewModels-AzureStorageAccountEndPointViewModel"
                        }
                    },
                    "secondaryEndPoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-Storage-ViewModels-AzureStorageAccountEndPointViewModel"
                        }
                    },
                    "secondaryRegion": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "publicNetworkAccess": {
                        "type": "string"
                    },
                    "publicNetworkAccessAsDisplayedInPortal": {
                        "type": "string"
                    },
                    "statusOfPrimary": {
                        "type": "string"
                    },
                    "statusOfSecondary": {
                        "type": "string"
                    },
                    "performance": {
                        "type": "string"
                    },
                    "replication": {
                        "type": "string"
                    },
                    "blobSoftDeleteEnabled": {
                        "type": "boolean"
                    },
                    "advancedThreatProtectionEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-Storage-ViewModels-AzureStorageAccountEncryptionViewModel": {
                "type": "object",
                "properties": {
                    "keySource": {
                        "type": "string"
                    },
                    "keyVaultProperties": {
                        "$ref": "#/components/schemas/Azure-Storage-ViewModels-AzureStorageAccountKeyVaultPropertiesViewModel"
                    },
                    "servicesEncryption": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-Storage-ViewModels-AzureStorageAccountEncryptionServiceViewModel"
                        }
                    }
                }
            },
            "Azure-Storage-ViewModels-AzureStorageAccountNetworkRuleSetViewModel": {
                "type": "object",
                "properties": {
                    "bypass": {
                        "type": "string"
                    },
                    "defaultAction": {
                        "type": "string"
                    },
                    "ipRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-Storage-ViewModels-AzureStorageAccountIPRuleViewModel"
                        }
                    },
                    "virtualNetworkRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-Storage-ViewModels-AzureStorageAccountVirtualNetworkRuleViewModel"
                        }
                    }
                }
            },
            "Azure-Storage-ViewModels-AzureStorageAccountEndPointViewModel": {
                "type": "object",
                "properties": {
                    "service": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                }
            },
            "Azure-Storage-ViewModels-AzureStorageAccountKeyVaultPropertiesViewModel": {
                "type": "object",
                "properties": {
                    "keyName": {
                        "type": "string"
                    },
                    "keyVaultUri": {
                        "type": "string"
                    },
                    "keyVersion": {
                        "type": "string"
                    }
                }
            },
            "Azure-Storage-ViewModels-AzureStorageAccountEncryptionServiceViewModel": {
                "type": "object",
                "properties": {
                    "serviceType": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "lastEnabledTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Azure-Storage-ViewModels-AzureStorageAccountIPRuleViewModel": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "ipAddressOrRange": {
                        "type": "string"
                    }
                }
            },
            "Azure-Storage-ViewModels-AzureStorageAccountVirtualNetworkRuleViewModel": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "virtualNetworkResourceId": {
                        "type": "string"
                    }
                }
            },
            "Models-AzureSubnetViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "virtualNetworkId": {
                        "type": "string"
                    },
                    "virtualNetworkName": {
                        "type": "string"
                    },
                    "cidrBlock": {
                        "type": "string"
                    },
                    "networkSecurityGroup": {
                        "type": "string"
                    },
                    "routeTable": {
                        "type": "string"
                    }
                }
            },
            "Azure-User-AzureUserViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "userPrincipalName": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "userType": {
                        "type": "string"
                    },
                    "createdDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastPasswordChangeDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "passwordPolicies": {
                        "type": "string"
                    },
                    "userCredentialRegistionDetails": {
                        "$ref": "#/components/schemas/Azure-User-AzureUserCredentialViewModel"
                    },
                    "passwordProfile": {
                        "$ref": "#/components/schemas/Azure-User-AzureUserPasswordProfileViewModel"
                    },
                    "licenseAssignmentStates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-User-AzureUserLicenseAssignmentStatesViewModel"
                        }
                    }
                }
            },
            "Azure-User-AzureUserCredentialViewModel": {
                "type": "object",
                "properties": {
                    "isEnableToRegisterForSelfServicePasswordReset": {
                        "type": "boolean"
                    },
                    "isRegisterForSelfServicePasswordReset": {
                        "type": "boolean"
                    },
                    "isRegisterWithMfa": {
                        "type": "boolean"
                    },
                    "selfServicePasswordResetAuthMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Azure-User-AzureUserPasswordProfileViewModel": {
                "type": "object",
                "properties": {
                    "forceChangePasswordNextSignIn": {
                        "type": "boolean"
                    },
                    "forceChangePasswordNextSignInWithMfa": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-User-AzureUserLicenseAssignmentStatesViewModel": {
                "type": "object",
                "properties": {
                    "assignedByGroup": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    },
                    "skuId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "disabledPlans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-AzureVirtualMachineViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "virtualNetworkId": {
                        "type": "string"
                    },
                    "virtualNetworkName": {
                        "type": "string"
                    },
                    "isRunning": {
                        "type": "boolean"
                    },
                    "agent": {
                        "$ref": "#/components/schemas/CGN-Inventory-Azure-Model-WrapperModels-Compute-VirtualMachineAgent"
                    },
                    "disks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-Inventory-Azure-Model-WrapperModels-Compute-VirtualMachineDisk"
                        }
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AzureNetworkInterfaceViewModel"
                        }
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "machineImage": {
                        "$ref": "#/components/schemas/CGN-Inventory-Azure-Model-WrapperModels-Compute-MachineImage"
                    },
                    "virtualHardDiskUri": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isBillable": {
                        "type": "boolean"
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-VirtualMachineExtensionViewModel"
                        }
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vmId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "timeCreated": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Azure-Model-WrapperModels-Compute-VirtualMachineAgent": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/CGN-Inventory-Azure-Model-WrapperModels-Compute-VirtualMachineStatus"
                    },
                    "vmAgentVersion": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Azure-Model-WrapperModels-Compute-VirtualMachineDisk": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/CGN-Inventory-Azure-Model-WrapperModels-Compute-VirtualMachineStatus"
                    },
                    "encryptionSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-Inventory-Azure-Model-WrapperModels-Compute-VirtualMachineDiskEncryptionSettings"
                        }
                    }
                }
            },
            "Models-AzureNetworkInterfaceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "dnsSettings": {
                        "$ref": "#/components/schemas/Models-AzureNetworkInterfaceDnsSettingsViewModel"
                    },
                    "ipConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-VirtualMachines-AzureNicIpConfigurationViewModel"
                        }
                    },
                    "subnet": {
                        "type": "string"
                    },
                    "enableIPForwarding": {
                        "type": "boolean"
                    },
                    "primary": {
                        "type": "boolean"
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "networkSecurityGroup": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Azure-Model-WrapperModels-Compute-MachineImage": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "offer": {
                        "type": "string"
                    },
                    "publisher": {
                        "type": "string"
                    },
                    "sku": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "Models-VirtualMachineExtensionViewModel": {
                "type": "object",
                "properties": {
                    "forceUpdateTag": {
                        "type": "string"
                    },
                    "publisher": {
                        "type": "string"
                    },
                    "virtualMachineExtensionType": {
                        "type": "string"
                    },
                    "typeHandlerVersion": {
                        "type": "string"
                    },
                    "autoUpgradeMinorVersion": {
                        "type": "boolean"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Azure-Model-WrapperModels-Compute-VirtualMachineStatus": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "displayStatus": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "time": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Azure-Model-WrapperModels-Compute-VirtualMachineDiskEncryptionSettings": {
                "type": "object",
                "properties": {
                    "diskEncryptionKey": {
                        "type": "string"
                    },
                    "keyEncryptionKey": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "Models-AzureNetworkInterfaceDnsSettingsViewModel": {
                "type": "object",
                "properties": {
                    "appliedDNSServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "internalDNSNameLabel": {
                        "type": "string"
                    },
                    "internalFQDN": {
                        "type": "string"
                    }
                }
            },
            "Azure-VirtualMachines-AzureNicIpConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "isPrimary": {
                        "type": "boolean"
                    },
                    "privateIPAddressVersion": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicIPAddress": {
                        "type": "string"
                    },
                    "publicIPAllocationMethod": {
                        "enum": [
                            "Unallocated",
                            "Dynamic",
                            "Static"
                        ],
                        "type": "string"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "privateIPAddress": {
                        "type": "string"
                    },
                    "privateIPAllocationMethod": {
                        "enum": [
                            "Unallocated",
                            "Dynamic",
                            "Static"
                        ],
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    }
                }
            },
            "Azure-VirtualMachineImage-AzureVirtualMachineImageViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "extendedLocation": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineExtendedLocationViewModel"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineImagePropertiesViewModel"
                    },
                    "usedBy": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Azure-VirtualMachineImage-AzureVirtualMachineExtendedLocationViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Azure-VirtualMachineImage-AzureVirtualMachineImagePropertiesViewModel": {
                "type": "object",
                "properties": {
                    "sourceVirtualMachine": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineIdSubFieldViewModel"
                    },
                    "storageProfile": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineStorageProfileViewModel"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "hyperVGeneration": {
                        "type": "string"
                    }
                }
            },
            "Azure-VirtualMachineImage-AzureVirtualMachineIdSubFieldViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Azure-VirtualMachineImage-AzureVirtualMachineStorageProfileViewModel": {
                "type": "object",
                "properties": {
                    "osDisk": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineStorageProfileOsDiskViewModel"
                    },
                    "dataDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineStorageProfileDataDiskViewModel"
                        }
                    },
                    "zoneResilient": {
                        "type": "boolean"
                    }
                }
            },
            "Azure-VirtualMachineImage-AzureVirtualMachineStorageProfileOsDiskViewModel": {
                "type": "object",
                "properties": {
                    "osType": {
                        "type": "string"
                    },
                    "osState": {
                        "type": "string"
                    },
                    "diskSizeGb": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "blobUri": {
                        "type": "string"
                    },
                    "caching": {
                        "type": "string"
                    },
                    "storageAccountType": {
                        "type": "string"
                    },
                    "diskEncryptionSet": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineIdSubFieldViewModel"
                    },
                    "managedDisk": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineIdSubFieldViewModel"
                    },
                    "snapshot": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineIdSubFieldViewModel"
                    }
                }
            },
            "Azure-VirtualMachineImage-AzureVirtualMachineStorageProfileDataDiskViewModel": {
                "type": "object",
                "properties": {
                    "lun": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "diskSizeGb": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "blobUri": {
                        "type": "string"
                    },
                    "caching": {
                        "type": "string"
                    },
                    "storageAccountType": {
                        "type": "string"
                    },
                    "diskEncryptionSet": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineIdSubFieldViewModel"
                    },
                    "managedDisk": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineIdSubFieldViewModel"
                    },
                    "snapshot": {
                        "$ref": "#/components/schemas/Azure-VirtualMachineImage-AzureVirtualMachineIdSubFieldViewModel"
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "sku": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetSkuViewModel"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "virtualNetwork": {
                        "type": "string"
                    },
                    "overprovision": {
                        "type": "boolean"
                    },
                    "uniqueId": {
                        "type": "string"
                    },
                    "singlePlacementGroup": {
                        "type": "boolean"
                    },
                    "identity": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetIdentityViewModel"
                    },
                    "virtualMachineProfile": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetVMProfileViewModel"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Azure-VirtualMachineScaleSet-AzureVirtualMachineScaleSetInstanceViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetSkuViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tier": {
                        "type": "string"
                    },
                    "capacity": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetIdentityViewModel": {
                "type": "object",
                "properties": {
                    "principalId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetVMProfileViewModel": {
                "type": "object",
                "properties": {
                    "osProfile": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetOSProfileViewModel"
                    },
                    "storageProfile": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetStorageProfileViewModel"
                    },
                    "networkProfile": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetNetworkProfileViewModel"
                    },
                    "licenseType": {
                        "type": "string"
                    }
                }
            },
            "Azure-VirtualMachineScaleSet-AzureVirtualMachineScaleSetInstanceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "vmId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "instanceId": {
                        "description": "Index of VM in ScaleSet. For ex: 1",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetOSProfileViewModel": {
                "type": "object",
                "properties": {
                    "computerNamePrefix": {
                        "type": "string"
                    },
                    "adminUsername": {
                        "type": "string"
                    },
                    "customData": {
                        "type": "string"
                    },
                    "windowsConfiguration": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureWindowsConfigurationViewModel"
                    },
                    "linuxConfiguration": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureLinuxConfigurationViewModel"
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetStorageProfileViewModel": {
                "type": "object",
                "properties": {
                    "imageReference": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureImageReferenceViewModel"
                    },
                    "osDisk": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetOSDiskViewModel"
                    },
                    "dataDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetDataDiskViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetNetworkProfileViewModel": {
                "type": "object",
                "properties": {
                    "networkInterfaceConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetNetworkConfigurationViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-AzureWindowsConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "provisionVMAgent": {
                        "type": "boolean"
                    },
                    "enableAutomaticUpdates": {
                        "type": "boolean"
                    },
                    "timeZone": {
                        "type": "string"
                    },
                    "additionalUnattendContent": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AzureAdditionalUnattendContentViewModel"
                        }
                    },
                    "winRM": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureWinRMConfigurationViewModel"
                    }
                }
            },
            "Falconetix-Model-AzureLinuxConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "disablePasswordAuthentication": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-AzureImageReferenceViewModel": {
                "type": "object",
                "properties": {
                    "publisher": {
                        "type": "string"
                    },
                    "offer": {
                        "type": "string"
                    },
                    "sku": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetOSDiskViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "caching": {
                        "type": "string"
                    },
                    "createOption": {
                        "type": "string"
                    },
                    "osType": {
                        "type": "string"
                    },
                    "image": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualHardDiskViewModel"
                    },
                    "vhdContainers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "managedDisk": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetManagedDiskParametersViewModel"
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetDataDiskViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "lun": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "caching": {
                        "type": "string"
                    },
                    "createOption": {
                        "type": "string"
                    },
                    "diskSizeGB": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "managedDisk": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetManagedDiskParametersViewModel"
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetNetworkConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "primary": {
                        "type": "boolean"
                    },
                    "enableAcceleratedNetworking": {
                        "type": "boolean"
                    },
                    "networkSecurityGroup": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureSubResourceViewModel"
                    },
                    "dnsSettings": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureScaleSetNetworkDnsSettingsViewModel"
                    },
                    "ipConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AzureVirtualMachineScaleSetIPConfigurationViewModel"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureAdditionalUnattendContentViewModel": {
                "type": "object",
                "properties": {
                    "passName": {
                        "type": "string"
                    },
                    "componentName": {
                        "type": "string"
                    },
                    "settingName": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureWinRMConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "listeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AzureWinRMListenerViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-AzureVirtualHardDiskViewModel": {
                "type": "object",
                "properties": {
                    "uri": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetManagedDiskParametersViewModel": {
                "type": "object",
                "properties": {
                    "storageAccountType": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureSubResourceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureScaleSetNetworkDnsSettingsViewModel": {
                "type": "object",
                "properties": {
                    "dnsServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-AzureVirtualMachineScaleSetIPConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "subnet": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureApiEntityReferenceViewModel"
                    },
                    "primary": {
                        "type": "boolean"
                    },
                    "publicIPAddressConfiguration": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureScaleSetPublicIPAddressConfigurationViewModel"
                    },
                    "privateIPAddressVersion": {
                        "type": "string"
                    },
                    "applicationGatewayBackendAddressPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AzureSubResourceViewModel"
                        }
                    },
                    "loadBalancerBackendAddressPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AzureSubResourceViewModel"
                        }
                    },
                    "loadBalancerInboundNatPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AzureSubResourceViewModel"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureWinRMListenerViewModel": {
                "type": "object",
                "properties": {
                    "protocol": {
                        "type": "string"
                    },
                    "certificateUrl": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureApiEntityReferenceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AzureScaleSetPublicIPAddressConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "idleTimeoutInMinutes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dnsSettings": {
                        "$ref": "#/components/schemas/Falconetix-Model-AzureScaleSetPublicIPAddressDnsSettingsViewModel"
                    }
                }
            },
            "Falconetix-Model-AzureScaleSetPublicIPAddressDnsSettingsViewModel": {
                "type": "object",
                "properties": {
                    "domainNameLabel": {
                        "type": "string"
                    }
                }
            },
            "Model-AzureVirtualNetworkPeeringViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "virtualNetworkId": {
                        "type": "string"
                    },
                    "virtualNetworkName": {
                        "type": "string"
                    },
                    "virtualNetworkExternalId": {
                        "type": "string"
                    },
                    "remoteVirtualNetworkName": {
                        "type": "string"
                    },
                    "peeringState": {
                        "type": "string"
                    },
                    "provisioningState": {
                        "type": "string"
                    },
                    "allowForwardTraffic": {
                        "type": "boolean"
                    },
                    "allowGatewayTransit": {
                        "type": "boolean"
                    },
                    "allowVirtualNetworkAccess": {
                        "type": "boolean"
                    },
                    "lastUpdated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "remoteVirtualNetworkExternalId": {
                        "type": "string"
                    },
                    "remoteVirtualNetworkId": {
                        "type": "string"
                    },
                    "remoteVirtualNetworkCloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "remoteVirtualNetworkRegion": {
                        "type": "string"
                    }
                }
            },
            "Google-BigTable-GcpBigTableInstanceViewModel": {
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "policy": {
                        "$ref": "#/components/schemas/Google-BigTable-GcpBigTablePolicyViewModel"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "profiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-BigTable-GcpBigTableAppProfileViewModel"
                        }
                    },
                    "clusters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-BigTable-GcpBigTableClusterViewModel"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-BigTable-GcpBigTablePolicyViewModel": {
                "type": "object",
                "properties": {
                    "version": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "bindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-BigTable-GcpBigTableBindingViewModel"
                        }
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-BigTable-GcpBigTableAppProfileViewModel": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "routingPolicyCase": {
                        "type": "string"
                    },
                    "singleClusterRouting": {
                        "$ref": "#/components/schemas/Google-BigTable-GcpBigTableSingleRoutingViewModel"
                    }
                }
            },
            "Google-BigTable-GcpBigTableClusterViewModel": {
                "type": "object",
                "properties": {
                    "serveNodes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "clusterName": {
                        "$ref": "#/components/schemas/Google-BigTable-GcpBigTableClusterNameViewModel"
                    },
                    "locationAsLocationName": {
                        "$ref": "#/components/schemas/Google-BigTable-GcpBigTableLocationNameViewModel"
                    },
                    "defaultStorageType": {
                        "type": "string"
                    }
                }
            },
            "Google-BigTable-GcpBigTableBindingViewModel": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Google-BigTable-GcpBigTableSingleRoutingViewModel": {
                "type": "object",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "allowTransactionalWrites": {
                        "type": "boolean"
                    }
                }
            },
            "Google-BigTable-GcpBigTableClusterNameViewModel": {
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "Google-BigTable-GcpBigTableLocationNameViewModel": {
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "BillableAssets-AccountBillableAssetsViewModel": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "purcahseOrderInstances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudAccountsData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BillableAssets-CloudAccountBillableAssetsViewModel"
                        }
                    },
                    "totals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-BillableAssets-AccountAssetsTotalData"
                        }
                    },
                    "grandTotals": {
                        "$ref": "#/components/schemas/Falconetix-Model-BillableAssets-GrandTotalData"
                    }
                }
            },
            "BillableAssets-CloudAccountBillableAssetsViewModel": {
                "type": "object",
                "properties": {
                    "cloudVendor": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "assetsCount": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BillableAssets-AssetsViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-BillableAssets-AccountAssetsTotalData": {
                "type": "object",
                "properties": {
                    "vendor": {
                        "type": "string"
                    },
                    "assetType": {
                        "type": "string"
                    },
                    "totalCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalBillable": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalNonBillable": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalOnLineCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-BillableAssets-GrandTotalData": {
                "type": "object",
                "properties": {
                    "grandTotalCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "grandTotalBillable": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "grandTotalNonBillable": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "grandTotalOnLineCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "BillableAssets-AssetsViewModel": {
                "type": "object",
                "properties": {
                    "assetType": {
                        "type": "string"
                    },
                    "totalCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "billableCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "nonBillableCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-Clarity-ClarityVpc": {
                "type": "object",
                "properties": {
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "rds": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "redshift": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "alb": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "elb": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "efs": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "lambda": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "instances": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "peerings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Clarity-PeeringStatus"
                        }
                    },
                    "cidrBlock": {
                        "type": "string"
                    },
                    "environmentType": {
                        "enum": [
                            "LOCAL",
                            "FOREIGN_REGION",
                            "FOREIGN_CLOUD_ACCOUNT",
                            "FOREIGN_UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "assetsCounter": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "concurrentAssetsCounter": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Falconetix-Model-Clarity-PeeringStatus": {
                "type": "object",
                "properties": {
                    "peeringId": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-Clarity-ClarityAzureCounterView": {
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "string"
                    },
                    "loadBalancer": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "sqlServer": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "virtualMachine": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "virtualMachineScaleSet": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "redisCache": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "cidrBlock": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "peerings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Clarity-PeeringStatus"
                        }
                    },
                    "environmentType": {
                        "enum": [
                            "LOCAL",
                            "FOREIGN_REGION",
                            "FOREIGN_CLOUD_ACCOUNT",
                            "FOREIGN_UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "assetsCounter": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "concurrentAssetsCounter": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Falconetix-Model-Clarity-ClarityGoogleCounterView": {
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "type": "string"
                    },
                    "instances": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "firewalls": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "peerings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Clarity-PeeringStatus"
                        }
                    },
                    "cidrBlock": {
                        "type": "string"
                    },
                    "environmentType": {
                        "enum": [
                            "LOCAL",
                            "FOREIGN_REGION",
                            "FOREIGN_CLOUD_ACCOUNT",
                            "FOREIGN_UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "assetsCounter": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "concurrentAssetsCounter": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Falconetix-Model-Clarity-ClarityCloudAccountsContainer": {
                "type": "object",
                "properties": {
                    "awsCloudAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityAwsCloudAccount"
                        }
                    },
                    "azureCloudAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityAzureCloudAccount"
                        }
                    },
                    "googleCloudAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityGoogleCloudAccount"
                        }
                    }
                }
            },
            "Falconetix-Model-Clarity-ClarityAwsCloudAccount": {
                "type": "object",
                "properties": {
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "assetsCounter": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "concurrentAssetsCounter": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Falconetix-Model-Clarity-ClarityAzureCloudAccount": {
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "assetsCounter": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "concurrentAssetsCounter": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Falconetix-Model-Clarity-ClarityGoogleCloudAccount": {
                "type": "object",
                "properties": {
                    "credentials": {
                        "$ref": "#/components/schemas/Falconetix-Model-Clarity-ClarityGoogleCloudAccount-CredentialsModel",
                        "readOnly": true
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "assetsCounter": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "concurrentAssetsCounter": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Falconetix-Model-Clarity-ClarityGoogleCloudAccount-CredentialsModel": {
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "clientEmail": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    }
                }
            },
            "Falconetix-Model-Clarity-ClarityRegion": {
                "type": "object",
                "properties": {
                    "regionEnum": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "assetsCounter": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "concurrentAssetsCounter": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Controllers-ClaritySecurityGroupsViewModel": {
                "type": "object",
                "properties": {
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudSecurityGroupViewModel"
                        }
                    },
                    "referencedSecurityGroupsWithPeeredVpc": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudSecurityGroupViewModel"
                        }
                    },
                    "unmanagedReferencedSecurityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudSecurityGroupViewModel"
                        }
                    }
                }
            },
            "Models-CloudSecurityGroupViewModel": {
                "type": "object",
                "properties": {
                    "securityGroupId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "services": {
                        "type": "object",
                        "properties": {
                            "inbound": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                                }
                            },
                            "outbound": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                                }
                            }
                        }
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "securityGroupName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcName": {
                        "type": "string"
                    },
                    "regionId": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "type": "string"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Views-Clarity-ClarityAssetsForSecurityGroupsViewModel": {
                "type": "object",
                "properties": {
                    "virtualMachines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureVirtualMachineViewModel"
                        }
                    },
                    "virtualMachineScaleSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureVirtualMachineScaleSetViewModel"
                        }
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureLoadBalancerViewModel"
                        }
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureSecurityGroupViewModel"
                        }
                    }
                }
            },
            "Views-Clarity-ClarityAzureVirtualMachineViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "virtualNetworkId": {
                        "type": "string"
                    },
                    "virtualNetworkName": {
                        "type": "string"
                    },
                    "isRunning": {
                        "type": "boolean"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureNetworkInterfaceViewModel"
                        }
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "virtualHardDiskUri": {
                        "type": "string"
                    }
                }
            },
            "Views-Clarity-ClarityAzureVirtualMachineScaleSetViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string"
                    },
                    "virtualNetworkId": {
                        "type": "string"
                    },
                    "virtualNetworkName": {
                        "type": "string"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureNetworkInterfaceViewModel"
                        }
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureVirtualMachineViewModel"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Views-Clarity-ClarityAzureLoadBalancerViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "backEndIPConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureNetworkInterfaceViewModel"
                        }
                    },
                    "inBoundNATs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureNetworkInterfaceViewModel"
                        }
                    },
                    "frontEndIPConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureNicIpConfigurationViewModel"
                        }
                    }
                }
            },
            "Views-Clarity-ClarityAzureSecurityGroupViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "inboundServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-AzureSecurityGroupServiceViewModel"
                        }
                    },
                    "outboundServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-AzureSecurityGroupServiceViewModel"
                        }
                    },
                    "defaultInboundServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-AzureSecurityGroupServiceViewModel"
                        }
                    },
                    "defaultOutboundServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-AzureSecurityGroupServiceViewModel"
                        }
                    }
                }
            },
            "Views-Clarity-ClarityAzureNetworkInterfaceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ipConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityAzureNicIpConfigurationViewModel"
                        }
                    },
                    "enableIPForwarding": {
                        "type": "boolean"
                    },
                    "primary": {
                        "type": "boolean"
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "networkSecurityGroupId": {
                        "type": "string"
                    }
                }
            },
            "Views-Clarity-ClarityAzureNicIpConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "isPrimary": {
                        "type": "boolean"
                    },
                    "privateIPAddress": {
                        "type": "string"
                    },
                    "privateIPAddressVersion": {
                        "type": "string"
                    },
                    "privateIPAllocationMethod": {
                        "type": "string"
                    },
                    "publicIPAddress": {
                        "type": "string"
                    },
                    "subnet": {
                        "$ref": "#/components/schemas/Views-Clarity-ClarityAzureSubnetViewModel"
                    },
                    "subnetSecurityGroupId": {
                        "type": "string"
                    }
                }
            },
            "Views-Clarity-AzureSecurityGroupServiceViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "priority": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "sourceAddressPrefix": {
                        "type": "string"
                    },
                    "sourceAddressPrefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourcePortRange": {
                        "type": "string"
                    },
                    "sourcePortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destinationAddressPrefix": {
                        "type": "string"
                    },
                    "destinationAddressPrefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destinationPortRange": {
                        "type": "string"
                    },
                    "destinationPortRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "access": {
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "type": "string"
                    }
                }
            },
            "Views-Clarity-ClarityAzureSubnetViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "addressRange": {
                        "type": "string"
                    }
                }
            },
            "Views-Clarity-ClarityGoogleAssetsAndSgContainerViewModel": {
                "type": "object",
                "properties": {
                    "virtualMachines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityGoogleVMInstanceViewModel"
                        }
                    },
                    "firewallRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityGoogleFirewallRuleViewModel"
                        }
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityGoogleSecurityGroupViewModel"
                        }
                    }
                }
            },
            "Views-Clarity-ClarityGoogleVMInstanceViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "canIpForward": {
                        "type": "boolean"
                    },
                    "cpuPlatform": {
                        "type": "string"
                    },
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Instance-GcpComputeAttachedDiskViewModel"
                        }
                    },
                    "machineType": {
                        "type": "string"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-ClarityGoogleVMInstanceViewModel-NetworkInterfaceViewModel"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "networkTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "zone": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "isRunning": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isBillable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Views-Clarity-ClarityGoogleFirewallRuleViewModel": {
                "type": "object",
                "properties": {
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "allowed": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-GoogleFirewallRuleScopeViewModel"
                        }
                    },
                    "denied": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-GoogleFirewallRuleScopeViewModel"
                        }
                    },
                    "destinationRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "sourceRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourceTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "targetTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "priority": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "direction": {
                        "enum": [
                            "Ingress",
                            "Egress"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Views-Clarity-ClarityGoogleSecurityGroupViewModel": {
                "type": "object",
                "properties": {
                    "network": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-GcpServiceRuleViewModel"
                        }
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-GcpServiceRuleViewModel"
                        }
                    },
                    "vmInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Views-Clarity-GcpVmInstanceIdentityViewModel"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-Instance-GcpComputeAttachedDiskViewModel": {
                "type": "object",
                "properties": {
                    "autoDelete": {
                        "type": "boolean"
                    },
                    "deviceName": {
                        "type": "string"
                    },
                    "guestOsFeatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Instance-GcpComputeGuestOsFeatureViewModel"
                        }
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "interface": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mode": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "diskName": {
                        "type": "string"
                    },
                    "diskSizeGb": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "diskType": {
                        "type": "string"
                    },
                    "sourceImage": {
                        "type": "string"
                    },
                    "diskEncryptionType": {
                        "type": "string"
                    },
                    "diskEncryptionTypeMetadata": {
                        "$ref": "#/components/schemas/Google-Instance-GcpComputeDiskEncryptionTypeMetadataViewModel"
                    },
                    "diskEncryptionKey": {
                        "$ref": "#/components/schemas/Google-Instance-GcpComputeInstanceCustomerEncryptionKeyViewModel"
                    }
                }
            },
            "Views-Clarity-ClarityGoogleVMInstanceViewModel-NetworkInterfaceViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "networkIP": {
                        "type": "string"
                    },
                    "subnetwork": {
                        "type": "string"
                    },
                    "publicIP": {
                        "type": "string"
                    }
                }
            },
            "Views-Clarity-GoogleFirewallRuleScopeViewModel": {
                "type": "object",
                "properties": {
                    "ipProtocol": {
                        "type": "string"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Views-Clarity-GcpServiceRuleViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "number": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "destinationPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "destinationPortTo": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    }
                }
            },
            "Views-Clarity-GcpVmInstanceIdentityViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    }
                }
            },
            "Google-Instance-GcpComputeGuestOsFeatureViewModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Instance-GcpComputeDiskEncryptionTypeMetadataViewModel": {
                "type": "object",
                "properties": {
                    "isGoogleManagedKey": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isCustomerManagedKey": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isCustomerSuppliedKey": {
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "Google-Instance-GcpComputeInstanceCustomerEncryptionKeyViewModel": {
                "type": "object",
                "properties": {
                    "eTag": {
                        "type": "string"
                    },
                    "rawKey": {
                        "type": "string"
                    },
                    "sha256": {
                        "type": "string"
                    },
                    "kmsKeyName": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudLambdaFunctionViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "vpc": {
                        "type": "string",
                        "readOnly": true
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "functionArn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "runtimeEnvironment": {
                        "type": "string",
                        "readOnly": true
                    },
                    "executionRoleArn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "functionHandler": {
                        "type": "string",
                        "readOnly": true
                    },
                    "codeSize": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "memorySize": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "executionTimeout": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "lastModified": {
                        "format": "date-time",
                        "type": "string",
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true
                    },
                    "codeSha256": {
                        "type": "string",
                        "readOnly": true
                    },
                    "kmsKeyArn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deadLetterConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsDeadLetterConfig",
                        "readOnly": true
                    },
                    "tracingConfig": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsTracingConfigResponse",
                        "readOnly": true
                    },
                    "environmentVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsEnvironmentVariable"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "resourcePolicy": {
                        "type": "object"
                    },
                    "urlConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-CloudLambdaFunctionUrlConfigViewModel"
                        }
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsDeadLetterConfig": {
                "type": "object",
                "properties": {
                    "targetArn": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsTracingConfigResponse": {
                "type": "object",
                "properties": {
                    "mode": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsEnvironmentVariable": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-CloudLambdaFunctionUrlConfigViewModel": {
                "type": "object",
                "properties": {
                    "authType": {
                        "type": "string"
                    },
                    "cors": {
                        "$ref": "#/components/schemas/Falconetix-Model-CloudLambdaFunctionCorsViewModel"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "functionArn": {
                        "type": "string"
                    },
                    "functionUrl": {
                        "type": "string"
                    },
                    "lastModifiedTime": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-CloudLambdaFunctionCorsViewModel": {
                "type": "object",
                "properties": {
                    "allowCredentials": {
                        "type": "boolean"
                    },
                    "allowHeaders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "exposeHeaders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "maxAge": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-CloudAcmCertificateDetailViewModel": {
                "type": "object",
                "properties": {
                    "certificateArn": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "domainValidationOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-CloudAcmDomainValidationViewModel"
                        }
                    },
                    "extendedKeyUsages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-CloudAcmExtendedKeyUsageViewModel"
                        }
                    },
                    "failureReason": {
                        "type": "string"
                    },
                    "importedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "inUseBy": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "issuedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "keyAlgorithm": {
                        "type": "string"
                    },
                    "keyUsages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-CloudAcmKeyUsageViewModel"
                        }
                    },
                    "notAfter": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "notBefore": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "renewalSummary": {
                        "$ref": "#/components/schemas/Falconetix-Model-CloudAcmRenewalSummaryViewModel"
                    },
                    "certificateOptions": {
                        "$ref": "#/components/schemas/Falconetix-Model-CloudAcmCertificateOptionsSummaryViewModel"
                    },
                    "revocationReason": {
                        "type": "string"
                    },
                    "revokedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "serial": {
                        "type": "string"
                    },
                    "signatureAlgorithm": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    }
                }
            },
            "Falconetix-Model-CloudAcmDomainValidationViewModel": {
                "type": "object",
                "properties": {
                    "domainName": {
                        "type": "string"
                    },
                    "resourceRecord": {
                        "$ref": "#/components/schemas/Falconetix-Model-CloudAcmResourceRecordViewModel"
                    },
                    "validationDomain": {
                        "type": "string"
                    },
                    "validationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "validationMethod": {
                        "type": "string"
                    },
                    "validationStatus": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-CloudAcmExtendedKeyUsageViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "oid": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-CloudAcmKeyUsageViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-CloudAcmRenewalSummaryViewModel": {
                "type": "object",
                "properties": {
                    "domainValidationOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-CloudAcmDomainValidationViewModel"
                        }
                    },
                    "renewalStatus": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-CloudAcmCertificateOptionsSummaryViewModel": {
                "type": "object",
                "properties": {
                    "certificateTransparencyLoggingPreference": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-CloudAcmResourceRecordViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CloudAmi-CloudEc2ImageViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "imageLocation": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "creationDate": {
                        "type": "string"
                    },
                    "hypervisor": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "architecture": {
                        "type": "string"
                    },
                    "rootDeviceName": {
                        "type": "string"
                    },
                    "rootDeviceType": {
                        "type": "string"
                    },
                    "virtualizationType": {
                        "type": "string"
                    },
                    "ramdiskId": {
                        "type": "string"
                    },
                    "imageOwnerAlias": {
                        "type": "string"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "kernelId": {
                        "type": "string"
                    },
                    "blockDeviceMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudAmi-CloudEc2BlockDeviceMappingViewModel"
                        }
                    },
                    "productCodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudAmi-CloudEc2ProductCodeViewModel"
                        }
                    },
                    "enaSupport": {
                        "type": "boolean"
                    },
                    "sriovNetSupport": {
                        "type": "string"
                    },
                    "stateReason": {
                        "$ref": "#/components/schemas/CloudAmi-CloudEc2StateReasonViewModel"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudAmi-CloudEc2TagViewModel"
                        }
                    }
                }
            },
            "CloudAmi-CloudEc2BlockDeviceMappingViewModel": {
                "type": "object",
                "properties": {
                    "deviceName": {
                        "type": "string"
                    },
                    "ebs": {
                        "$ref": "#/components/schemas/CloudAmi-CloudEc2EbsBlockDeviceViewModel"
                    },
                    "noDevice": {
                        "type": "string"
                    },
                    "virtualName": {
                        "type": "string"
                    }
                }
            },
            "CloudAmi-CloudEc2ProductCodeViewModel": {
                "type": "object",
                "properties": {
                    "productCodeId": {
                        "type": "string"
                    },
                    "productCodeType": {
                        "type": "string"
                    }
                }
            },
            "CloudAmi-CloudEc2StateReasonViewModel": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "CloudAmi-CloudEc2TagViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CloudAmi-CloudEc2EbsBlockDeviceViewModel": {
                "type": "object",
                "properties": {
                    "deleteOnTermination": {
                        "type": "boolean"
                    },
                    "encrypted": {
                        "type": "boolean"
                    },
                    "iops": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "snapshotId": {
                        "type": "string"
                    },
                    "volumeSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "volumeType": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudV2LoadBalancerViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "vpc": {
                        "type": "string"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scheme": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "listeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudV2LoadBalancerListenerViewModel"
                        }
                    },
                    "targetGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudV2LoadBalancerTargetGroupViewModel"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "canonicalHostedZoneId": {
                        "type": "string"
                    },
                    "ipAddressType": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudV2LoadBalancerListenerViewModel": {
                "type": "object",
                "properties": {
                    "listenerArn": {
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "certificates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityPolicy": {
                        "type": "string"
                    },
                    "listenerRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudV2LoadBalancerListenerRuleViewModel"
                        }
                    }
                }
            },
            "Models-CloudV2LoadBalancerTargetGroupViewModel": {
                "type": "object",
                "properties": {
                    "targetGroupArn": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudV2LoadBalancerTargetViewModel"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-CloudV2LoadBalancerListenerRuleViewModel": {
                "type": "object",
                "properties": {
                    "ruleArn": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "targetGroupName": {
                        "type": "string"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-ListenerRuleConditionViewModel"
                        }
                    }
                }
            },
            "Models-CloudV2LoadBalancerTargetViewModel": {
                "type": "object",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "Models-ListenerRuleConditionViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CloudAutoScalingGroup-CloudAutoScalingGroupViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "vpc": {
                        "type": "string",
                        "readOnly": true
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "createTime": {
                        "format": "date-time",
                        "type": "string",
                        "readOnly": true
                    },
                    "defaultCooldown": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "desiredCapacity": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "domainName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "healthCheckGracePeriod": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "healthCheckType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupInstance"
                        },
                        "readOnly": true
                    },
                    "launchConfigurationName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "launchTemplate": {
                        "type": "string",
                        "readOnly": true
                    },
                    "loadBalancerNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "maxSize": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "minSize": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "mixedInstancesPolicy": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupMixedInstancePolicy",
                        "readOnly": true
                    },
                    "newInstancesProtectedFromScaleIn": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "placementGroup": {
                        "type": "string",
                        "readOnly": true
                    },
                    "serviceLinkedRoleARN": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "suspendedProcesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupSuspendedProcess"
                        },
                        "readOnly": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "terminationPolicies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "targetGroupARNs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "vpcZoneIdentifier": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupInstance": {
                "type": "object",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "healthStatus": {
                        "type": "string"
                    },
                    "instanceID": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "launchConfigurationName": {
                        "type": "string"
                    },
                    "launchTemplate": {
                        "type": "string"
                    },
                    "lifeCycle": {
                        "type": "string"
                    },
                    "protectionFromScaleIn": {
                        "type": "boolean"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupMixedInstancePolicy": {
                "type": "object",
                "properties": {
                    "instancesDistribution": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupInstancesDistribution"
                    },
                    "launchTemplateName": {
                        "type": "string"
                    },
                    "launchTemplateSpecification": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupLaunchTemplateSpecification"
                    },
                    "launchTemplate": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingLaunchTemplate"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupSuspendedProcess": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupInstancesDistribution": {
                "type": "object",
                "properties": {
                    "onDemandAllocationStrategy": {
                        "type": "string"
                    },
                    "onDemandBaseCapacity": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "onDemandPercentageAboveBaseCapacity": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "spotAllocationStrategy": {
                        "type": "string"
                    },
                    "spotInstancePools": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "spotMaxPrice": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupLaunchTemplateSpecification": {
                "type": "object",
                "properties": {
                    "launchTemplateId": {
                        "type": "string"
                    },
                    "launchTemplateName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingLaunchTemplate": {
                "type": "object",
                "properties": {
                    "launchTemplateSpecification": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupLaunchTemplateSpecification"
                    },
                    "overrides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupLaunchTemplateOverrides"
                        }
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupLaunchTemplateOverrides": {
                "type": "object",
                "properties": {
                    "launchTemplateSpecification": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-AwsAutoScalingGroupLaunchTemplateSpecification"
                    }
                }
            },
            "CloudDbInstances-CloudDbInstanceViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "vpc": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isPublicAccessible": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isMultiAZ": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "availabilityZone": {
                        "type": "string",
                        "readOnly": true
                    },
                    "secondaryAvailabilityZone": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "dbType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "instanceType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "endpoint": {
                        "$ref": "#/components/schemas/CloudDbInstances-CloudDbInstanceEndpointViewModel",
                        "readOnly": true
                    },
                    "subnetGroup": {
                        "$ref": "#/components/schemas/CloudDbInstances-CloudDbInstanceSubnetGroupViewModel",
                        "readOnly": true
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "dbSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "caCertificate": {
                        "type": "string",
                        "readOnly": true
                    },
                    "dbClusterName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "dbInstanceSlaves": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "masterDbInstance": {
                        "type": "string",
                        "readOnly": true
                    },
                    "kmsKeyId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isStorageEncrypted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "storageType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "regionDbInstanceId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "timeStamp": {
                        "format": "date-time",
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isBillable": {
                        "type": "boolean"
                    },
                    "isRunning": {
                        "type": "boolean"
                    },
                    "iamDatabaseAuthenticationEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "CloudDbInstances-CloudDbInstanceEndpointViewModel": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "readOnly": true
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "hostedZoneId": {
                        "type": "string"
                    }
                }
            },
            "CloudDbInstances-CloudDbInstanceSubnetGroupViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vpcId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    }
                }
            },
            "CloudDirectConnect-AwsDirectConnectMetricsViewModel": {
                "type": "object",
                "properties": {
                    "bpsIngressDataPoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudWatch-AwsCloudWatchDataPointViewModel"
                        }
                    },
                    "bpsEgressDataPoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudWatch-AwsCloudWatchDataPointViewModel"
                        }
                    }
                }
            },
            "CloudWatch-AwsCloudWatchDataPointViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "format": "double",
                        "type": "number"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "CloudDirectConnect-CloudDirectConnectViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true
                    },
                    "bandwidth": {
                        "type": "string",
                        "readOnly": true
                    },
                    "virtualInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudDirectConnect-AwsDirectConnectVirtualInterfaceViewModel"
                        },
                        "readOnly": true
                    }
                }
            },
            "CloudDirectConnect-AwsDirectConnectVirtualInterfaceViewModel": {
                "type": "object",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "amazonAddress": {
                        "type": "string"
                    },
                    "asn": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "bgpPeers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudDirectConnect-AwsDirectConnectVirtualInterfaceViewModel-BgpPeerViewModel"
                        }
                    },
                    "connectionId": {
                        "type": "string"
                    },
                    "customerAddress": {
                        "type": "string"
                    },
                    "customerRouterConfig": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "ownerAccount": {
                        "type": "string"
                    },
                    "routeFilterPrefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "virtualGatewayId": {
                        "type": "string"
                    },
                    "virtualInterfaceId": {
                        "type": "string"
                    },
                    "virtualInterfaceName": {
                        "type": "string"
                    },
                    "virtualInterfaceState": {
                        "type": "string"
                    },
                    "virtualInterfaceType": {
                        "type": "string"
                    },
                    "vlan": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudDirectConnect-AwsDirectConnectVirtualInterfaceViewModel-BgpPeerViewModel": {
                "type": "object",
                "properties": {
                    "addressFamily": {
                        "type": "string"
                    },
                    "amazonAddress": {
                        "type": "string"
                    },
                    "asn": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "bgpPeerState": {
                        "type": "string"
                    },
                    "bgpStatus": {
                        "type": "string"
                    },
                    "customerAddress": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableDescriptionViewModel": {
                "type": "object",
                "properties": {
                    "attributeDefinitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableAttributeDefinitionViewModel"
                        }
                    },
                    "creationDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "globalSecondaryIndexes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableGlobalSecondaryIndexDescriptionViewModel"
                        }
                    },
                    "itemCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "keySchema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableKeySchemaElementViewModel"
                        }
                    },
                    "latestStreamArn": {
                        "type": "string"
                    },
                    "latestStreamLabel": {
                        "type": "string"
                    },
                    "localSecondaryIndexes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableLocalSecondaryIndexDescriptionViewModel"
                        }
                    },
                    "provisionedThroughput": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableProvisionedThroughputDescriptionViewModel"
                    },
                    "restoreSummary": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableRestoreSummaryViewModel"
                    },
                    "sseDescription": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableSSEDescriptionViewModel"
                    },
                    "streamSpecification": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableStreamSpecificationViewModel"
                    },
                    "tableArn": {
                        "type": "string"
                    },
                    "tableId": {
                        "type": "string"
                    },
                    "tableName": {
                        "type": "string"
                    },
                    "tableSizeBytes": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "tableStatus": {
                        "type": "string"
                    },
                    "continuousBackups": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableContinuousBackupsDescriptionViewModel"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableAttributeDefinitionViewModel": {
                "type": "object",
                "properties": {
                    "attributeName": {
                        "type": "string"
                    },
                    "attributeType": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableGlobalSecondaryIndexDescriptionViewModel": {
                "type": "object",
                "properties": {
                    "backfilling": {
                        "type": "boolean"
                    },
                    "indexArn": {
                        "type": "string"
                    },
                    "indexName": {
                        "type": "string"
                    },
                    "indexSizeBytes": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "indexStatus": {
                        "type": "string"
                    },
                    "itemCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "keySchema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableKeySchemaElementViewModel"
                        }
                    },
                    "projection": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableProjectionViewModel"
                    },
                    "provisionedThroughput": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableProvisionedThroughputDescriptionViewModel"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableKeySchemaElementViewModel": {
                "type": "object",
                "properties": {
                    "attributeName": {
                        "type": "string"
                    },
                    "keyType": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableLocalSecondaryIndexDescriptionViewModel": {
                "type": "object",
                "properties": {
                    "indexArn": {
                        "type": "string"
                    },
                    "indexName": {
                        "type": "string"
                    },
                    "indexSizeBytes": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "itemCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "keySchema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableKeySchemaElementViewModel"
                        }
                    },
                    "projection": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTableProjectionViewModel"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableProvisionedThroughputDescriptionViewModel": {
                "type": "object",
                "properties": {
                    "lastDecreaseDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastIncreaseDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "numberOfDecreasesToday": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "readCapacityUnits": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "writeCapacityUnits": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableRestoreSummaryViewModel": {
                "type": "object",
                "properties": {
                    "restoreDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "restoreInProgress": {
                        "type": "boolean"
                    },
                    "sourceBackupArn": {
                        "type": "string"
                    },
                    "sourceTableArn": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableSSEDescriptionViewModel": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableStreamSpecificationViewModel": {
                "type": "object",
                "properties": {
                    "streamEnabled": {
                        "type": "boolean"
                    },
                    "streamViewType": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableContinuousBackupsDescriptionViewModel": {
                "type": "object",
                "properties": {
                    "continuousBackupsStatus": {
                        "type": "string"
                    },
                    "pointInTimeRecoveryDescription": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsDynamoDbTablePointInTimeRecoveryDescriptionViewModel"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTableProjectionViewModel": {
                "type": "object",
                "properties": {
                    "nonKeyAttributes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projectionType": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsDynamoDbTablePointInTimeRecoveryDescriptionViewModel": {
                "type": "object",
                "properties": {
                    "earliestRestorableDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "latestRestorableDateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "pointInTimeRecoveryStatus": {
                        "type": "string"
                    }
                }
            },
            "CloudEcsClusterViewModel": {
                "type": "object",
                "properties": {
                    "containerInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudEcsClusterViewModel-ContainerInstance"
                        }
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudECSServiceViewModel"
                        }
                    },
                    "id": {
                        "description": "Id",
                        "type": "string"
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer"
                    },
                    "externalAccountNumber": {
                        "description": "External account number",
                        "type": "string"
                    },
                    "activeServicesCount": {
                        "format": "int32",
                        "description": "Gets and sets the property ActiveServicesCount. \r\n<para>\r\nThe number of services that are running on the cluster in an <code>ACTIVE</code> state.\r\nYou can view these services with <a>ListServices</a>.\r\n</para>",
                        "type": "integer"
                    },
                    "clusterArn": {
                        "description": "Gets and sets the property ClusterArn. \r\n<para>\r\nThe Amazon Resource Name (ARN) that identifies the cluster. The ARN contains the <code>arn:aws:ecs</code>\r\nnamespace, followed by the region of the cluster, the AWS account ID of the cluster\r\nowner, the <code>cluster</code> namespace, and then the cluster name. For example,\r\n<code>arn:aws:ecs:<i>region</i>:<i>012345678910</i>:cluster/<i>test</i></code>..\r\n</para>",
                        "type": "string"
                    },
                    "clusterName": {
                        "description": "Gets and sets the property ClusterName. \r\n<para>\r\nA user-generated string that you use to identify your cluster.\r\n</para>",
                        "type": "string"
                    },
                    "pendingTasksCount": {
                        "format": "int32",
                        "description": "Gets and sets the property PendingTasksCount. \r\n<para>\r\nThe number of tasks in the cluster that are in the <code>PENDING</code> state.\r\n</para>",
                        "type": "integer"
                    },
                    "registeredContainerInstancesCount": {
                        "format": "int32",
                        "description": "Gets and sets the property RegisteredContainerInstancesCount. \r\n<para>\r\nThe number of container instances registered into the cluster.\r\n</para>",
                        "type": "integer"
                    },
                    "runningTasksCount": {
                        "format": "int32",
                        "description": "Gets and sets the property RunningTasksCount. \r\n<para>\r\nThe number of tasks in the cluster that are in the <code>RUNNING</code> state.\r\n</para>",
                        "type": "integer"
                    },
                    "status": {
                        "description": "Gets and sets the property Status. \r\n<para>\r\nThe status of the cluster. The valid values are <code>ACTIVE</code> or <code>INACTIVE</code>.\r\n<code>ACTIVE</code> indicates that you can register container instances with the cluster\r\nand the associated instances can accept tasks.\r\n</para>",
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "CloudEcsClusterViewModel-ContainerInstance": {
                "type": "object",
                "properties": {
                    "agentConnected": {
                        "type": "boolean"
                    },
                    "agentUpdateStatus": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSAttributeViewModel"
                        }
                    },
                    "containerInstanceArn": {
                        "type": "string"
                    },
                    "ec2InstanceId": {
                        "type": "string"
                    },
                    "pendingTasksCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "registeredResources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudEcsClusterViewModel-ContainerInstance-Resource"
                        }
                    },
                    "remainingResources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudEcsClusterViewModel-ContainerInstance-Resource"
                        }
                    },
                    "runningTasksCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "versionInfo": {
                        "$ref": "#/components/schemas/CloudEcsClusterViewModel-ContainerInstance-ContainerInstanceVersionInfo"
                    }
                }
            },
            "CloudECSServiceViewModel": {
                "type": "object",
                "properties": {
                    "deploymentConfiguration": {
                        "$ref": "#/components/schemas/AwsECSDeploymentConfigurationViewModel"
                    },
                    "deployments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSDeploymentViewModel"
                        }
                    },
                    "desiredCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSLoadBalancerViewModel"
                        }
                    },
                    "pendingCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "placementConstraints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSPlacementConstraintViewModel"
                        }
                    },
                    "placementStrategy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSPlacementStrategyViewModel"
                        }
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "runningCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "serviceArn": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "clusterArn": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "AwsECSAttributeViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "targetId": {
                        "type": "string"
                    },
                    "targetType": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CloudEcsClusterViewModel-ContainerInstance-Resource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "object"
                    }
                }
            },
            "CloudEcsClusterViewModel-ContainerInstance-ContainerInstanceVersionInfo": {
                "type": "object",
                "properties": {
                    "agentHash": {
                        "type": "string"
                    },
                    "agentVersion": {
                        "type": "string"
                    },
                    "dockerVersion": {
                        "type": "string"
                    }
                }
            },
            "AwsECSDeploymentConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "maximumPercent": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minimumHealthyPercent": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "AwsECSDeploymentViewModel": {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "desiredCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "pendingCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "runningCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "taskDefinition": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "AwsECSLoadBalancerViewModel": {
                "type": "object",
                "properties": {
                    "containerName": {
                        "type": "string"
                    },
                    "containerPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "loadBalancerName": {
                        "type": "string"
                    },
                    "targetGroupArn": {
                        "type": "string"
                    }
                }
            },
            "AwsECSPlacementConstraintViewModel": {
                "type": "object",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "AwsECSPlacementStrategyViewModel": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "CloudEcsTaskDefinitionViewModel": {
                "type": "object",
                "properties": {
                    "containerDefinitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSContainerDefinitionViewModel"
                        }
                    },
                    "family": {
                        "type": "string"
                    },
                    "networkMode": {
                        "type": "string"
                    },
                    "placementConstraints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSTaskDefinitionPlacementConstraintViewModel"
                        }
                    },
                    "requiresAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSAttributeViewModel"
                        }
                    },
                    "revision": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "taskDefinitionArn": {
                        "type": "string"
                    },
                    "taskRoleArn": {
                        "type": "string"
                    },
                    "volumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSVolumeViewModel"
                        }
                    }
                }
            },
            "AwsECSContainerDefinitionViewModel": {
                "type": "object",
                "properties": {
                    "command": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cpu": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "disableNetworking": {
                        "type": "boolean"
                    },
                    "dnsSearchDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dockerLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/System-Collections-Generic-KeyValuePair_System-String_System-String_"
                        }
                    },
                    "dockerSecurityOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "entryPoint": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "environment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSKeyValuePairViewModel"
                        }
                    },
                    "essential": {
                        "type": "boolean"
                    },
                    "extraHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSHostEntryViewModel"
                        }
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logConfiguration": {
                        "$ref": "#/components/schemas/AwsECSLogConfigurationViewModel"
                    },
                    "memory": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "memoryReservation": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "mountPoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSMountPointViewModel"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "portMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSPortMappingViewModel"
                        }
                    },
                    "privileged": {
                        "type": "boolean"
                    },
                    "readonlyRootFilesystem": {
                        "type": "boolean"
                    },
                    "ulimits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSUlimitViewModel"
                        }
                    },
                    "user": {
                        "type": "string"
                    },
                    "volumesFrom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsECSVolumeFromViewModel"
                        }
                    },
                    "workingDirectory": {
                        "type": "string"
                    }
                }
            },
            "AwsECSTaskDefinitionPlacementConstraintViewModel": {
                "type": "object",
                "properties": {
                    "expression": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "AwsECSVolumeViewModel": {
                "type": "object",
                "properties": {
                    "host": {
                        "$ref": "#/components/schemas/AwsECSHostVolumePropertiesViewModel"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "AwsECSKeyValuePairViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "AwsECSHostEntryViewModel": {
                "type": "object",
                "properties": {
                    "hostname": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string"
                    }
                }
            },
            "AwsECSLogConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "logDriver": {
                        "type": "string"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/System-Collections-Generic-KeyValuePair_System-String_System-String_"
                        }
                    }
                }
            },
            "AwsECSMountPointViewModel": {
                "type": "object",
                "properties": {
                    "containerPath": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "sourceVolume": {
                        "type": "string"
                    }
                }
            },
            "AwsECSPortMappingViewModel": {
                "type": "object",
                "properties": {
                    "containerPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "hostPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    }
                }
            },
            "AwsECSUlimitViewModel": {
                "type": "object",
                "properties": {
                    "hardLimit": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "softLimit": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "AwsECSVolumeFromViewModel": {
                "type": "object",
                "properties": {
                    "readOnly": {
                        "type": "boolean"
                    },
                    "sourceContainer": {
                        "type": "string"
                    }
                }
            },
            "AwsECSHostVolumePropertiesViewModel": {
                "type": "object",
                "properties": {
                    "sourcePath": {
                        "type": "string"
                    }
                }
            },
            "CloudEfsViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "externalAccountNumber": {
                        "description": "External account number",
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "creationToken": {
                        "type": "string"
                    },
                    "encrypted": {
                        "type": "boolean"
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "fileSystemId": {
                        "type": "string"
                    },
                    "performanceMode": {
                        "type": "string",
                        "readOnly": true
                    },
                    "creationTime": {
                        "format": "date-time",
                        "type": "string",
                        "readOnly": true
                    },
                    "lifeCycleState": {
                        "type": "string",
                        "readOnly": true
                    },
                    "numberOfMountTargets": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "sizeInBytes": {
                        "$ref": "#/components/schemas/CloudEfsSizeInBytesViewModel",
                        "readOnly": true
                    },
                    "mountTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudEfsMountTargetViewModel"
                        }
                    },
                    "vpc": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "region": {
                        "description": "Region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    }
                }
            },
            "CloudEfsSizeInBytesViewModel": {
                "type": "object",
                "properties": {
                    "timeStamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "value": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "CloudEfsMountTargetViewModel": {
                "type": "object",
                "properties": {
                    "fileSystemId": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "lifeCycleState": {
                        "type": "string"
                    },
                    "mountTargetId": {
                        "type": "string"
                    },
                    "networkInterfaceId": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CloudElastiCache-CloudElastiCacheClusterViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "externalAccountNumber": {
                        "description": "External account number",
                        "type": "string"
                    },
                    "autoMinorVersionUpgrade": {
                        "type": "boolean"
                    },
                    "cacheClusterCreateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "cacheClusterId": {
                        "type": "string"
                    },
                    "cacheClusterStatus": {
                        "type": "string"
                    },
                    "cacheNodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudElastiCache-ElastiCacheClusterNodeVM"
                        }
                    },
                    "cacheNodeType": {
                        "type": "string"
                    },
                    "elastiCacheParameterGroup": {
                        "$ref": "#/components/schemas/CloudElastiCache-ElastiCacheParameterGroupStatusVM"
                    },
                    "cacheSecurityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudElastiCache-ElastiCacheCachedSecurityGroupMembershipVM"
                        }
                    },
                    "cacheSubnetGroupName": {
                        "type": "string"
                    },
                    "clientDownloadLandingPage": {
                        "type": "string"
                    },
                    "configurationEndpoint": {
                        "$ref": "#/components/schemas/CloudElastiCache-ElastiCacheClusterEndpointVM"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string"
                    },
                    "elastiCacheNotificationConfiguration": {
                        "$ref": "#/components/schemas/CloudElastiCache-ElastiCacheNotificationConfigurationVM"
                    },
                    "numCacheNodes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "elastiCachePendingModifiedValues": {
                        "$ref": "#/components/schemas/CloudElastiCache-ElastiCachePendingModifiedValuesVM"
                    },
                    "preferredAvailabilityZone": {
                        "type": "string"
                    },
                    "preferredMaintenanceWindow": {
                        "type": "string"
                    },
                    "replicationGroupId": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudElastiCache-ElastiCacheSecurityGroupMembershipVM"
                        }
                    },
                    "snapshotRetentionLimit": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "snapshotWindow": {
                        "type": "string"
                    },
                    "atRestEncryptionEnabled": {
                        "type": "boolean"
                    },
                    "transitEncryptionEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "CloudElastiCache-ElastiCacheClusterNodeVM": {
                "type": "object",
                "properties": {
                    "cacheNodeCreateTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "cacheNodeId": {
                        "type": "string"
                    },
                    "cacheNodeStatus": {
                        "type": "string"
                    },
                    "customerAvailabilityZone": {
                        "type": "string"
                    },
                    "endpoint": {
                        "$ref": "#/components/schemas/CloudElastiCache-ElastiCacheClusterEndpointVM"
                    },
                    "parameterGroupStatus": {
                        "type": "string"
                    },
                    "sourceCacheNodeId": {
                        "type": "string"
                    }
                }
            },
            "CloudElastiCache-ElastiCacheParameterGroupStatusVM": {
                "type": "object",
                "properties": {
                    "cacheNodeIdsToReboot": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cacheParameterGroupName": {
                        "type": "string"
                    },
                    "parameterApplyStatus": {
                        "type": "string"
                    }
                }
            },
            "CloudElastiCache-ElastiCacheCachedSecurityGroupMembershipVM": {
                "type": "object",
                "properties": {
                    "cacheSecurityGroupName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "CloudElastiCache-ElastiCacheClusterEndpointVM": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudElastiCache-ElastiCacheNotificationConfigurationVM": {
                "type": "object",
                "properties": {
                    "topicArn": {
                        "type": "string"
                    },
                    "topicStatus": {
                        "type": "string"
                    }
                }
            },
            "CloudElastiCache-ElastiCachePendingModifiedValuesVM": {
                "type": "object",
                "properties": {
                    "cacheNodeIdsToRemove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cacheNodeType": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string"
                    },
                    "numCacheNodes": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudElastiCache-ElastiCacheSecurityGroupMembershipVM": {
                "type": "object",
                "properties": {
                    "securityGroupId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "CloudFlowLogs-CloudFlowLogsViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "description": "Region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "vpcFlowLogId": {
                        "type": "string"
                    },
                    "vpc": {
                        "type": "string"
                    },
                    "logGroupName": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "statusActive": {
                        "type": "boolean"
                    },
                    "trafic": {
                        "enum": [
                            "ALL",
                            "ACCEPT",
                            "REJECT",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    }
                }
            },
            "CloudFront-CloudFrontDistributionViewModel": {
                "type": "object",
                "properties": {
                    "activeTrustedSigners": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontActiveTrustedSignersViewModel"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "distributionConfig": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontDistributionConfigViewModel"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "inProgressInvalidationBatches": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastModifiedTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    }
                }
            },
            "CloudFront-AwsCloudFrontActiveTrustedSignersViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudFront-AwsCloudFrontSignerViewModel"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontDistributionConfigViewModel": {
                "type": "object",
                "properties": {
                    "aliases": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontAliasesViewModel"
                    },
                    "cacheBehaviors": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontCacheBehaviorsViewModel"
                    },
                    "callerReference": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "customErrorResponses": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontCustomErrorResponsesViewModel"
                    },
                    "defaultCacheBehavior": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontDefaultCacheBehaviorViewModel"
                    },
                    "defaultRootObject": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "httpVersion": {
                        "type": "string"
                    },
                    "isIPV6Enabled": {
                        "type": "boolean"
                    },
                    "logging": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontLoggingConfigViewModel"
                    },
                    "origins": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontOriginsViewModel"
                    },
                    "priceClass": {
                        "type": "string"
                    },
                    "restrictions": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontRestrictionsViewModel"
                    },
                    "viewerCertificate": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontViewerCertificateViewModel"
                    },
                    "webACLId": {
                        "type": "string"
                    }
                }
            },
            "CloudFront-AwsCloudFrontSignerViewModel": {
                "type": "object",
                "properties": {
                    "awsAccountNumber": {
                        "type": "string"
                    },
                    "keyPairIds": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontKeyPairIdsViewModel"
                    }
                }
            },
            "CloudFront-AwsCloudFrontAliasesViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontCacheBehaviorsViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudFront-AwsCloudFrontCacheBehaviorViewModel"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontCustomErrorResponsesViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudFront-AwsCloudFrontCustomErrorResponseViewModel"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontDefaultCacheBehaviorViewModel": {
                "type": "object",
                "properties": {
                    "allowedMethods": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontAllowedMethodsViewModel"
                    },
                    "compress": {
                        "type": "boolean"
                    },
                    "defaultTTL": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "forwardedValues": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontForwardedValuesViewModel"
                    },
                    "lambdaFunctionAssociations": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontLambdaFunctionAssociationsViewModel"
                    },
                    "maxTTL": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "minTTL": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "smoothStreaming": {
                        "type": "boolean"
                    },
                    "targetOriginId": {
                        "type": "string"
                    },
                    "trustedSigners": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontTrustedSignersViewModel"
                    },
                    "viewerProtocolPolicy": {
                        "type": "string"
                    }
                }
            },
            "CloudFront-AwsCloudFrontLoggingConfigViewModel": {
                "type": "object",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "includeCookies": {
                        "type": "boolean"
                    },
                    "prefix": {
                        "type": "string"
                    }
                }
            },
            "CloudFront-AwsCloudFrontOriginsViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudFront-AwsCloudFrontOriginViewModel"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontRestrictionsViewModel": {
                "type": "object",
                "properties": {
                    "geoRestriction": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontGeoRestrictionViewModel"
                    }
                }
            },
            "CloudFront-AwsCloudFrontViewerCertificateViewModel": {
                "type": "object",
                "properties": {
                    "acmCertificateArn": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "certificateSource": {
                        "type": "string"
                    },
                    "cloudFrontDefaultCertificate": {
                        "type": "boolean"
                    },
                    "iamCertificateId": {
                        "type": "string"
                    },
                    "minimumProtocolVersion": {
                        "type": "string"
                    },
                    "sslSupportMethod": {
                        "type": "string"
                    }
                }
            },
            "CloudFront-AwsCloudFrontKeyPairIdsViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontCacheBehaviorViewModel": {
                "type": "object",
                "properties": {
                    "allowedMethods": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontAllowedMethodsViewModel"
                    },
                    "compress": {
                        "type": "boolean"
                    },
                    "defaultTTL": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "forwardedValues": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontForwardedValuesViewModel"
                    },
                    "lambdaFunctionAssociations": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontLambdaFunctionAssociationsViewModel"
                    },
                    "maxTTL": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "minTTL": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "pathPattern": {
                        "type": "string"
                    },
                    "smoothStreaming": {
                        "type": "boolean"
                    },
                    "targetOriginId": {
                        "type": "string"
                    },
                    "trustedSigners": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontTrustedSignersViewModel"
                    },
                    "viewerProtocolPolicy": {
                        "type": "string"
                    }
                }
            },
            "CloudFront-AwsCloudFrontCustomErrorResponseViewModel": {
                "type": "object",
                "properties": {
                    "errorCachingMinTTL": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "errorCode": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "responseCode": {
                        "type": "string"
                    },
                    "responsePagePath": {
                        "type": "string"
                    }
                }
            },
            "CloudFront-AwsCloudFrontAllowedMethodsViewModel": {
                "type": "object",
                "properties": {
                    "cachedMethods": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontCachedMethodsViewModel"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontForwardedValuesViewModel": {
                "type": "object",
                "properties": {
                    "cookies": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontCookiePreferenceViewModel"
                    },
                    "headers": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontHeadersViewModel"
                    },
                    "queryString": {
                        "type": "boolean"
                    },
                    "queryStringCacheKeys": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontQueryStringCacheKeysViewModel"
                    }
                }
            },
            "CloudFront-AwsCloudFrontLambdaFunctionAssociationsViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudFront-AwsCloudFrontLambdaFunctionAssociationViewModel"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontTrustedSignersViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontOriginViewModel": {
                "type": "object",
                "properties": {
                    "customHeaders": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontCustomHeadersViewModel"
                    },
                    "customOriginConfig": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontCustomOriginConfigViewModel"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "originPath": {
                        "type": "string"
                    },
                    "s3OriginConfig": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontS3OriginConfigViewModel"
                    }
                }
            },
            "CloudFront-AwsCloudFrontGeoRestrictionViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "restrictionType": {
                        "type": "string"
                    }
                }
            },
            "CloudFront-AwsCloudFrontCachedMethodsViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontCookiePreferenceViewModel": {
                "type": "object",
                "properties": {
                    "forward": {
                        "type": "string"
                    },
                    "whitelistedNames": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontCookieNamesViewModel"
                    }
                }
            },
            "CloudFront-AwsCloudFrontHeadersViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontQueryStringCacheKeysViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontLambdaFunctionAssociationViewModel": {
                "type": "object",
                "properties": {
                    "eventType": {
                        "type": "string"
                    },
                    "lambdaFunctionARN": {
                        "type": "string"
                    }
                }
            },
            "CloudFront-AwsCloudFrontCustomHeadersViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudFront-AwsCloudFrontOriginCustomHeaderViewModel"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontCustomOriginConfigViewModel": {
                "type": "object",
                "properties": {
                    "httpPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "httpsPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "originKeepaliveTimeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "originProtocolPolicy": {
                        "type": "string"
                    },
                    "originReadTimeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "originSslProtocols": {
                        "$ref": "#/components/schemas/CloudFront-AwsCloudFrontOriginSslProtocolsViewModel"
                    }
                }
            },
            "CloudFront-AwsCloudFrontS3OriginConfigViewModel": {
                "type": "object",
                "properties": {
                    "originAccessIdentity": {
                        "type": "string"
                    }
                }
            },
            "CloudFront-AwsCloudFrontCookieNamesViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudFront-AwsCloudFrontOriginCustomHeaderViewModel": {
                "type": "object",
                "properties": {
                    "headerName": {
                        "type": "string"
                    },
                    "headerValue": {
                        "type": "string"
                    }
                }
            },
            "CloudFront-AwsCloudFrontOriginSslProtocolsViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "quantity": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudGuardDutyDetector-CloudGuardDutyDetectorViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "detectorId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "serviceRole": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                }
            },
            "CloudIamAccountSummary-CloudIamAccountSummaryViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "externalAccountNumber": {
                        "description": "External account number",
                        "type": "string"
                    },
                    "summaryMap": {
                        "description": "Summary map",
                        "type": "object",
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                }
            },
            "CloudIamCredentialReport-CloudIamCredentialReportUserViewModel": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "userCreationTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "passwordEnabled": {
                        "type": "boolean"
                    },
                    "passwordLastUsed": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "passwordLastChanged": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "passwordNextRotation": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "mfaActive": {
                        "type": "boolean"
                    },
                    "firstAccessKey": {
                        "$ref": "#/components/schemas/CloudIamCredentialReport-CloudIamCredentialReportUserAccessKeyViewModel"
                    },
                    "secondAccessKey": {
                        "$ref": "#/components/schemas/CloudIamCredentialReport-CloudIamCredentialReportUserAccessKeyViewModel"
                    },
                    "firstCertificate": {
                        "$ref": "#/components/schemas/CloudIamCredentialReport-CloudIamCredentialReportUserCertificateViewModel"
                    },
                    "secondCertificate": {
                        "$ref": "#/components/schemas/CloudIamCredentialReport-CloudIamCredentialReportUserCertificateViewModel"
                    }
                }
            },
            "CloudIamCredentialReport-CloudIamCredentialReportUserAccessKeyViewModel": {
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "lastRotated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastUsedDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastUsedRegion": {
                        "type": "string"
                    },
                    "lastUsedService": {
                        "type": "string"
                    }
                }
            },
            "CloudIamCredentialReport-CloudIamCredentialReportUserCertificateViewModel": {
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "lastRotated": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "CloudIamCredentialReport-CloudIamCredentialReportViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "externalAccountNumber": {
                        "description": "External account number",
                        "type": "string"
                    },
                    "content": {
                        "description": "Gets and sets the property Content.\r\nContains the credential report. The report is Base64-encoded.",
                        "type": "string"
                    },
                    "generatedTime": {
                        "format": "date-time",
                        "description": "Gets and sets the property GeneratedTime.\r\nThe date and time when the credential report was created, in ISO 8601 date-time\r\nformat.",
                        "type": "string"
                    },
                    "reportFormat": {
                        "description": "Gets and sets the property ReportFormat.\r\nThe format (MIME type) of the credential report.",
                        "type": "string"
                    },
                    "users": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudIamCredentialReport-CloudIamCredentialReportUserViewModel"
                        }
                    }
                }
            },
            "CloudIamGroups-CloudIamGroupViewModel": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "AccountId",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccoutNumber": {
                        "description": "ExternalAccoutNumber",
                        "type": "string"
                    },
                    "arn": {
                        "description": "Arn",
                        "type": "string"
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string"
                    },
                    "groupId": {
                        "description": "GroupId",
                        "type": "string"
                    },
                    "groupName": {
                        "description": "GroupName",
                        "type": "string"
                    },
                    "attachedUsers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "attachedManagedPolicies": {
                        "description": "IamGroupPolicies",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudIamGroupPolicy-AwsIamGroupPolicyViewModel"
                        }
                    },
                    "inlinePolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudIamGroups-CloudIamGroupInlinePolicyViewModel"
                        }
                    }
                }
            },
            "CloudIamGroupPolicy-AwsIamGroupPolicyViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "description": "Arn",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    }
                }
            },
            "CloudIamGroups-CloudIamGroupInlinePolicyViewModel": {
                "type": "object",
                "properties": {
                    "policyName": {
                        "type": "string"
                    },
                    "policyDocument": {
                        "type": "object"
                    }
                }
            },
            "Models-CloudIamPasswordPolicy": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "enabledInAccount": {
                        "type": "boolean"
                    },
                    "requireNumbers": {
                        "type": "boolean"
                    },
                    "requireSymbols": {
                        "type": "boolean"
                    },
                    "requireLowercaseCharacter": {
                        "type": "boolean"
                    },
                    "requireUppercaseCharacter": {
                        "type": "boolean"
                    },
                    "minPasswordLength": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "allowUsersToChangePasswords": {
                        "type": "boolean"
                    },
                    "hardExpiry": {
                        "type": "boolean"
                    },
                    "maxPasswordAge": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "expirePasswords": {
                        "type": "boolean"
                    },
                    "passwordReusePrevention": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudIamPolicyViewModel": {
                "type": "object",
                "properties": {
                    "acccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountId": {
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "attachmentCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "createDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "defaultVersionId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "isAttachable": {
                        "type": "boolean"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "policyName": {
                        "type": "string"
                    },
                    "updateDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "version": {
                        "$ref": "#/components/schemas/CloudIamPolicyVersionViewModel"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "CloudIamPolicyVersionViewModel": {
                "type": "object",
                "properties": {
                    "versionId": {
                        "type": "string"
                    },
                    "createDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "document": {
                        "type": "object"
                    },
                    "isDefaultVersion": {
                        "type": "boolean"
                    }
                }
            },
            "CloudIamServerCertificate-CloudIamServerCertificateViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "expiration": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "serverCertificateId": {
                        "type": "string"
                    },
                    "serverCertificateName": {
                        "type": "string"
                    },
                    "uploadDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Models-CloudIamUserViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "createDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "passwordLastReset": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "attachedManagedPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubTypes-CloudIamUserAttachedManagedPolicyViewModel"
                        }
                    },
                    "attachedGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "inlinePolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubTypes-CloudIamUserInlinePolicyViewModel"
                        }
                    },
                    "userPermissionsBoundary": {
                        "$ref": "#/components/schemas/Models-CloudIamUserViewModel-PermissionsBoundary"
                    },
                    "sshPublicKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudIamUserViewModel-SSHPublicKeyMetaDataViewModel"
                        }
                    }
                }
            },
            "SubTypes-CloudIamUserAttachedManagedPolicyViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "SubTypes-CloudIamUserInlinePolicyViewModel": {
                "type": "object",
                "properties": {
                    "policyName": {
                        "type": "string"
                    },
                    "policyDocument": {
                        "type": "object"
                    }
                }
            },
            "Models-CloudIamUserViewModel-PermissionsBoundary": {
                "type": "object",
                "properties": {
                    "permissionsBoundaryArn": {
                        "type": "string"
                    },
                    "permissionsBoundaryType": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudIamUserViewModel-SSHPublicKeyMetaDataViewModel": {
                "type": "object",
                "properties": {
                    "sshPublicKeyId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "uploadDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                }
            },
            "CloudIamVirtualMfaDevices-CloudIamVirtualMfaDeviceViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "enableDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "serialNumber": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "userArn": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-CloudInfra-CloudInfraUserViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "name": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "lastLogin": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "existIn": {
                        "type": "boolean"
                    }
                }
            },
            "UserAndRole-CreateCloudInfraUserRequestViewModel": {
                "type": "object",
                "properties": {
                    "usersToCreate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-CloudInfra-CloudInfraUserViewModel"
                        }
                    },
                    "roleIds": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "UserAndRole-CreateCloudInfraUserResponseViewModel": {
                "type": "object",
                "properties": {
                    "failedRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAndRole-CloudInfraUserCreationFailureResult"
                        }
                    },
                    "totalFailedRecords": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "totalSuccessfulRecords": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "UserAndRole-CloudInfraUserCreationFailureResult": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/Falconetix-Model-CloudInfra-CloudInfraUserViewModel"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudInstanceViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "vpc": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "isRunning": {
                        "type": "boolean"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "publicDnsName": {
                        "type": "string"
                    },
                    "nics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudInstanceNicViewModel"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "image": {
                        "type": "string"
                    },
                    "kernelId": {
                        "type": "string"
                    },
                    "launchTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "profileArn": {
                        "type": "string"
                    },
                    "roleArns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isBillable": {
                        "type": "boolean"
                    },
                    "ssmAgentInstanceInformation": {
                        "$ref": "#/components/schemas/Models-CloudSsmInstanceInformationViewModel"
                    },
                    "metadataOptions": {
                        "$ref": "#/components/schemas/Models-CloudInstanceMetadataOptionsViewModel"
                    },
                    "imageDetails": {
                        "$ref": "#/components/schemas/Models-CloudInstanceImageDetailsViewModel"
                    }
                }
            },
            "Models-CloudInstanceNicViewModel": {
                "type": "object",
                "properties": {
                    "publicIpAddress": {
                        "type": "string"
                    },
                    "privateIpAddress": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "privateDnsName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "macAddress": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudSsmInstanceInformationViewModel": {
                "type": "object",
                "properties": {
                    "activationId": {
                        "type": "string"
                    },
                    "agentVersion": {
                        "type": "string"
                    },
                    "associationOverview": {
                        "$ref": "#/components/schemas/Models-AwsSsmInstanceInformationAssociationOverviewViewModel"
                    },
                    "associationStatus": {
                        "type": "string"
                    },
                    "computerName": {
                        "type": "string"
                    },
                    "iamRole": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "isLatestVersion": {
                        "type": "boolean"
                    },
                    "lastAssociationExecutionDate": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "lastSuccessfulAssociationExecutionDate": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pingStatus": {
                        "type": "string"
                    },
                    "platformName": {
                        "type": "string"
                    },
                    "platformType": {
                        "type": "string"
                    },
                    "platformVersion": {
                        "type": "string"
                    },
                    "registrationDate": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "resourceType": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudInstanceMetadataOptionsViewModel": {
                "type": "object",
                "properties": {
                    "httpEndpoint": {
                        "type": "string"
                    },
                    "httpPutResponseHopLimit": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "httpTokens": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudInstanceImageDetailsViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "imageLocation": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "creationDate": {
                        "type": "string"
                    },
                    "hypervisor": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "architecture": {
                        "type": "string"
                    },
                    "rootDeviceName": {
                        "type": "string"
                    },
                    "rootDeviceType": {
                        "type": "string"
                    },
                    "virtualizationType": {
                        "type": "string"
                    },
                    "ramdiskId": {
                        "type": "string"
                    },
                    "imageOwnerAlias": {
                        "type": "string"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "kernelId": {
                        "type": "string"
                    },
                    "productCodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AwsEc2ProductCodeViewModel"
                        }
                    },
                    "enaSupport": {
                        "type": "boolean"
                    },
                    "sriovNetSupport": {
                        "type": "string"
                    },
                    "stateReason": {
                        "$ref": "#/components/schemas/Models-AwsEc2StateReasonViewModel"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudAmi-CloudEc2TagViewModel"
                        }
                    }
                }
            },
            "Models-AwsSsmInstanceInformationAssociationOverviewViewModel": {
                "type": "object",
                "properties": {
                    "detailedStatus": {
                        "type": "string"
                    },
                    "instanceAssociationStatusAggregatedCount": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AwsSsmInstanceAssociationStatusAggregatedCountViewModel"
                        }
                    }
                }
            },
            "Models-AwsEc2ProductCodeViewModel": {
                "type": "object",
                "properties": {
                    "productCodeId": {
                        "type": "string"
                    },
                    "productCodeType": {
                        "type": "string"
                    }
                }
            },
            "Models-AwsEc2StateReasonViewModel": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Models-AwsSsmInstanceAssociationStatusAggregatedCountViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyFindingsResponse": {
                "type": "object",
                "properties": {
                    "findings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyFindingViewModel"
                        }
                    },
                    "guardDutyState": {
                        "enum": [
                            "Enabled",
                            "Disabled"
                        ],
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyFindingViewModel": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "confidence": {
                        "format": "double",
                        "type": "number"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyResourceViewModel"
                    },
                    "schemaVersion": {
                        "type": "string"
                    },
                    "service": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyServiceViewModel"
                    },
                    "severity": {
                        "format": "double",
                        "type": "number"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyResourceViewModel": {
                "type": "object",
                "properties": {
                    "accessKeyDetails": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyAccessKeyDetailsViewModel"
                    },
                    "instanceDetails": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyInstanceDetailsViewModel"
                    },
                    "resourceType": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyServiceViewModel": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyActionViewModel"
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "count": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "detectorId": {
                        "type": "string"
                    },
                    "eventFirstSeen": {
                        "type": "string"
                    },
                    "eventLastSeen": {
                        "type": "string"
                    },
                    "resourceRole": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userFeedback": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyAccessKeyDetailsViewModel": {
                "type": "object",
                "properties": {
                    "accessKeyId": {
                        "type": "string"
                    },
                    "principalId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "userType": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyInstanceDetailsViewModel": {
                "type": "object",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "iamInstanceProfile": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyIamInstanceProfileViewModel"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instanceState": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "launchTime": {
                        "type": "string"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyNetworkInterfaceViewModel"
                        }
                    },
                    "platform": {
                        "type": "string"
                    },
                    "productCodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyProductCodeViewModel"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyTagViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyActionViewModel": {
                "type": "object",
                "properties": {
                    "actionType": {
                        "type": "string"
                    },
                    "awsApiCallAction": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyAwsApiCallActionViewModel"
                    },
                    "dnsRequestAction": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyDnsRequestActionViewModel"
                    },
                    "networkConnectionAction": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyNetworkConnectionActionViewModel"
                    },
                    "portProbeAction": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyPortProbeActionViewModel"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyIamInstanceProfileViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyNetworkInterfaceViewModel": {
                "type": "object",
                "properties": {
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "privateDnsName": {
                        "type": "string"
                    },
                    "privateIpAddress": {
                        "type": "string"
                    },
                    "privateIpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyPrivateIpAddressDetailsViewModel"
                        }
                    },
                    "publicDnsName": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutySecurityGroupViewModel"
                        }
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyProductCodeViewModel": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyTagViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyAwsApiCallActionViewModel": {
                "type": "object",
                "properties": {
                    "api": {
                        "type": "string"
                    },
                    "callerType": {
                        "type": "string"
                    },
                    "domainDetails": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyDomainDetailsViewModel"
                    },
                    "remoteIpDetails": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyRemoteIpDetailsViewModel"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyDnsRequestActionViewModel": {
                "type": "object",
                "properties": {
                    "domain": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyNetworkConnectionActionViewModel": {
                "type": "object",
                "properties": {
                    "blocked": {
                        "type": "boolean"
                    },
                    "connectionDirection": {
                        "type": "string"
                    },
                    "localPortDetails": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyLocalPortDetailsViewModel"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "remoteIpDetails": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyRemoteIpDetailsViewModel"
                    },
                    "remotePortDetails": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyRemotePortDetailsViewModel"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyPortProbeActionViewModel": {
                "type": "object",
                "properties": {
                    "blocked": {
                        "type": "boolean"
                    },
                    "portProbeDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyPortProbeDetailViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyPrivateIpAddressDetailsViewModel": {
                "type": "object",
                "properties": {
                    "privateDnsName": {
                        "type": "string"
                    },
                    "privateIpAddress": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutySecurityGroupViewModel": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyDomainDetailsViewModel": {
                "type": "object",
                "properties": {}
            },
            "Falconetix-Model-AwsGuardDutyRemoteIpDetailsViewModel": {
                "type": "object",
                "properties": {
                    "city": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyCityViewModel"
                    },
                    "country": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyCountryViewModel"
                    },
                    "geoLocation": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyGeoLocationViewModel"
                    },
                    "ipAddressV4": {
                        "type": "string"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyOrganizationViewModel"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyLocalPortDetailsViewModel": {
                "type": "object",
                "properties": {
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "portName": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyRemotePortDetailsViewModel": {
                "type": "object",
                "properties": {
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "portName": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyPortProbeDetailViewModel": {
                "type": "object",
                "properties": {
                    "localPortDetails": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyLocalPortDetailsViewModel"
                    },
                    "remoteIpDetails": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsGuardDutyRemoteIpDetailsViewModel"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyCityViewModel": {
                "type": "object",
                "properties": {
                    "cityName": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyCountryViewModel": {
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string"
                    },
                    "countryName": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyGeoLocationViewModel": {
                "type": "object",
                "properties": {
                    "lat": {
                        "format": "double",
                        "type": "number"
                    },
                    "lon": {
                        "format": "double",
                        "type": "number"
                    }
                }
            },
            "Falconetix-Model-AwsGuardDutyOrganizationViewModel": {
                "type": "object",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "asnOrg": {
                        "type": "string"
                    },
                    "isp": {
                        "type": "string"
                    },
                    "org": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudInstanceSecurityGroupAttachDetachViewModel": {
                "type": "object",
                "properties": {
                    "groupid": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "nicname": {
                        "type": "string"
                    },
                    "policyGroupId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "CloudInternetGateways-CloudInternetGatewayViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "vpcAttachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubTypes-CloudVpcAttachmentViewModel"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "SubTypes-CloudVpcAttachmentViewModel": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                }
            },
            "CloudKinesis-CloudKinesisStreamViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "arn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "encrypted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "encryptionType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "keyId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "enhancedMonitoring": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudKinesis-CloudKinesisEnhancedMetricsEnhancedMetricsViewModel"
                        },
                        "readOnly": true
                    },
                    "retentionPeriodHours": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "openShardCount": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "creationTimestamp": {
                        "format": "date-time",
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    }
                }
            },
            "CloudKinesis-CloudKinesisEnhancedMetricsEnhancedMetricsViewModel": {
                "type": "object",
                "properties": {
                    "shardLevelMetrics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    }
                }
            },
            "CloudKms-CloudKmsViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "externalAccountNumber": {
                        "description": "External account number",
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/CloudKms-CloudKmsKeyMetadataViewModel"
                    },
                    "rotationStatus": {
                        "type": "boolean"
                    },
                    "keyRotation": {
                        "$ref": "#/components/schemas/CloudKms-KmsRotationViewModel"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudKms-CloudKmsPolicyViewModel"
                        }
                    },
                    "alias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudKms-CloudKmsAliasViewModel"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "CloudKms-CloudKmsKeyMetadataViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "description": "Gets and sets the property Arn.\r\nThe Amazon Resource Name (ARN) of the CMK. For examples, see AWS Key Management\r\nService (AWS KMS) in the Example ARNs section of the AWS General Reference.",
                        "type": "string"
                    },
                    "awsAccountId": {
                        "description": "Gets and sets the property AWSAccountId.\r\nThe twelve-digit account ID of the AWS account that owns the CMK.",
                        "type": "string"
                    },
                    "creationDate": {
                        "format": "date-time",
                        "description": "Gets and sets the property CreationDate.\r\nThe date and time when the CMK was created.",
                        "type": "string"
                    },
                    "deletionDate": {
                        "format": "date-time",
                        "description": "Gets and sets the property DeletionDate.\r\nThe date and time after which AWS KMS deletes the CMK. This value is present\r\nonly when KeyState is PendingDeletion, otherwise this value is omitted.",
                        "type": "string"
                    },
                    "description": {
                        "description": "Gets and sets the property Description.\r\nThe description of the CMK.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Gets and sets the property Enabled.\r\nSpecifies whether the CMK is enabled. When KeyState is Enabled this value\r\nis true, otherwise it is false.",
                        "type": "boolean"
                    },
                    "expirationModel": {
                        "description": "Gets and sets the property ExpirationModel.\r\nSpecifies whether the CMK's key material expires. This value is present only\r\nwhen Origin is EXTERNAL, otherwise this value is omitted.",
                        "type": "string"
                    },
                    "keyId": {
                        "description": "Gets and sets the property KeyId.\r\nThe globally unique identifier for the CMK.",
                        "type": "string"
                    },
                    "keyState": {
                        "description": "Gets and sets the property KeyState.\r\nThe state of the CMK.\r\nFor more information about how key state affects the use of a CMK, see How\r\nKey State Affects the Use of a Customer Master Key in the AWS Key Management\r\nService Developer Guide.",
                        "type": "string"
                    },
                    "keyUsage": {
                        "description": "Gets and sets the property KeyUsage.\r\nThe cryptographic operations for which you can use the CMK. Currently the\r\nonly allowed value is ENCRYPT_DECRYPT, which means you can use the CMK for\r\nthe Encrypt and Decrypt operations.",
                        "type": "string"
                    },
                    "origin": {
                        "description": "Gets and sets the property Origin.\r\nThe source of the CMK's key material. When this value is AWS_KMS, AWS KMS\r\ncreated the key material. When this value is EXTERNAL, the key material was\r\nimported from your existing key management infrastructure or the CMK lacks\r\nkey material.",
                        "type": "string"
                    },
                    "validTo": {
                        "format": "date-time",
                        "description": "Gets and sets the property ValidTo.\r\nThe time at which the imported key material expires. When the key material\r\nexpires, AWS KMS deletes the key material and the CMK becomes unusable. This\r\nvalue is present only for CMKs whose Origin is EXTERNAL and whose ExpirationModel\r\nis KEY_MATERIAL_EXPIRES, otherwise this value is omitted.",
                        "type": "string"
                    },
                    "customerMasterKeySpec": {
                        "type": "string"
                    },
                    "keyManager": {
                        "type": "string"
                    },
                    "multiRegion": {
                        "type": "boolean"
                    },
                    "multiRegionConfiguration": {
                        "$ref": "#/components/schemas/CloudKms-AwsMultiRegionConfigurationViewModel"
                    }
                }
            },
            "CloudKms-KmsRotationViewModel": {
                "type": "object",
                "properties": {
                    "keyRotationEnabled": {
                        "type": "boolean"
                    },
                    "nextRotationDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "onDemandRotationStartDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "rotationPeriodInDays": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudKms-CloudKmsPolicyViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "document": {
                        "type": "object"
                    }
                }
            },
            "CloudKms-CloudKmsAliasViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "arn": {
                        "description": "ARN",
                        "type": "string"
                    },
                    "externalAccountNumber": {
                        "description": "External account number",
                        "type": "string"
                    },
                    "targetKeyId": {
                        "description": "Target key ID",
                        "type": "string"
                    }
                }
            },
            "CloudKms-AwsMultiRegionConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "primaryKey": {
                        "$ref": "#/components/schemas/CloudKms-AwsMultiRegionKeyViewModel"
                    },
                    "replicaKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudKms-AwsMultiRegionKeyViewModel"
                        }
                    }
                }
            },
            "CloudKms-AwsMultiRegionKeyViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudLoadBalancerViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "vpc": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "timeStamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "listeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudLoadBalancerListenerViewModel"
                        }
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scheme": {
                        "type": "string"
                    },
                    "accessLog": {
                        "$ref": "#/components/schemas/Models-CloudLoadBalancerAccessLogViewModel"
                    }
                }
            },
            "Models-CloudLoadBalancerListenerViewModel": {
                "type": "object",
                "properties": {
                    "sourcePort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "instancePort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "sourceProtocol": {
                        "type": "string"
                    },
                    "instanceProtocol": {
                        "type": "string"
                    },
                    "sslCertificateId": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudLoadBalancerAccessLogViewModel": {
                "type": "object",
                "properties": {
                    "emitInterval": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "s3BucketName": {
                        "type": "string"
                    },
                    "s3BucketPrefix": {
                        "type": "string"
                    }
                }
            },
            "CloudLogGroups-CloudLogGroupViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "description": "Region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "metricFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudLogGroups-CloudMetricFilterViewModel"
                        }
                    },
                    "arn": {
                        "type": "string"
                    },
                    "creationTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "logGroupName": {
                        "type": "string"
                    },
                    "metricFilterCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "retentionInDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "storedBytes": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "CloudLogGroups-CloudMetricFilterViewModel": {
                "type": "object",
                "properties": {
                    "creationTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "filterName": {
                        "type": "string"
                    },
                    "filterPattern": {
                        "type": "string"
                    },
                    "metricTransformations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudLogGroups-CloudMetricFilterTransformations"
                        }
                    }
                }
            },
            "CloudLogGroups-CloudMetricFilterTransformations": {
                "type": "object",
                "properties": {
                    "defaultValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "metricName": {
                        "type": "string"
                    },
                    "metricNamespace": {
                        "type": "string"
                    },
                    "metricValue": {
                        "type": "string"
                    }
                }
            },
            "CloudMetricAlarms-CloudMetricAlarmViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "description": "Region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "actionsEnabled": {
                        "type": "boolean"
                    },
                    "alarmActions": {
                        "description": "Gets and sets the property AlarmActions.\r\nThe list of actions to execute when this alarm transitions into an ALARM\r\nstate from any other state. Each action is specified as an Amazon Resource\r\nName (ARN).",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "alarmArn": {
                        "description": "Gets and sets the property AlarmArn.\r\nThe Amazon Resource Name (ARN) of the alarm.",
                        "type": "string"
                    },
                    "alarmConfigurationUpdatedTimestamp": {
                        "format": "date-time",
                        "description": "Gets and sets the property AlarmConfigurationUpdatedTimestamp.\r\nThe time stamp of the last update to the alarm configuration.",
                        "type": "string"
                    },
                    "alarmDescription": {
                        "description": "Gets and sets the property AlarmDescription.\r\nThe description for the alarm.",
                        "type": "string"
                    },
                    "alarmName": {
                        "description": "Gets and sets the property AlarmName.\r\nThe name of the alarm.",
                        "type": "string"
                    },
                    "comparisonOperator": {
                        "description": "Gets and sets the property ComparisonOperator.\r\nThe arithmetic operation to use when comparing the specified Statistic and\r\nThreshold. The specified Statistic value is used as the first operand.",
                        "type": "string"
                    },
                    "dimensions": {
                        "description": "Gets and sets the property Dimensions.\r\nThe list of dimensions associated with the alarm's associated metric.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudMetricAlarms-CloudMetricAlarmDimension"
                        }
                    },
                    "evaluationPeriods": {
                        "format": "int32",
                        "description": "Gets and sets the property EvaluationPeriods.\r\nThe number of periods over which data is compared to the specified threshold.",
                        "type": "integer"
                    },
                    "insufficientDataActions": {
                        "description": "Gets and sets the property InsufficientDataActions.\r\nThe list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA\r\nstate from any other state. Each action is specified as an Amazon Resource\r\nName (ARN).\r\nThe current WSDL lists this attribute as UnknownActions.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metricName": {
                        "description": "Gets and sets the property MetricName.\r\nThe name of the alarm's metric.",
                        "type": "string"
                    },
                    "namespace": {
                        "description": "Gets and sets the property Namespace.\r\nThe namespace of alarm's associated metric.",
                        "type": "string"
                    },
                    "okActions": {
                        "description": "Gets and sets the property OKActions.\r\nThe list of actions to execute when this alarm transitions into an OK state\r\nfrom any other state. Each action is specified as an Amazon Resource Name\r\n(ARN).",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "period": {
                        "format": "int32",
                        "description": "Gets and sets the property Period.\r\nThe period in seconds over which the statistic is applied.",
                        "type": "integer"
                    },
                    "stateReason": {
                        "description": "Gets and sets the property StateReason.\r\nA human-readable explanation for the alarm's state.",
                        "type": "string"
                    },
                    "stateReasonData": {
                        "description": "Gets and sets the property StateReasonData.\r\nAn explanation for the alarm's state in machine-readable JSON format",
                        "type": "string"
                    },
                    "stateUpdatedTimestamp": {
                        "format": "date-time",
                        "description": "Gets and sets the property StateUpdatedTimestamp.\r\nThe time stamp of the last update to the alarm's state.",
                        "type": "string"
                    },
                    "stateValue": {
                        "description": "Gets and sets the property StateValue.\r\nThe state value for the alarm.",
                        "type": "string"
                    },
                    "statistic": {
                        "description": "Gets and sets the property Statistic.\r\nThe statistic to apply to the alarm's associated metric.",
                        "type": "string"
                    },
                    "threshold": {
                        "format": "double",
                        "description": "Gets and sets the property Threshold.\r\nThe value against which the specified statistic is compared.",
                        "type": "number"
                    },
                    "unit": {
                        "description": "Gets and sets the property Unit.\r\nThe unit of the alarm's associated metric.",
                        "type": "string"
                    }
                }
            },
            "CloudMetricAlarms-CloudMetricAlarmDimension": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudNaclViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timeStamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "naclId": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "associations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Controllers-CloudNaclAssociationViewModel"
                        }
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Controllers-CloudNaclEntryViewModel"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Controllers-CloudNaclAssociationViewModel": {
                "type": "object",
                "properties": {
                    "naclId": {
                        "type": "string"
                    },
                    "nAclAssociationId": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    }
                }
            },
            "Controllers-CloudNaclEntryViewModel": {
                "type": "object",
                "properties": {
                    "protocol": {
                        "type": "string"
                    },
                    "ruleNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ruleAction": {
                        "type": "string"
                    },
                    "egress": {
                        "type": "boolean"
                    },
                    "cidrBlock": {
                        "type": "string"
                    },
                    "portRange": {
                        "$ref": "#/components/schemas/CGN-Inventory-Aws-Model-WrapperModels-NaclEntryPortRange"
                    },
                    "icmpTypeCode": {
                        "$ref": "#/components/schemas/Controllers-NaclEntryIcmpTypeCodeViewModel"
                    }
                }
            },
            "CGN-Inventory-Aws-Model-WrapperModels-NaclEntryPortRange": {
                "type": "object",
                "properties": {
                    "from": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "to": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Controllers-NaclEntryIcmpTypeCodeViewModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "code": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "CloudNetworkInerfaces-CloudNetworkInterfaceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "vpc": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "association": {
                        "$ref": "#/components/schemas/CloudNetworkInerfaces-CloudNetworkInterfaceAssociationViewModel",
                        "readOnly": true
                    },
                    "attachment": {
                        "$ref": "#/components/schemas/CloudNetworkInerfaces-CloudNetworkInterfaceAttachmentViewModel",
                        "readOnly": true
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudNetworkInerfaces-CloudNetworkInterfaceGroupIdentifierViewModel"
                        },
                        "readOnly": true
                    },
                    "interfaceType": {
                        "type": "string"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "networkInterfaceId": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "privateDnsName": {
                        "type": "string"
                    },
                    "privateIpAddress": {
                        "type": "string"
                    },
                    "privateIpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudNetworkInerfaces-CloudNetworkInterfacePrivateIpAddressViewModel"
                        },
                        "readOnly": true
                    },
                    "requesterId": {
                        "type": "string"
                    },
                    "requesterManaged": {
                        "type": "boolean"
                    },
                    "sourceDestCheck": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudRedshiftClusterViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "vpc": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "nodeType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "clusterNodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-CloudRedshiftClusterNodeViewModel"
                        },
                        "readOnly": true
                    },
                    "isPublic": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "endpoint": {
                        "$ref": "#/components/schemas/Models-CloudRedshiftClusterEndpointViewModel"
                    },
                    "elasticIPAddress": {
                        "type": "string",
                        "readOnly": true
                    },
                    "dataEncrypted": {
                        "type": "boolean"
                    },
                    "clusterVersion": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subnetGroup": {
                        "$ref": "#/components/schemas/Models-CloudRedshiftClusterSubnetGroupViewModel"
                    },
                    "dbName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "kmsKeyId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "clusterIamRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "clusterSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "parametersGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AwsRedshiftParametersGroupViewModel"
                        },
                        "readOnly": true
                    }
                }
            },
            "Models-CloudRedshiftClusterNodeViewModel": {
                "type": "object",
                "properties": {
                    "nodeRole": {
                        "type": "string",
                        "readOnly": true
                    },
                    "privateIPAddress": {
                        "type": "string",
                        "readOnly": true
                    },
                    "publicIPAddress": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Models-CloudRedshiftClusterEndpointViewModel": {
                "type": "object",
                "properties": {
                    "port": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "address": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Models-CloudRedshiftClusterSubnetGroupViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vpcId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    }
                }
            },
            "Models-AwsRedshiftParametersGroupViewModel": {
                "type": "object",
                "properties": {
                    "parameterGroupName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-AwsRedshiftParameterViewModel"
                        },
                        "readOnly": true
                    }
                }
            },
            "Models-AwsRedshiftParameterViewModel": {
                "type": "object",
                "properties": {
                    "allowedValues": {
                        "type": "string",
                        "readOnly": true
                    },
                    "applyType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "dataType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isModifiable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "minimumEngineVersion": {
                        "type": "string",
                        "readOnly": true
                    },
                    "parameterName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "parameterValue": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "CloudAwsRegion-CloudRegionViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "isDefaultEndpoint": {
                        "type": "boolean"
                    },
                    "isEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "CloudRoute53-CloudRoute53DomainViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "autoRenew": {
                        "type": "boolean"
                    },
                    "transferLock": {
                        "type": "boolean"
                    },
                    "expirationTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/CloudRoute53-CloudRoute53DomainDetailsViewModel"
                    }
                }
            },
            "CloudRoute53-CloudRoute53DomainDetailsViewModel": {
                "type": "object",
                "properties": {
                    "registrarName": {
                        "type": "string"
                    },
                    "registrarUrl": {
                        "type": "string"
                    },
                    "registryDomainId": {
                        "type": "string"
                    },
                    "reseller": {
                        "type": "string"
                    },
                    "nameservers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudRoute53-CloudRoute53DomainNameserverViewModel"
                        }
                    },
                    "dnsSec": {
                        "type": "string"
                    },
                    "statusList": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "whoIsServer": {
                        "type": "string"
                    },
                    "creationTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "CloudRoute53-CloudRoute53DomainNameserverViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "glueIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CloudRoute53-CloudRoute53HostedZoneViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "callerReference": {
                        "type": "string"
                    },
                    "config": {
                        "$ref": "#/components/schemas/CloudRoute53-CloudRoute53HostedZoneConfigViewModel"
                    },
                    "linkedService": {
                        "$ref": "#/components/schemas/CloudRoute53-CloudRoute53LinkedServiceViewModel"
                    },
                    "resourceRecordSetCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "resourceRecordSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudRoute53-CloudRoute53ResourceRecordSetViewModel"
                        }
                    },
                    "queryLoggingConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudRoute53-CloudRoute53QueryLoggingConfigViewModel"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    }
                }
            },
            "CloudRoute53-CloudRoute53HostedZoneConfigViewModel": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "privateZone": {
                        "type": "boolean"
                    }
                }
            },
            "CloudRoute53-CloudRoute53LinkedServiceViewModel": {
                "type": "object",
                "properties": {
                    "servicePrincipal": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "CloudRoute53-CloudRoute53ResourceRecordSetViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "setIdentifier": {
                        "type": "string"
                    },
                    "weight": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "geoLocation": {
                        "$ref": "#/components/schemas/CloudRoute53-CloudRoute53GeoLocationViewModel"
                    },
                    "failover": {
                        "type": "string"
                    },
                    "multiValueAnswer": {
                        "type": "boolean"
                    },
                    "ttl": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "resourceRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudRoute53-CloudRoute53ResourceRecordViewModel"
                        }
                    },
                    "aliasTarget": {
                        "$ref": "#/components/schemas/CloudRoute53-CloudRoute53AliasTargetViewModel"
                    },
                    "healthCheckId": {
                        "type": "string"
                    },
                    "trafficPolicyInstanceId": {
                        "type": "string"
                    }
                }
            },
            "CloudRoute53-CloudRoute53QueryLoggingConfigViewModel": {
                "type": "object",
                "properties": {
                    "cloudWatchLogsLogGroupArn": {
                        "type": "string"
                    },
                    "hostedZoneId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "CloudRoute53-CloudRoute53GeoLocationViewModel": {
                "type": "object",
                "properties": {
                    "continentCode": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "subdivisionCode": {
                        "type": "string"
                    }
                }
            },
            "CloudRoute53-CloudRoute53ResourceRecordViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CloudRoute53-CloudRoute53AliasTargetViewModel": {
                "type": "object",
                "properties": {
                    "hostedZoneId": {
                        "type": "string"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "evaluateTargetHealth": {
                        "type": "boolean"
                    }
                }
            },
            "CloudRoute53-CloudRoute53RecordSetGroupViewModel": {
                "type": "object",
                "properties": {
                    "hostedZoneMetadata": {
                        "$ref": "#/components/schemas/CloudRoute53-CloudRoute53HostZoneMetadataViewModel"
                    },
                    "recordSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudRoute53-CloudRoute53ResourceRecordSetViewModel"
                        }
                    }
                }
            },
            "CloudRoute53-CloudRoute53HostZoneMetadataViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "callerReference": {
                        "type": "string"
                    },
                    "linkedService": {
                        "$ref": "#/components/schemas/CloudRoute53-CloudRoute53LinkedServiceViewModel"
                    },
                    "recordSetCount": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "CloudRouteTables-CloudRouteTableViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "routeTableId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudRouteTables-CloudRouteViewModel"
                        }
                    },
                    "propagatingVgws": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudRouteTables-CloudPropagatingVgwViewModel"
                        }
                    },
                    "associations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudRouteTables-CloudRouteTableAssociationViewModel"
                        }
                    }
                }
            },
            "CloudRouteTables-CloudRouteViewModel": {
                "type": "object",
                "properties": {
                    "destinationCidrBlock": {
                        "type": "string"
                    },
                    "destinationIpv6CidrBlock": {
                        "type": "string"
                    },
                    "destinationPrefixListId": {
                        "type": "string"
                    },
                    "egressOnlyInternetGatewayId": {
                        "type": "string"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instanceOwnerId": {
                        "type": "string"
                    },
                    "natGatewayId": {
                        "type": "string"
                    },
                    "networkInterfaceId": {
                        "type": "string"
                    },
                    "origin": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "vpcPeeringConnectionId": {
                        "type": "string"
                    },
                    "transitGatewayId": {
                        "type": "string"
                    }
                }
            },
            "CloudRouteTables-CloudPropagatingVgwViewModel": {
                "type": "object",
                "properties": {
                    "gatewayId": {
                        "type": "string"
                    }
                }
            },
            "CloudRouteTables-CloudRouteTableAssociationViewModel": {
                "type": "object",
                "properties": {
                    "isMain": {
                        "type": "boolean"
                    },
                    "routeTableAssociationId": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    }
                }
            },
            "CloudS3Bucket-CloudS3BucketViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "description": "Region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "bucketName": {
                        "type": "string"
                    },
                    "creationTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "bucketLogging": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3BucketLoggingViewModel"
                    },
                    "bucketAcl": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3BucketAclViewModel"
                    },
                    "bucketPolicy": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3BucketPolicyViewModel"
                    },
                    "bucketVersioning": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3BucketVersioningViewModel"
                    },
                    "bucketWebsite": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3BucketWebsiteViewModel"
                    },
                    "bucketEncryption": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3ServerSideEncryptionConfigurationViewModel"
                    },
                    "bucketReplication": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3ReplicationConfigurationViewModel"
                    },
                    "bucketLifecycle": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleConfigurationViewModel"
                    },
                    "publicAccessBlock": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3BucketPublicAccessBlockViewModel"
                    },
                    "s3RegionName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "CloudS3Bucket-CloudS3BucketLoggingViewModel": {
                "type": "object",
                "properties": {
                    "targetPrefix": {
                        "type": "string"
                    },
                    "targetBucketName": {
                        "type": "string"
                    },
                    "grants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3Bucket-CloudS3BucketGrantViewModel"
                        }
                    }
                }
            },
            "CloudS3Bucket-CloudS3BucketAclViewModel": {
                "type": "object",
                "properties": {
                    "ownerId": {
                        "type": "string"
                    },
                    "ownerDisplayName": {
                        "type": "string"
                    },
                    "grants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3Bucket-CloudS3BucketGrantViewModel"
                        }
                    }
                }
            },
            "CloudS3Bucket-CloudS3BucketPolicyViewModel": {
                "type": "object",
                "properties": {
                    "document": {
                        "type": "string"
                    }
                }
            },
            "CloudS3Bucket-CloudS3BucketVersioningViewModel": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "mfaDelete": {
                        "type": "boolean"
                    }
                }
            },
            "CloudS3Bucket-CloudS3BucketWebsiteViewModel": {
                "type": "object",
                "properties": {
                    "indexDocumentSuffix": {
                        "type": "string"
                    },
                    "errorDocument": {
                        "type": "string"
                    },
                    "routingRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3Bucket-CloudS3RoutingRuleViewModel"
                        }
                    },
                    "redirectAllRequestsTo": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3RoutingRuleRedirectViewModel"
                    }
                }
            },
            "CloudS3Bucket-CloudS3ServerSideEncryptionConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "serverSideEncryptionRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3Bucket-CloudS3ServerSideEncryptionRuleViewModel"
                        }
                    }
                }
            },
            "CloudS3Bucket-CloudS3ReplicationConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3Bucket-CloudS3ReplicationRuleViewModel"
                        }
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecycleConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleRuleViewModel"
                        }
                    }
                }
            },
            "CloudS3Bucket-CloudS3BucketPublicAccessBlockViewModel": {
                "type": "object",
                "properties": {
                    "blockPublicAcls": {
                        "type": "boolean"
                    },
                    "ignorePublicAcls": {
                        "type": "boolean"
                    },
                    "blockPublicPolicy": {
                        "type": "boolean"
                    },
                    "restrictPublicBuckets": {
                        "type": "boolean"
                    }
                }
            },
            "CloudS3Bucket-CloudS3BucketGrantViewModel": {
                "type": "object",
                "properties": {
                    "granteeType": {
                        "type": "string"
                    },
                    "granteeCanonicalUser": {
                        "type": "string"
                    },
                    "granteeDisplayName": {
                        "type": "string"
                    },
                    "granteeEmailAddress": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "granteeURI": {
                        "type": "string"
                    },
                    "granteePremissionHeaderName": {
                        "type": "string"
                    },
                    "granteePremission": {
                        "type": "string"
                    }
                }
            },
            "CloudS3Bucket-CloudS3RoutingRuleViewModel": {
                "type": "object",
                "properties": {
                    "condition": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3RoutingRuleConditionViewModel"
                    },
                    "redirect": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3RoutingRuleRedirectViewModel"
                    }
                }
            },
            "CloudS3Bucket-CloudS3RoutingRuleRedirectViewModel": {
                "type": "object",
                "properties": {
                    "hostName": {
                        "type": "string"
                    },
                    "httpRedirectCode": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "replaceKeyPrefixWith": {
                        "type": "string"
                    },
                    "replaceKeyWith": {
                        "type": "string"
                    }
                }
            },
            "CloudS3Bucket-CloudS3ServerSideEncryptionRuleViewModel": {
                "type": "object",
                "properties": {
                    "serverSideEncryptionByDefault": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3ServerSideEncryptionByDefaultViewModel"
                    }
                }
            },
            "CloudS3Bucket-CloudS3ReplicationRuleViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3ReplicationDestinationViewModel"
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecycleRuleViewModel": {
                "type": "object",
                "properties": {
                    "expiration": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleRuleExpirationViewModel"
                    },
                    "id": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleFilterViewModel"
                    },
                    "status": {
                        "type": "string"
                    },
                    "transition": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleTransitionViewModel"
                    },
                    "noncurrentVersionExpiration": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleRuleNoncurrentVersionExpirationViewModel"
                    },
                    "noncurrentVersionTransition": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleRuleNoncurrentVersionTransitionViewModel"
                    },
                    "transitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleTransitionViewModel"
                        }
                    },
                    "noncurrentVersionTransitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleRuleNoncurrentVersionTransitionViewModel"
                        }
                    },
                    "abortIncompleteMultipartUpload": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleRuleAbortIncompleteMultipartUploadViewModel"
                    }
                }
            },
            "CloudS3Bucket-CloudS3RoutingRuleConditionViewModel": {
                "type": "object",
                "properties": {
                    "httpErrorCodeReturnedEquals": {
                        "type": "string"
                    },
                    "keyPrefixEquals": {
                        "type": "string"
                    }
                }
            },
            "CloudS3Bucket-CloudS3ServerSideEncryptionByDefaultViewModel": {
                "type": "object",
                "properties": {
                    "serverSideEncryptionAlgorithm": {
                        "type": "string"
                    },
                    "serverSideEncryptionKeyManagementServiceKeyId": {
                        "type": "string"
                    }
                }
            },
            "CloudS3Bucket-CloudS3ReplicationDestinationViewModel": {
                "type": "object",
                "properties": {
                    "bucketArn": {
                        "type": "string"
                    },
                    "storageClass": {
                        "type": "string"
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecycleRuleExpirationViewModel": {
                "type": "object",
                "properties": {
                    "date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "dateUtc": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "days": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "expiredObjectDeleteMarker": {
                        "type": "boolean"
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecycleFilterViewModel": {
                "type": "object",
                "properties": {
                    "lifecycleFilterPredicate": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleFilterPredicateViewModel"
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecycleTransitionViewModel": {
                "type": "object",
                "properties": {
                    "date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "dateUtc": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "days": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "storageClass": {
                        "type": "string"
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecycleRuleNoncurrentVersionExpirationViewModel": {
                "type": "object",
                "properties": {
                    "noncurrentDays": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecycleRuleNoncurrentVersionTransitionViewModel": {
                "type": "object",
                "properties": {
                    "noncurrentDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "storageClass": {
                        "type": "string"
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecycleRuleAbortIncompleteMultipartUploadViewModel": {
                "type": "object",
                "properties": {
                    "daysAfterInitiation": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecycleFilterPredicateViewModel": {
                "type": "object",
                "properties": {
                    "prefixOperand": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecyclePrefixPredicateViewModel"
                    },
                    "tagOperands": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3Bucket-CloudS3LifecycleTagPredicateViewModel"
                        }
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecyclePrefixPredicateViewModel": {
                "type": "object",
                "properties": {
                    "prefix": {
                        "type": "string"
                    }
                }
            },
            "CloudS3Bucket-CloudS3LifecycleTagPredicateViewModel": {
                "type": "object",
                "properties": {
                    "tag": {
                        "$ref": "#/components/schemas/CloudS3Bucket-CloudS3TagViewModel"
                    }
                }
            },
            "CloudS3Bucket-CloudS3TagViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudSecurityGroupWithSrlViewModel": {
                "type": "object",
                "properties": {
                    "securityGroupId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "services": {
                        "type": "object",
                        "properties": {
                            "inbound": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                                }
                            },
                            "outbound": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                                }
                            }
                        }
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "securityGroupName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcName": {
                        "type": "string"
                    },
                    "regionId": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "type": "string"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "srl": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudSecurityGroupRevisionViewModel": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "vpc": {
                        "type": "string"
                    },
                    "revisionId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudSecurityGroup": {
                        "type": "object"
                    },
                    "auditEvent": {
                        "type": "object"
                    }
                }
            },
            "CloudSnsSubscriptions-CloudSnsSubscriptionViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "description": "Region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "endpoint": {
                        "description": "Gets and sets the property Endpoint.\r\nThe subscription's endpoint (format depends on the protocol).",
                        "type": "string"
                    },
                    "owner": {
                        "description": "Gets and sets the property Owner.\r\nThe subscription's owner.",
                        "type": "string"
                    },
                    "protocol": {
                        "description": "Gets and sets the property Protocol.\r\nThe subscription's protocol.",
                        "type": "string"
                    },
                    "subscriptionArn": {
                        "description": "Gets and sets the property SubscriptionArn.\r\nThe subscription's ARN.",
                        "type": "string"
                    },
                    "topicArn": {
                        "description": "Gets and sets the property TopicArn.\r\nThe ARN of the subscription's topic.",
                        "type": "string"
                    }
                }
            },
            "CloudSnsTopics-CloudSnsTopicViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "description": "Region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "policy": {
                        "$ref": "#/components/schemas/CloudSnsTopics-CloudSnsTopicPolicyViewModel",
                        "description": "Gets and sets the property Endpoint.\r\nThe subscription's endpoint (format depends on the protocol)."
                    },
                    "owner": {
                        "description": "Gets and sets the property Owner.\r\nThe subscription's owner.",
                        "type": "string"
                    },
                    "topicArn": {
                        "description": "Gets and sets the property TopicArn.\r\nThe ARN of the subscription's topic.",
                        "type": "string"
                    },
                    "kmsMasterKey": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subscriptionsConfirmed": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "subscriptionsDeleted": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "subscriptionsPending": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "effectiveDeliveryPolicy": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deliveryPolicy": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "CloudSnsTopics-CloudSnsTopicPolicyViewModel": {
                "type": "object",
                "properties": {
                    "document": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlInstanceViewModel": {
                "type": "object",
                "properties": {
                    "backendType": {
                        "type": "string"
                    },
                    "connectionName": {
                        "type": "string"
                    },
                    "databaseVersion": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "failoverReplica": {
                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlFailoverReplicaDataViewModel"
                    },
                    "gceZone": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlIpMappingViewModel"
                        }
                    },
                    "ipv6Address": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "masterInstanceName": {
                        "type": "string"
                    },
                    "maxDiskSize": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "onPremisesConfiguration": {
                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlOnPremisesConfigurationViewModel"
                    },
                    "project": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "replicaConfiguration": {
                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlReplicaConfigurationViewModel"
                    },
                    "replicaNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "serverCaCert": {
                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlSslCertViewModel"
                    },
                    "serviceAccountEmailAddress": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlSettingsViewModel"
                    },
                    "state": {
                        "type": "string"
                    },
                    "suspensionReason": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "gcpCloudSqlUser": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlUserViewModel"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlFailoverReplicaDataViewModel": {
                "type": "object",
                "properties": {
                    "available": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlIpMappingViewModel": {
                "type": "object",
                "properties": {
                    "ipAddress": {
                        "type": "string"
                    },
                    "timeToRetireRaw": {
                        "type": "string"
                    },
                    "timeToRetire": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlOnPremisesConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "hostPort": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlReplicaConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "failoverTarget": {
                        "type": "boolean"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "mysqlReplicaConfiguration": {
                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlMySqlReplicaConfigurationViewModel"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlSslCertViewModel": {
                "type": "object",
                "properties": {
                    "certSerialNumber": {
                        "type": "string"
                    },
                    "commonName": {
                        "type": "string"
                    },
                    "createTimeRaw": {
                        "type": "string"
                    },
                    "createTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "expirationTimeRaw": {
                        "type": "string"
                    },
                    "expirationTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "sha1Fingerprint": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlSettingsViewModel": {
                "type": "object",
                "properties": {
                    "activationPolicy": {
                        "type": "string"
                    },
                    "authorizedGaeApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "availabilityType": {
                        "type": "string"
                    },
                    "backupConfiguration": {
                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlBackupConfigurationViewModel"
                    },
                    "crashSafeReplicationEnabled": {
                        "type": "boolean"
                    },
                    "dataDiskSizeGb": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "dataDiskType": {
                        "type": "string"
                    },
                    "databaseFlags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlDatabaseFlagsViewModel"
                        }
                    },
                    "databaseReplicationEnabled": {
                        "type": "boolean"
                    },
                    "ipConfiguration": {
                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlIpConfigurationViewModel"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "locationPreference": {
                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlLocationPreferenceViewModel"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlMaintenanceWindowViewModel"
                    },
                    "pricingPlan": {
                        "type": "string"
                    },
                    "replicationType": {
                        "type": "string"
                    },
                    "settingsVersion": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "storageAutoResize": {
                        "type": "boolean"
                    },
                    "storageAutoResizeLimit": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "tier": {
                        "type": "string"
                    },
                    "userLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlUserViewModel": {
                "type": "object",
                "properties": {
                    "eTag": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlMySqlReplicaConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "caCertificate": {
                        "type": "string"
                    },
                    "clientCertificate": {
                        "type": "string"
                    },
                    "clientKey": {
                        "type": "string"
                    },
                    "connectRetryInterval": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dumpFilePath": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "masterHeartbeatPeriod": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "password": {
                        "type": "string"
                    },
                    "sslCipher": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "verifyServerCertificate": {
                        "type": "boolean"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlBackupConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "binaryLogEnabled": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "replicationLogArchivingEnabled": {
                        "type": "boolean"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlDatabaseFlagsViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlIpConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "authorizedNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Sql-GcpCloudSqlAclEntryViewModel"
                        }
                    },
                    "ipv4Enabled": {
                        "type": "boolean"
                    },
                    "requireSsl": {
                        "type": "boolean"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlLocationPreferenceViewModel": {
                "type": "object",
                "properties": {
                    "followGaeApplication": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlMaintenanceWindowViewModel": {
                "type": "object",
                "properties": {
                    "day": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "hour": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "updateTrack": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Sql-GcpCloudSqlAclEntryViewModel": {
                "type": "object",
                "properties": {
                    "expirationTimeRaw": {
                        "type": "string"
                    },
                    "expirationTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "CloudSqs-CloudSqsViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "createdTimestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastModifiedTimestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "messageRetentionPeriod": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "receiveMessageWaitTimeSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "kmsDataKeyReusePeriodSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "redrivePolicy": {
                        "$ref": "#/components/schemas/CloudSqs-CloudSqsViewModel-AwsSqsRedrivePolicyViewModel"
                    },
                    "kmsMasterKeyId": {
                        "type": "string"
                    },
                    "visibilityTimeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "queueUrl": {
                        "type": "string",
                        "readOnly": true
                    },
                    "maximumMessageSize": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "delaySeconds": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "sqsManagedSseEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "CloudSqs-CloudSqsViewModel-AwsSqsRedrivePolicyViewModel": {
                "type": "object",
                "properties": {
                    "deadLetterTargetArn": {
                        "type": "string"
                    },
                    "maxReceiveCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Models-CloudSubnetViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timeStamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "cidrBlock": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "defaultForAz": {
                        "type": "boolean"
                    },
                    "availableIpAddressCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "mapPublicIpOnLaunch": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ownerId": {
                        "type": "string"
                    }
                }
            },
            "CloudTrail-CloudTrailViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "description": "Region",
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "CloudAccountId",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "AccountId",
                        "type": "integer",
                        "readOnly": true
                    },
                    "cloudWatchLogsLogGroupArn": {
                        "description": "Gets and sets the property CloudWatchLogsLogGroupArn.\r\nSpecifies an Amazon Resource Name (ARN), a unique identifier that represents\r\nthe log group to which CloudTrail logs will be delivered.",
                        "type": "string"
                    },
                    "cloudWatchLogsRoleArn": {
                        "description": "Gets and sets the property CloudWatchLogsRoleArn.\r\nSpecifies the role for the CloudWatch Logs endpoint to assume to write to\r\na user's log group.",
                        "type": "string"
                    },
                    "homeRegion": {
                        "description": "Gets and sets the property HomeRegion.\r\nThe region in which the trail was created.",
                        "type": "string"
                    },
                    "includeGlobalServiceEvents": {
                        "description": "Gets and sets the property IncludeGlobalServiceEvents.\r\nSet to True to include AWS API calls from AWS global services such as IAM.\r\n Otherwise, False.",
                        "type": "boolean"
                    },
                    "isMultiRegionTrail": {
                        "description": "Gets and sets the property IsMultiRegionTrail.\r\nSpecifies whether the trail belongs only to one region or exists in all regions.",
                        "type": "boolean"
                    },
                    "kmsKeyId": {
                        "description": "Gets and sets the property KmsKeyId.\r\nSpecifies the KMS key ID that encrypts the logs delivered by CloudTrail.\r\nThe value is a fully specified ARN to a KMS key in the format:\r\narn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
                        "type": "string"
                    },
                    "logFileValidationEnabled": {
                        "description": "Gets and sets the property LogFileValidationEnabled.\r\nSpecifies whether log file validation is enabled.",
                        "type": "boolean"
                    },
                    "s3BucketName": {
                        "description": "Gets and sets the property S3BucketName.\r\nName of the Amazon S3 bucket into which CloudTrail delivers your trail files.\r\nSee Amazon S3 Bucket Naming Requirements.",
                        "type": "string"
                    },
                    "s3KeyPrefix": {
                        "description": "Gets and sets the property S3KeyPrefix.\r\nSpecifies the Amazon S3 key prefix that comes after the name of the bucket\r\nyou have designated for log file delivery. For more information, see Finding\r\nYour CloudTrail Log Files.The maximum length is 200 characters.",
                        "type": "string"
                    },
                    "snsTopicArn": {
                        "description": "Gets and sets the property SnsTopicARN.\r\nSpecifies the ARN of the Amazon SNS topic that CloudTrail uses to send notifications\r\nwhen log files are delivered. The format of a topic ARN is:\r\narn:aws:sns:us-east-1:123456789012:MyTopic",
                        "type": "string"
                    },
                    "snsTopicName": {
                        "description": "Gets and sets the property SnsTopicName.\r\nThis field is deprecated. Use SnsTopicARN.",
                        "type": "string"
                    },
                    "trailArn": {
                        "description": "Gets and sets the property TrailARN.\r\nSpecifies the ARN of the trail. The format of a trail ARN is:\r\narn:aws:cloudtrail:us-east-1:123456789012:trail/MyTrail",
                        "type": "string"
                    },
                    "cloudTrailStatus": {
                        "$ref": "#/components/schemas/CloudTrail-CloudTrailStatusViewModel",
                        "description": "CloudTrail status"
                    }
                }
            },
            "CloudTrail-CloudTrailStatusViewModel": {
                "type": "object",
                "properties": {
                    "isLogging": {
                        "description": "Gets and sets the property IsLogging.\r\nWhether the CloudTrail is currently logging AWS API calls.",
                        "type": "boolean"
                    },
                    "latestCloudWatchLogsDeliveryError": {
                        "description": "Gets and sets the property LatestCloudWatchLogsDeliveryError.\r\nDisplays any CloudWatch Logs error that CloudTrail encountered when attempting\r\nto deliver logs to CloudWatch Logs.",
                        "type": "string"
                    },
                    "latestCloudWatchLogsDeliveryTime": {
                        "format": "date-time",
                        "description": "Gets and sets the property LatestCloudWatchLogsDeliveryTime.\r\nDisplays the most recent date and time when CloudTrail delivered logs to\r\nCloudWatch Logs.",
                        "type": "string"
                    },
                    "latestDeliveryAttemptSucceeded": {
                        "description": "Gets and sets the property LatestDeliveryAttemptSucceeded.\r\nThis field is deprecated.",
                        "type": "string"
                    },
                    "latestDeliveryAttemptTime": {
                        "description": "Gets and sets the property LatestDeliveryAttemptTime.\r\nThis field is deprecated.",
                        "type": "string"
                    },
                    "latestDeliveryError": {
                        "description": "Gets and sets the property LatestDeliveryError.\r\nDisplays any Amazon S3 error that CloudTrail encountered when attempting\r\nto deliver log files to the designated bucket. For more information see the\r\ntopic Error Responses in the Amazon S3 API Reference.\r\nThis error occurs only when there is a problem with the destination S3 bucket\r\nand will not occur for timeouts. To resolve the issue, create a new bucket\r\nand call UpdateTrail to specify the new bucket, or fix the existing objects\r\nso that CloudTrail can again write to the bucket.",
                        "type": "string"
                    },
                    "latestDeliveryTime": {
                        "format": "date-time",
                        "description": "Gets and sets the property LatestDeliveryTime.\r\nSpecifies the date and time that CloudTrail last delivered log files to an\r\naccount's Amazon S3 bucket.",
                        "type": "string"
                    },
                    "latestDigestDeliveryError": {
                        "description": "Gets and sets the property LatestDigestDeliveryError.\r\nDisplays any Amazon S3 error that CloudTrail encountered when attempting\r\nto deliver a digest file to the designated bucket. For more information see\r\nthe topic Error Responses in the Amazon S3 API Reference.\r\nThis error occurs only when there is a problem with the destination S3 bucket\r\nand will not occur for timeouts. To resolve the issue, create a new bucket\r\nand call UpdateTrail to specify the new bucket, or fix the existing objects\r\nso that CloudTrail can again write to the bucket.",
                        "type": "string"
                    },
                    "latestDigestDeliveryTime": {
                        "format": "date-time",
                        "description": "Gets and sets the property LatestDigestDeliveryTime.\r\nSpecifies the date and time that CloudTrail last delivered a digest file\r\nto an account's Amazon S3 bucket.",
                        "type": "string"
                    },
                    "latestNotificationAttemptSucceeded": {
                        "description": "Gets and sets the property LatestNotificationAttemptSucceeded.\r\nThis field is deprecated.",
                        "type": "string"
                    },
                    "latestNotificationAttemptTime": {
                        "description": "Gets and sets the property LatestNotificationAttemptTime.\r\nThis field is deprecated.",
                        "type": "string"
                    },
                    "latestNotificationError": {
                        "description": "Gets and sets the property LatestNotificationError.\r\nDisplays any Amazon SNS error that CloudTrail encountered when attempting\r\nto send a notification. For more information about Amazon SNS errors, see\r\nthe Amazon SNS Developer Guide.",
                        "type": "string"
                    },
                    "latestNotificationTime": {
                        "format": "date-time",
                        "description": "Gets and sets the property LatestNotificationTime.\r\nSpecifies the date and time of the most recent Amazon SNS notification that\r\nCloudTrail has written a new log file to an account's Amazon S3 bucket.",
                        "type": "string"
                    },
                    "startLoggingTime": {
                        "format": "date-time",
                        "description": "Gets and sets the property StartLoggingTime.\r\nSpecifies the most recent date and time when CloudTrail started recording\r\nAPI calls for an AWS account.",
                        "type": "string"
                    },
                    "stopLoggingTime": {
                        "format": "date-time",
                        "description": "Gets and sets the property StopLoggingTime.\r\nSpecifies the most recent date and time when CloudTrail stopped recording\r\nAPI calls for an AWS account.",
                        "type": "string"
                    },
                    "timeLoggingStarted": {
                        "description": "Gets and sets the property TimeLoggingStarted.\r\nThis field is deprecated.",
                        "type": "string"
                    },
                    "timeLoggingStopped": {
                        "description": "Gets and sets the property TimeLoggingStopped.\r\nThis field is deprecated.",
                        "type": "string"
                    },
                    "externalId": {
                        "description": "ExternalId",
                        "type": "string"
                    }
                }
            },
            "CloudVolume-CloudVolumeViewModel": {
                "type": "object",
                "properties": {
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudVolume-CloudVolumeAttachmentViewModel"
                        }
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "createTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "encrypted": {
                        "type": "boolean"
                    },
                    "iops": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "size": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "snapshotId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "volumeId": {
                        "type": "string"
                    },
                    "volumeType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "CloudVolume-CloudVolumeAttachmentViewModel": {
                "type": "object",
                "properties": {
                    "attachTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleteOnTermination": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "volumeId": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudVpcViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "timeStamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cidrBlock": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "ownerId": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudVpcPeeringConnectionViewModel": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "timeStamp": {
                        "format": "date-time",
                        "type": "string",
                        "readOnly": true
                    },
                    "vpcPeeringConnectionId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "requesterVpcInfo": {
                        "$ref": "#/components/schemas/Models-CloudVpcPeeringInfoViewModel",
                        "readOnly": true
                    },
                    "accepterVpcInfo": {
                        "$ref": "#/components/schemas/Models-CloudVpcPeeringInfoViewModel",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expirationTime": {
                        "format": "date-time",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Models-CloudVpcPeeringInfoViewModel": {
                "type": "object",
                "properties": {
                    "externalAccountId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vpcId": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cidrBlock": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Falconetix-Model-AwsVPNConnectionViewModel": {
                "type": "object",
                "properties": {
                    "customerGatewayConfiguration": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsVpnConnectionCustomerGatewayConfigurationViewModel"
                    },
                    "customerGatewayId": {
                        "type": "string"
                    },
                    "options": {
                        "$ref": "#/components/schemas/Falconetix-Model-AwsEC2VpnConnectionOptionsViewModel"
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsEC2VpnStaticRouteViewModel"
                        }
                    },
                    "state": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsEC2TagViewModel"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "vgwTelemetry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-AwsEC2VgwTelemetryViewModel"
                        }
                    },
                    "vpnConnectionId": {
                        "type": "string"
                    },
                    "vpnGatewayId": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsVpnConnectionCustomerGatewayConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "customerGatewayId": {
                        "type": "string"
                    },
                    "vpnGatewayId": {
                        "type": "string"
                    },
                    "vpnConnectionType": {
                        "type": "string"
                    },
                    "vpnConnectionAttributes": {
                        "type": "string"
                    },
                    "ipsecTunnel": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionIpsecTunnelViewModel"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsEC2VpnConnectionOptionsViewModel": {
                "type": "object",
                "properties": {
                    "staticRoutesOnly": {
                        "type": "boolean"
                    },
                    "tunnelOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudVPNConnection-AwsEC2VpnTunnelOptionSetViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-AwsEC2VpnStaticRouteViewModel": {
                "type": "object",
                "properties": {
                    "destinationCidrBlock": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsEC2TagViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsEC2VgwTelemetryViewModel": {
                "type": "object",
                "properties": {
                    "acceptedRouteCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastStatusChange": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "outsideIpAddress": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusMessage": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-VpcConnectionIpsecTunnelViewModel": {
                "type": "object",
                "properties": {
                    "customerGateway": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionCustomerGatewayViewModel"
                    },
                    "vpnGateway": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionVpnGatewayViewModel"
                    },
                    "ike": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionIkeViewModel"
                    },
                    "ipsec": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionIpsecViewModel"
                    }
                }
            },
            "CloudVPNConnection-AwsEC2VpnTunnelOptionSetViewModel": {
                "type": "object",
                "properties": {
                    "dpdTimeoutAction": {
                        "type": "string"
                    },
                    "dpdTimeoutSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ikeVersions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudVPNConnection-AwsEC2VpnIKEVersionViewModel"
                        }
                    },
                    "outsideIpAddress": {
                        "type": "string"
                    },
                    "phase1DHGroupNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudVPNConnection-AwsEC2VpnPhase1DHGroupNumberViewModel"
                        }
                    },
                    "phase1EncryptionAlgorithms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudVPNConnection-AwsEC2VpnPhase1EncryptionAlgorithmViewModel"
                        }
                    },
                    "phase1IntegrityAlgorithms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudVPNConnection-AwsEC2VpnPhase1IntegrityAlgorithmViewModel"
                        }
                    },
                    "phase1LifetimeSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "phase2DHGroupNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudVPNConnection-AwsEC2VpnPhase2DHGroupNumberViewModel"
                        }
                    },
                    "phase2EncryptionAlgorithms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudVPNConnection-AwsEC2VpnPhase2EncryptionAlgorithmViewModel"
                        }
                    },
                    "phase2IntegrityAlgorithms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudVPNConnection-AwsEC2VpnPhase2IntegrityAlgorithmViewModel"
                        }
                    },
                    "phase2LifetimeSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "preSharedKey": {
                        "type": "string"
                    },
                    "rekeyFuzzPercentage": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rekeyMarginTimeSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "replayWindowSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startupAction": {
                        "type": "string"
                    },
                    "tunnelInsideCidr": {
                        "type": "string"
                    },
                    "tunnelInsideIpv6Cidr": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-VpcConnectionCustomerGatewayViewModel": {
                "type": "object",
                "properties": {
                    "tunnelOutsideAddress": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionTunnelOutsideAddressViewModel"
                    },
                    "tunnelInsideAddress": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionTunnelInsideAddressViewModel"
                    },
                    "bgp": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionBgpViewModel"
                    }
                }
            },
            "Falconetix-Model-VpcConnectionVpnGatewayViewModel": {
                "type": "object",
                "properties": {
                    "tunnelOutsideAddress": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionTunnelOutsideAddressViewModel"
                    },
                    "tunnelInsideAddress": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionTunnelInsideAddressViewModel"
                    },
                    "bgp": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionBgpViewModel"
                    }
                }
            },
            "Falconetix-Model-VpcConnectionIkeViewModel": {
                "type": "object",
                "properties": {
                    "authenticationProtocol": {
                        "type": "string"
                    },
                    "encryptionProtocol": {
                        "type": "string"
                    },
                    "lifetime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "perfectForwardSecrecy": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "preSharedKey": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-VpcConnectionIpsecViewModel": {
                "type": "object",
                "properties": {
                    "protocol": {
                        "type": "string"
                    },
                    "authenticationProtocol": {
                        "type": "string"
                    },
                    "encryptionProtocol": {
                        "type": "string"
                    },
                    "lifetime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "perfectForwardSecrecy": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "clearDfBit": {
                        "type": "string"
                    },
                    "fragmentationBeforeEncryption": {
                        "type": "string"
                    },
                    "tcpMssAdjustment": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "deadPeerDetection": {
                        "$ref": "#/components/schemas/Falconetix-Model-VpcConnectionDeadPeerDetectionViewModel"
                    }
                }
            },
            "CloudVPNConnection-AwsEC2VpnIKEVersionViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CloudVPNConnection-AwsEC2VpnPhase1DHGroupNumberViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudVPNConnection-AwsEC2VpnPhase1EncryptionAlgorithmViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CloudVPNConnection-AwsEC2VpnPhase1IntegrityAlgorithmViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CloudVPNConnection-AwsEC2VpnPhase2DHGroupNumberViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudVPNConnection-AwsEC2VpnPhase2EncryptionAlgorithmViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CloudVPNConnection-AwsEC2VpnPhase2IntegrityAlgorithmViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-VpcConnectionTunnelOutsideAddressViewModel": {
                "type": "object",
                "properties": {
                    "ipAddress": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-VpcConnectionTunnelInsideAddressViewModel": {
                "type": "object",
                "properties": {
                    "ipAddress": {
                        "type": "string"
                    },
                    "networkMask": {
                        "type": "string"
                    },
                    "networkCidr": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-VpcConnectionBgpViewModel": {
                "type": "object",
                "properties": {
                    "asn": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "holdTime": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-VpcConnectionDeadPeerDetectionViewModel": {
                "type": "object",
                "properties": {
                    "interval": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "retries": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CloudDirectConnect-AwsVpnGatewayViewModel": {
                "type": "object",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcAttachment": {
                        "type": "string"
                    },
                    "vpnGatewayId": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-AwsWAFRegionalViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "webACLId": {
                        "type": "string"
                    },
                    "wafRegionalResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "EventRule-EventRuleViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "managedBy": {
                        "type": "string"
                    },
                    "eventPattern": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "scheduleExpression": {
                        "type": "string"
                    },
                    "state": {
                        "enum": [
                            "Enabled",
                            "Disabled"
                        ],
                        "type": "string"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventRule-AwsEventTargetViewModel"
                        }
                    }
                }
            },
            "EventRule-AwsEventTargetViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "input": {
                        "type": "string"
                    },
                    "inputPath": {
                        "type": "string"
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "inputTransformer": {
                        "$ref": "#/components/schemas/EventRule-AwsEventTargetTransformerViewModel"
                    },
                    "sqsParameters": {
                        "$ref": "#/components/schemas/EventRule-AwsEventTargetSqsViewModel"
                    }
                }
            },
            "EventRule-AwsEventTargetTransformerViewModel": {
                "type": "object",
                "properties": {
                    "inputPathsMap": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "inputTemplate": {
                        "type": "string"
                    }
                }
            },
            "EventRule-AwsEventTargetSqsViewModel": {
                "type": "object",
                "properties": {
                    "messageGroupId": {
                        "type": "string"
                    }
                }
            },
            "Compliance-Exclusion-ExclusionViewModel": {
                "type": "object",
                "properties": {
                    "platform": {
                        "description": "Exclusion platform",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "[Required] Exclusion ID",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "rulesetId": {
                        "format": "int64",
                        "description": "[Required] Ruleset ID to apply exclusion on.",
                        "type": "integer"
                    },
                    "rules": {
                        "description": "[Optional] List of rules to apply the exclusion on.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-RuleViewModel"
                        }
                    },
                    "logicExpressions": {
                        "description": "[Optional] The GSL logic expressions of the exclusion.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'(( and category = ('Package'|'Malware'))$)?|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])|(eventInfo\\.userInfo\\.username like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|('[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' in\\(eventInfo\\.userInfo\\.roles\\))|(namespace like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(rootOwner\\.kind like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and rootOwner\\.name like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(labels contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(labels contain-any [ value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(labels contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|((version|package-manager.path) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and category = 'Package')|(\\(scannedAsset.entityName like '[a-zA-Z0-9/.\\-_:%\"*{{}},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'( or scannedAsset.entityName like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'){{0,9}}\\)( and category = 'Package')$)|((files contain [file-path like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+']|files contain [contents contain [payload-sha256 like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+']]) and category = 'InsecureContent')|(files contain [file-path like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'] and category = 'Malware')",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "regions": {
                        "description": "[Optional] List of regions to exclude, for example 'us_east_1'.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "severities": {
                        "description": "[Optional] List of severities to exclude. Valid values: ['Informational', 'Low', 'Medium', 'High', 'Critical']",
                        "type": "array",
                        "items": {
                            "enum": [
                                "Informational",
                                "Low",
                                "Medium",
                                "High",
                                "Critical"
                            ],
                            "type": "string"
                        }
                    },
                    "cloudAccountIds": {
                        "description": "[Optional] List of cloud account IDs to apply exclusion on.\r\nIf neither cloud account IDs nor organizational unit IDs are supplied, exclusion will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "organizationalUnitIds": {
                        "description": "[Optional] List of organizational unit IDs to apply exclusion on.\r\nIf neither organizational unit IDs nor cloud account IDs are supplied, exclusion will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "comment": {
                        "description": "Comment text (free text)",
                        "type": "string"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Falconetix-Model-DateTimeRange",
                        "description": "[Optional] Date range for the exclusion to take effect.\r\nThe exclusion will take effect permanently unless a specific date range is specified.\r\nLeaving 'From' null will take only 'To' into account.\r\nLeaving 'To' null will take only 'From' into account.\r\nDateRange with both 'From' and 'To' null will be disregarded."
                    },
                    "cloudAccountType": {
                        "description": "CloudAccountType (string)\r\nTo know from which vendor the exclusion was created\r\ndefault null",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Compliance-RuleViewModel": {
                "type": "object",
                "properties": {
                    "logicHash": {
                        "description": "Rule logic hash",
                        "pattern": "^[A-Za-z0-9+/]{22}?$",
                        "type": "string"
                    },
                    "rlmId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "Rule ID",
                        "type": "string"
                    },
                    "name": {
                        "description": "Rule name",
                        "type": "string"
                    }
                }
            },
            "Compliance-Exclusion-ExclusionPostRequestModel": {
                "type": "object",
                "properties": {
                    "rulesetId": {
                        "format": "int64",
                        "description": "[Required] Ruleset ID to apply exclusion on.",
                        "type": "integer"
                    },
                    "rules": {
                        "description": "[Optional] List of rules to apply the exclusion on.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-RuleViewModel"
                        }
                    },
                    "logicExpressions": {
                        "description": "[Optional] The GSL logic expressions of the exclusion.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'(( and category = ('Package'|'Malware'))$)?|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])|(eventInfo\\.userInfo\\.username like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|('[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' in\\(eventInfo\\.userInfo\\.roles\\))|(namespace like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(rootOwner\\.kind like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and rootOwner\\.name like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(labels contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(labels contain-any [ value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(labels contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|((version|package-manager.path) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and category = 'Package')|(\\(scannedAsset.entityName like '[a-zA-Z0-9/.\\-_:%\"*{{}},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'( or scannedAsset.entityName like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'){{0,9}}\\)( and category = 'Package')$)|((files contain [file-path like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+']|files contain [contents contain [payload-sha256 like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+']]) and category = 'InsecureContent')|(files contain [file-path like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'] and category = 'Malware')",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "regions": {
                        "description": "[Optional] List of regions to exclude, for example 'us_east_1'.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "severities": {
                        "description": "[Optional] List of severities to exclude. Valid values: ['Informational', 'Low', 'Medium', 'High', 'Critical']",
                        "type": "array",
                        "items": {
                            "enum": [
                                "Informational",
                                "Low",
                                "Medium",
                                "High",
                                "Critical"
                            ],
                            "type": "string"
                        }
                    },
                    "cloudAccountIds": {
                        "description": "[Optional] List of cloud account IDs to apply exclusion on.\r\nIf neither cloud account IDs nor organizational unit IDs are supplied, exclusion will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "organizationalUnitIds": {
                        "description": "[Optional] List of organizational unit IDs to apply exclusion on.\r\nIf neither organizational unit IDs nor cloud account IDs are supplied, exclusion will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "comment": {
                        "description": "Comment text (free text)",
                        "type": "string"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Falconetix-Model-DateTimeRange",
                        "description": "[Optional] Date range for the exclusion to take effect.\r\nThe exclusion will take effect permanently unless a specific date range is specified.\r\nLeaving 'From' null will take only 'To' into account.\r\nLeaving 'To' null will take only 'From' into account.\r\nDateRange with both 'From' and 'To' null will be disregarded."
                    },
                    "cloudAccountType": {
                        "description": "CloudAccountType (string)\r\nTo know from which vendor the exclusion was created\r\ndefault null",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "platform": {
                        "description": "Platform (string)\r\nFor CIEM to skip no ruleset validation\r\ndefault null",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Compliance-Exclusion-ExclusionPutRequestModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "[Required] Exclusion ID",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "rulesetId": {
                        "format": "int64",
                        "description": "[Required] Ruleset ID to apply exclusion on.",
                        "type": "integer"
                    },
                    "rules": {
                        "description": "[Optional] List of rules to apply the exclusion on.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-RuleViewModel"
                        }
                    },
                    "logicExpressions": {
                        "description": "[Optional] The GSL logic expressions of the exclusion.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'(( and category = ('Package'|'Malware'))$)?|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])|(eventInfo\\.userInfo\\.username like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|('[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' in\\(eventInfo\\.userInfo\\.roles\\))|(namespace like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(rootOwner\\.kind like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and rootOwner\\.name like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(labels contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(labels contain-any [ value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(labels contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|((version|package-manager.path) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and category = 'Package')|(\\(scannedAsset.entityName like '[a-zA-Z0-9/.\\-_:%\"*{{}},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'( or scannedAsset.entityName like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'){{0,9}}\\)( and category = 'Package')$)|((files contain [file-path like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+']|files contain [contents contain [payload-sha256 like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+']]) and category = 'InsecureContent')|(files contain [file-path like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'] and category = 'Malware')",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "regions": {
                        "description": "[Optional] List of regions to exclude, for example 'us_east_1'.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "severities": {
                        "description": "[Optional] List of severities to exclude. Valid values: ['Informational', 'Low', 'Medium', 'High', 'Critical']",
                        "type": "array",
                        "items": {
                            "enum": [
                                "Informational",
                                "Low",
                                "Medium",
                                "High",
                                "Critical"
                            ],
                            "type": "string"
                        }
                    },
                    "cloudAccountIds": {
                        "description": "[Optional] List of cloud account IDs to apply exclusion on.\r\nIf neither cloud account IDs nor organizational unit IDs are supplied, exclusion will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "organizationalUnitIds": {
                        "description": "[Optional] List of organizational unit IDs to apply exclusion on.\r\nIf neither organizational unit IDs nor cloud account IDs are supplied, exclusion will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "comment": {
                        "description": "Comment text (free text)",
                        "type": "string"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Falconetix-Model-DateTimeRange",
                        "description": "[Optional] Date range for the exclusion to take effect.\r\nThe exclusion will take effect permanently unless a specific date range is specified.\r\nLeaving 'From' null will take only 'To' into account.\r\nLeaving 'To' null will take only 'From' into account.\r\nDateRange with both 'From' and 'To' null will be disregarded."
                    },
                    "cloudAccountType": {
                        "description": "CloudAccountType (string)\r\nTo know from which vendor the exclusion was created\r\ndefault null",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "platform": {
                        "description": "Platform (string)\r\nFor CIEM to skip no ruleset validation\r\ndefault null",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Compliance-Remediation-RemediationViewModel": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "platform": {
                        "description": "Remediation platform",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "[Required] Remediation ID",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "rules": {
                        "description": "[Optional] List of rules to apply the remediation on.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-RuleViewModel"
                        }
                    },
                    "logicExpressions": {
                        "description": "[Optional] The GSL logic expressions of the remediation.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "severities": {
                        "description": "[Optional] List of severities to remediate. Valid values: ['Informational', 'Low', 'Medium', 'High', 'Critical']",
                        "type": "array",
                        "items": {
                            "enum": [
                                "Informational",
                                "Low",
                                "Medium",
                                "High",
                                "Critical"
                            ],
                            "type": "string"
                        }
                    },
                    "rulesetId": {
                        "format": "int64",
                        "description": "[Required] Ruleset ID to apply remediation on.",
                        "type": "integer"
                    },
                    "cloudAccountIds": {
                        "description": "[Optional] List of cloud account IDs to apply remediation on.\r\nIf neither cloud account IDs nor organizational unit IDs are supplied, remediation will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "comment": {
                        "description": "[Required] Comment text (free text)",
                        "type": "string"
                    },
                    "cloudBots": {
                        "description": "Cloud bots execution expressions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "organizationalUnitIds": {
                        "description": "[Optional] List of organizational unit IDs to apply remediation on.\r\nIf neither organizational unit IDs nor cloud account IDs are supplied, remediation will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Falconetix-Model-DateTimeRange",
                        "description": "[Optional] Date range for the remediation to take effect.\r\nThe exclusion will take effect permanently unless a specific date range is specified.\r\nLeaving 'From' null will take only 'To' into account.\r\nLeaving 'To' null will take only 'From' into account.\r\nDateRange with both 'From' and 'To' null will be disregarded."
                    },
                    "cloudAccountType": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Compliance-Remediation-RemediationPostRequestModel": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "rules": {
                        "description": "[Optional] List of rules to apply the remediation on.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-RuleViewModel"
                        }
                    },
                    "logicExpressions": {
                        "description": "[Optional] The GSL logic expressions of the remediation.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "severities": {
                        "description": "[Optional] List of severities to remediate. Valid values: ['Informational', 'Low', 'Medium', 'High', 'Critical']",
                        "type": "array",
                        "items": {
                            "enum": [
                                "Informational",
                                "Low",
                                "Medium",
                                "High",
                                "Critical"
                            ],
                            "type": "string"
                        }
                    },
                    "rulesetId": {
                        "format": "int64",
                        "description": "[Required] Ruleset ID to apply remediation on.",
                        "type": "integer"
                    },
                    "cloudAccountIds": {
                        "description": "[Optional] List of cloud account IDs to apply remediation on.\r\nIf neither cloud account IDs nor organizational unit IDs are supplied, remediation will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "comment": {
                        "description": "[Required] Comment text (free text)",
                        "type": "string"
                    },
                    "cloudBots": {
                        "description": "Cloud bots execution expressions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "organizationalUnitIds": {
                        "description": "[Optional] List of organizational unit IDs to apply remediation on.\r\nIf neither organizational unit IDs nor cloud account IDs are supplied, remediation will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Falconetix-Model-DateTimeRange",
                        "description": "[Optional] Date range for the remediation to take effect.\r\nThe exclusion will take effect permanently unless a specific date range is specified.\r\nLeaving 'From' null will take only 'To' into account.\r\nLeaving 'To' null will take only 'From' into account.\r\nDateRange with both 'From' and 'To' null will be disregarded."
                    },
                    "platform": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Compliance-Remediation-RemediationPutRequestModel": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "[Required] Remediation ID",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "rules": {
                        "description": "[Optional] List of rules to apply the remediation on.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-RuleViewModel"
                        }
                    },
                    "logicExpressions": {
                        "description": "[Optional] The GSL logic expressions of the remediation.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "severities": {
                        "description": "[Optional] List of severities to remediate. Valid values: ['Informational', 'Low', 'Medium', 'High', 'Critical']",
                        "type": "array",
                        "items": {
                            "enum": [
                                "Informational",
                                "Low",
                                "Medium",
                                "High",
                                "Critical"
                            ],
                            "type": "string"
                        }
                    },
                    "rulesetId": {
                        "format": "int64",
                        "description": "[Required] Ruleset ID to apply remediation on.",
                        "type": "integer"
                    },
                    "cloudAccountIds": {
                        "description": "[Optional] List of cloud account IDs to apply remediation on.\r\nIf neither cloud account IDs nor organizational unit IDs are supplied, remediation will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "comment": {
                        "description": "[Required] Comment text (free text)",
                        "type": "string"
                    },
                    "cloudBots": {
                        "description": "Cloud bots execution expressions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "organizationalUnitIds": {
                        "description": "[Optional] List of organizational unit IDs to apply remediation on.\r\nIf neither organizational unit IDs nor cloud account IDs are supplied, remediation will apply on all cloud accounts.\r\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Falconetix-Model-DateTimeRange",
                        "description": "[Optional] Date range for the remediation to take effect.\r\nThe exclusion will take effect permanently unless a specific date range is specified.\r\nLeaving 'From' null will take only 'To' into account.\r\nLeaving 'To' null will take only 'From' into account.\r\nDateRange with both 'From' and 'To' null will be disregarded."
                    },
                    "platform": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Compliance-RemediationOld-RemediationGetOldViewModel": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "ruleLogicHash": {
                        "pattern": "^[A-Za-z0-9+/]{22}?$",
                        "type": "string"
                    },
                    "ruleName": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "logic": {
                        "pattern": "(name|id){1} (like){1} '{1}[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'{1}",
                        "type": "string"
                    },
                    "rulesetId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "platform": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "cloudBots": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Compliance-RemediationOld-RemediationPostOldViewModel": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "ruleLogicHash": {
                        "pattern": "^[A-Za-z0-9+/]{22}?$",
                        "type": "string"
                    },
                    "ruleName": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "logic": {
                        "pattern": "(name|id){1} (like){1} '{1}[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'{1}",
                        "type": "string"
                    },
                    "rulesetId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "platform": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "cloudBots": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-RuleBundleRequestPostViewModel": {
                "required": [
                    "name",
                    "cloudVendor"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "bundle name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description of the bundle",
                        "type": "string"
                    },
                    "rules": {
                        "description": "list of rules in the bundle",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Compliance-Ruleset-RuleViewModel"
                        }
                    },
                    "hideInCompliance": {
                        "type": "boolean"
                    },
                    "minFeatureTier": {
                        "enum": [
                            "Trial",
                            "Basic",
                            "Advanced",
                            "Premium"
                        ],
                        "type": "string"
                    },
                    "cloudVendor": {
                        "description": "the cloud provider on which the rule will be run",
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "language": {
                        "description": "the language of the text (default, 'en' - English)",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-Compliance-Ruleset-RuleBundleResultViewModel": {
                "type": "object",
                "properties": {
                    "rules": {
                        "description": "list of rules in the bundle",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Compliance-Ruleset-RuleViewModel"
                        },
                        "readOnly": true
                    },
                    "accountId": {
                        "format": "int64",
                        "description": " account id",
                        "type": "integer"
                    },
                    "createdTime": {
                        "format": "date-time",
                        "description": "bundle creation date",
                        "type": "string"
                    },
                    "updatedTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "description": "bundle id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "bundle name",
                        "type": "string"
                    },
                    "description": {
                        "description": "bundle description",
                        "type": "string"
                    },
                    "isTemplate": {
                        "type": "boolean"
                    },
                    "hideInCompliance": {
                        "type": "boolean"
                    },
                    "minFeatureTier": {
                        "enum": [
                            "Trial",
                            "Basic",
                            "Advanced",
                            "Premium"
                        ],
                        "type": "string"
                    },
                    "section": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "tooltipText": {
                        "description": "tooltip text (UI) for the bundle, when hovering over it",
                        "type": "string"
                    },
                    "showBundle": {
                        "type": "boolean"
                    },
                    "systemBundle": {
                        "type": "boolean"
                    },
                    "cloudVendor": {
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "version": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minorVersion": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "availableVersions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Compliance-Ruleset-RuleBundleVersionViewModel"
                        }
                    },
                    "language": {
                        "type": "string"
                    },
                    "rulesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "common": {
                        "type": "boolean"
                    },
                    "icon": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-Compliance-Ruleset-RuleBundleVersionViewModel": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "createdTime": {
                        "type": "string"
                    }
                }
            },
            "Models-RuleBundleRequestViewModel": {
                "required": [
                    "name",
                    "cloudVendor"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int64",
                        "description": "the bundle id (returned in response)",
                        "type": "integer"
                    },
                    "name": {
                        "description": "bundle name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description of the bundle",
                        "type": "string"
                    },
                    "rules": {
                        "description": "list of rules in the bundle",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Compliance-Ruleset-RuleViewModel"
                        }
                    },
                    "hideInCompliance": {
                        "type": "boolean"
                    },
                    "minFeatureTier": {
                        "enum": [
                            "Trial",
                            "Basic",
                            "Advanced",
                            "Premium"
                        ],
                        "type": "string"
                    },
                    "cloudVendor": {
                        "description": "the cloud provider on which the rule will be run",
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "language": {
                        "description": "the language of the text (default, 'en' - English)",
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-ContinuousComplianceNotificationGetViewModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                    },
                    "alertsConsole": {
                        "type": "boolean"
                    },
                    "scheduledReport": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ScheduledReportNotificationViewModel"
                    },
                    "changeDetection": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ChangeDetectionNotificationViewModel"
                    },
                    "gcpSecurityCommandCenterIntegration": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-GcpSecurityCommandCenterIntegrationViewModel"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationFilterViewModel"
                    },
                    "sendOnEachOccurrence": {
                        "type": "boolean"
                    }
                }
            },
            "Compliance-ContinuousCompliance-ScheduledReportNotificationViewModel": {
                "type": "object",
                "properties": {
                    "emailSendingState": {
                        "format": "email",
                        "description": "Email Address",
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "scheduleData": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-ContinuousComplianceNotificationEntity-ReportScheduleData",
                        "description": "Set or Get Notification schedule"
                    }
                }
            },
            "Compliance-ContinuousCompliance-ChangeDetectionNotificationViewModel": {
                "type": "object",
                "properties": {
                    "emailSendingState": {
                        "format": "email",
                        "description": "Email Address",
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "emailPerFindingSendingState": {
                        "format": "email",
                        "description": "Email Address",
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "snsSendingState": {
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string"
                    },
                    "externalTicketCreatingState": {
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string"
                    },
                    "awsSecurityHubIntegrationState": {
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string"
                    },
                    "azureSecurityCenterIntegrationState": {
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string"
                    },
                    "webhookIntegrationState": {
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string"
                    },
                    "slackIntegrationState": {
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string"
                    },
                    "teamsIntegrationState": {
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string"
                    },
                    "eventarcIntegrationState": {
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string"
                    },
                    "emailData": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-ContinuousComplianceNotificationEntity-EmailNotificationData"
                    },
                    "emailPerFindingData": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-ContinuousComplianceNotificationEntity-EmailPerFindingNotificationData"
                    },
                    "snsData": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-SnsDataNotificationViewModel"
                    },
                    "ticketingSystemData": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-TicketingSystemNotificationDataViewModel"
                    },
                    "awsSecurityHubIntegration": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-AwsSecurityHubIntegrationNotificationViewModel"
                    },
                    "azureSecurityCenterIntegration": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-AzureSecurityCenterIntegrationNotificationViewModel"
                    },
                    "webhookData": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-WebhookNotificationDataViewModel"
                    },
                    "slackData": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-SlackNotificationDataViewModel"
                    },
                    "teamsData": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-TeamsNotificationDataViewModel"
                    },
                    "eventarcData": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-EventarcNotificationDataViewModel"
                    }
                }
            },
            "Compliance-ContinuousCompliance-GcpSecurityCommandCenterIntegrationViewModel": {
                "type": "object",
                "properties": {
                    "state": {
                        "enum": [
                            "Disabled",
                            "Enabled"
                        ],
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-ContinuousComplianceNotificationFilterViewModel": {
                "type": "object",
                "properties": {
                    "severities": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "Informational",
                                "Low",
                                "Medium",
                                "High",
                                "Critical"
                            ],
                            "type": "string"
                        }
                    },
                    "entityTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "entityTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-TagRuleEntity"
                        }
                    },
                    "entityNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "entityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-ContinuousComplianceNotificationEntity-ReportScheduleData": {
                "required": [
                    "cronExpression",
                    "recipients"
                ],
                "type": "object",
                "properties": {
                    "cronExpression": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "Detailed",
                            "Summary",
                            "FullCsv",
                            "FullCsvZip",
                            "ExecutivePlatform"
                        ],
                        "type": "string"
                    },
                    "isIntelligence": {
                        "type": "boolean"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-ContinuousComplianceNotificationEntity-EmailNotificationData": {
                "required": [
                    "recipients"
                ],
                "type": "object",
                "properties": {
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-ContinuousComplianceNotificationEntity-EmailPerFindingNotificationData": {
                "required": [
                    "recipients"
                ],
                "type": "object",
                "properties": {
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notificationOutputFormat": {
                        "enum": [
                            "JsonWithFullEntity",
                            "JsonWithBasicEntity",
                            "Json",
                            "PlainText",
                            "SplunkBasic",
                            "ServiceNow",
                            "QRadar",
                            "JsonFirstLevelEntity",
                            "Jira"
                        ],
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-SnsDataNotificationViewModel": {
                "type": "object",
                "properties": {
                    "snsTopicArn": {
                        "description": "Set and Get SNS Topic ARN",
                        "pattern": "^arn:(?<partition>(aws[\\w\\-]*)):(?<service>[\\w]*):(?<region>[\\w\\d-]*):(?<accountId>[\\d]*):(((?<resource>[\\w+=,\\.@\\-_ ]+)[\\/:]?)+)$",
                        "type": "string"
                    },
                    "snsOutputFormat": {
                        "enum": [
                            "JsonWithFullEntity",
                            "JsonWithBasicEntity",
                            "Json",
                            "PlainText",
                            "SplunkBasic",
                            "ServiceNow",
                            "QRadar",
                            "JsonFirstLevelEntity",
                            "Jira"
                        ],
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-TicketingSystemNotificationDataViewModel": {
                "type": "object",
                "properties": {
                    "systemType": {
                        "description": "Set and Get Ticketing System type (ServiceNow)",
                        "enum": [
                            "ServiceNow",
                            "Jira",
                            "PagerDuty"
                        ],
                        "type": "string"
                    },
                    "shouldCloseTickets": {
                        "type": "boolean"
                    },
                    "domain": {
                        "description": "Set and Get ticketing system domain name",
                        "type": "string"
                    },
                    "user": {
                        "description": "Set and Get Ticketing system user name",
                        "type": "string"
                    },
                    "pass": {
                        "description": "Set and Get Ticketing system password (for the user used for access)",
                        "type": "string"
                    },
                    "projectKey": {
                        "description": "Set and Get Ticketing system access key",
                        "type": "string"
                    },
                    "issueType": {
                        "description": "Set and Get Ticketing system default issue type (optional). Tickets opened for Compliance issues will use this issue type.",
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-AwsSecurityHubIntegrationNotificationViewModel": {
                "required": [
                    "externalAccountId",
                    "region"
                ],
                "type": "object",
                "properties": {
                    "externalAccountId": {
                        "pattern": "^\\d{12}$",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-AzureSecurityCenterIntegrationNotificationViewModel": {
                "required": [
                    "subscription"
                ],
                "type": "object",
                "properties": {
                    "subscription": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Compliance-ContinuousCompliance-WebhookNotificationDataViewModel": {
                "required": [
                    "url",
                    "httpMethod",
                    "authMethod",
                    "formatType"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "httpMethod": {
                        "enum": [
                            "Post",
                            "Put",
                            "Get"
                        ],
                        "type": "string"
                    },
                    "authMethod": {
                        "enum": [
                            "NoAuth",
                            "BasicAuth"
                        ],
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "formatType": {
                        "enum": [
                            "JsonWithFullEntity",
                            "JsonWithBasicEntity",
                            "Json",
                            "PlainText",
                            "SplunkBasic",
                            "ServiceNow",
                            "QRadar",
                            "JsonFirstLevelEntity",
                            "Jira"
                        ],
                        "type": "string"
                    },
                    "payloadFormat": {
                        "type": "object"
                    },
                    "ignoreCertificate": {
                        "type": "boolean"
                    },
                    "advancedUrl": {
                        "type": "boolean"
                    }
                }
            },
            "Compliance-ContinuousCompliance-SlackNotificationDataViewModel": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-TeamsNotificationDataViewModel": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-EventarcNotificationDataViewModel": {
                "type": "object",
                "properties": {
                    "channelConnectionId": {
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-ContinuousComplianceNotificationPutViewModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                    },
                    "alertsConsole": {
                        "type": "boolean"
                    },
                    "scheduledReport": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ScheduledReportNotificationViewModel"
                    },
                    "changeDetection": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ChangeDetectionNotificationViewModel"
                    },
                    "gcpSecurityCommandCenterIntegration": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-GcpSecurityCommandCenterIntegrationViewModel"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationFilterViewModel"
                    },
                    "sendOnEachOccurrence": {
                        "type": "boolean"
                    }
                }
            },
            "Compliance-ContinuousCompliance-ContinuousComplianceNotificationPostViewModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                    },
                    "alertsConsole": {
                        "type": "boolean"
                    },
                    "scheduledReport": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ScheduledReportNotificationViewModel"
                    },
                    "changeDetection": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ChangeDetectionNotificationViewModel"
                    },
                    "gcpSecurityCommandCenterIntegration": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-GcpSecurityCommandCenterIntegrationViewModel"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/Compliance-ContinuousCompliance-ContinuousComplianceNotificationFilterViewModel"
                    },
                    "sendOnEachOccurrence": {
                        "type": "boolean"
                    }
                }
            },
            "Compliance-ContinuousCompliance-ContinuousComplianceNotificationSyncViewModel": {
                "type": "object",
                "properties": {
                    "notificationTargets": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "Sns",
                                "EmailPerFinding",
                                "IndexElasticSearch",
                                "PagerDuty",
                                "AwsSecurityHub",
                                "GcpSecurityCommandCenter",
                                "Webhook",
                                "AzureSecurityCenter",
                                "Slack",
                                "AggregatedEmail",
                                "Teams",
                                "Eventarc",
                                "SlackSingleMessage",
                                "TeamsSingleMessage"
                            ],
                            "type": "string"
                        }
                    },
                    "specificPolicies": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "BL-Std-Services-ContinuousAssessment-ContinuousComplianceNotificationService-PublishResult": {
                "type": "object",
                "properties": {
                    "workflowId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "handledPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BL-Std-Services-ContinuousAssessment-ContinuousComplianceNotificationService-PublishResultItem"
                        }
                    }
                }
            },
            "BL-Std-Services-ContinuousAssessment-ContinuousComplianceNotificationService-PublishResultItem": {
                "type": "object",
                "properties": {
                    "policyId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "histories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BL-Std-Services-ContinuousAssessment-ContinuousComplianceNotificationService-PolicyHistoryMetadata"
                        }
                    }
                }
            },
            "BL-Std-Services-ContinuousAssessment-ContinuousComplianceNotificationService-PolicyHistoryMetadata": {
                "type": "object",
                "properties": {
                    "historyId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "historyCreationTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-TestSecurityHubViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "region": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "defaultRegion": {
                        "enum": [
                            "us_east_1",
                            "us_west_1",
                            "eu_west_1",
                            "ap_southeast_1",
                            "ap_northeast_1",
                            "us_west_2",
                            "sa_east_1",
                            "az_1_region_a_geo_1",
                            "az_2_region_a_geo_1",
                            "az_3_region_a_geo_1",
                            "ap_southeast_2",
                            "mellanox_region",
                            "us_gov_west_1",
                            "eu_central_1",
                            "ap_northeast_2",
                            "ap_south_1",
                            "us_east_2",
                            "ca_central_1",
                            "eu_west_2",
                            "eu_west_3",
                            "eu_north_1",
                            "cn_north_1",
                            "cn_northwest_1",
                            "us_gov_east_1",
                            "ap_east_1",
                            "me_south_1",
                            "af_south_1",
                            "eu_south_1",
                            "ap_northeast_3",
                            "me_central_1",
                            "ap_south_2",
                            "ap_southeast_3",
                            "ap_southeast_4",
                            "eu_central_2",
                            "eu_south_2",
                            "il_central_1",
                            "westus",
                            "eastus",
                            "eastus2",
                            "northcentralus",
                            "westus2",
                            "southcentralus",
                            "centralus",
                            "usgovlowa",
                            "usgovvirginia",
                            "northeurope",
                            "westeurope",
                            "eastasia",
                            "southeastasia",
                            "japaneast",
                            "japanwest",
                            "brazilsouth",
                            "australiaeast",
                            "australiasoutheast",
                            "centralindia",
                            "southindia",
                            "westindia",
                            "canadaeast",
                            "westcentralus",
                            "chinaeast",
                            "chinanorth",
                            "canadacentral",
                            "germanycentral",
                            "germanynortheast",
                            "koreacentral",
                            "uksouth",
                            "ukwest",
                            "koreasouth",
                            "francecentral",
                            "francesouth",
                            "germanywestcentral",
                            "usdodcentral",
                            "usdodeast",
                            "usgovarizona",
                            "usgovtexas",
                            "australiacentral",
                            "australiacentral2",
                            "chinaeast2",
                            "chinanorth2",
                            "southafricanorth",
                            "southafricawest",
                            "uaecentral",
                            "uaenorth",
                            "ussecwest",
                            "usseceast",
                            "germanynorth",
                            "switzerlandwest",
                            "norwaywest",
                            "norwayeast",
                            "switzerlandnorth",
                            "westus3",
                            "swedencentral",
                            "chinanorth3",
                            "brazilsoutheast",
                            "eastus2euap",
                            "jioindiawest",
                            "jioindiacentral",
                            "qatarcentral",
                            "asia",
                            "asia_east1",
                            "asia_northeast1",
                            "asia_south1",
                            "asia_southeast1",
                            "australia_southeast1",
                            "europe",
                            "europe_north1",
                            "europe_west1",
                            "europe_west2",
                            "europe_west3",
                            "europe_west4",
                            "northamerica_northeast1",
                            "southamerica_east1",
                            "us",
                            "us_central1",
                            "us_east1",
                            "us_east4",
                            "us_west1",
                            "us_west2",
                            "global",
                            "asia_east2",
                            "eur4",
                            "nam4",
                            "europe_west6",
                            "japan_west",
                            "asia_northeast2",
                            "asia_northeast3",
                            "us_west3",
                            "us_west4",
                            "asia_southeast2",
                            "nam3",
                            "nam5",
                            "nam6",
                            "nam7",
                            "nam10",
                            "nam_eur_asia1",
                            "eur3",
                            "eur5",
                            "asia1",
                            "nam11",
                            "eu",
                            "northamerica_northeast2",
                            "southamerica_west1",
                            "us_east5",
                            "us_south1",
                            "europe_central2",
                            "europe_southwest1",
                            "europe_west8",
                            "europe_west9",
                            "europe_west10",
                            "europe_west12",
                            "asia_south2",
                            "australia_southeast2",
                            "me_central1",
                            "me_central2",
                            "me_west1",
                            "ap_sydney_1",
                            "ap_melbourne_1",
                            "sa_saopaulo_1",
                            "sa_vinhedo_1",
                            "ca_montreal_1",
                            "ca_toronto_1",
                            "sa_santiago_1",
                            "eu_paris_1",
                            "eu_marseille_1",
                            "eu_frankfurt_1",
                            "ap_hyderabad_1",
                            "ap_mumbai_1",
                            "il_jerusalem_1",
                            "eu_milan_1",
                            "ap_osaka_1",
                            "ap_tokyo_1",
                            "mx_queretaro_1",
                            "eu_amsterdam_1",
                            "me_jeddah_1",
                            "ap_singapore_1",
                            "af_johannesburg_1",
                            "ap_seoul_1",
                            "ap_chuncheon_1",
                            "eu_madrid_1",
                            "eu_stockholm_1",
                            "eu_zurich_1",
                            "me_abudhabi_1",
                            "me_dubai_1",
                            "uk_london_1",
                            "uk_cardiff_1",
                            "us_ashburn_1",
                            "us_phoenix_1",
                            "us_sanjose_1",
                            "us_gov_ashburn_1",
                            "us_gov_chicago_1",
                            "us_gov_phoenix_1",
                            "us_langley_1",
                            "us_luke_1",
                            "uk_gov_london_1",
                            "uk_gov_cardiff_1"
                        ],
                        "type": "string"
                    },
                    "includeAllAccounts": {
                        "type": "boolean"
                    },
                    "includeAllRegions": {
                        "type": "boolean"
                    }
                }
            },
            "ApiContinuousComplianceNotification-WebApi-Models-TestResultsSecurityHubViewModel": {
                "type": "object",
                "properties": {
                    "testResults": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-AwsSecurityHub-AwsSecurityHubTestResult"
                        }
                    },
                    "allEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-AwsSecurityHub-AwsSecurityHubTestResult": {
                "type": "object",
                "properties": {
                    "externalAccountId": {
                        "type": "string"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "isEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "Platform-EventArc-Model-EventArcConnectionChannelViewModel": {
                "type": "object",
                "properties": {
                    "channelFullName": {
                        "type": "string"
                    },
                    "activationToken": {
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliance-ContinuousComplianceCircuitBreakerGetAllViewModel": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "notificationId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "integrationsIssues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-ContinuousCompliance-CircuitBreakerIntgrationViewModel"
                        }
                    }
                }
            },
            "Compliance-ContinuousCompliance-CircuitBreakerIntgrationViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "intgrationType": {
                        "enum": [
                            "Sns",
                            "EmailPerFinding",
                            "IndexElasticSearch",
                            "PagerDuty",
                            "AwsSecurityHub",
                            "GcpSecurityCommandCenter",
                            "Webhook",
                            "AzureSecurityCenter",
                            "Slack",
                            "AggregatedEmail",
                            "Teams",
                            "Eventarc",
                            "SlackSingleMessage",
                            "TeamsSingleMessage"
                        ],
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "update": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "numOfTries": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Compliance-ContinuousCompliance-ContinuousComplianceCircuitBreakerGetViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "notificationId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "intgrationType": {
                        "enum": [
                            "Sns",
                            "EmailPerFinding",
                            "IndexElasticSearch",
                            "PagerDuty",
                            "AwsSecurityHub",
                            "GcpSecurityCommandCenter",
                            "Webhook",
                            "AzureSecurityCenter",
                            "Slack",
                            "AggregatedEmail",
                            "Teams",
                            "Eventarc",
                            "SlackSingleMessage",
                            "TeamsSingleMessage"
                        ],
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "update": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "numOfTries": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Compliance-ContinuousCompliance-ContinuousCompliancePolicyGetViewModel": {
                "required": [
                    "cloudAccountId",
                    "notificationIds"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "the cloud account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountId": {
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "description": "the cloud account provider (AWS/Azure/Google)",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "bundleId": {
                        "format": "int64",
                        "description": "the bundle id for the policy",
                        "type": "integer"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "Compliance-ContinuousCompliance-ContinuousCompliancePolicyPutViewModel": {
                "required": [
                    "cloudAccountId",
                    "notificationIds"
                ],
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "the cloud account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountId": {
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "description": "the cloud account provider (AWS/Azure/Google)",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "bundleId": {
                        "format": "int64",
                        "description": "the bundle id for the policy",
                        "type": "integer"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "Compliance-ContinuousCompliance-ContinuousCompliancePolicyPostViewModel": {
                "required": [
                    "cloudAccountId",
                    "notificationIds"
                ],
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "the cloud account id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountId": {
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "description": "the cloud account provider (AWS/Azure/Google)",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "bundleId": {
                        "format": "int64",
                        "description": "the bundle id for the policy",
                        "type": "integer"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "Compliance-ContinuousCompliancePolicyV2-EvaluateRulesetVersionsRequestModel": {
                "type": "object",
                "properties": {
                    "rulesetId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "Compliance-ContinuousCompliancePolicyV2-ContinuousCompliancePolicyViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "targetType": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Gcp",
                            "Kubernetes",
                            "OrganizationalUnit",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Vendor",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "vendor": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Gcp",
                            "Kubernetes",
                            "OrganizationalUnit",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Vendor",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "targetInternalId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "targetExternalId": {
                        "type": "string"
                    },
                    "rulesetId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                }
            },
            "Compliance-ContinuousCompliancePolicyV2-ContinuousCompliancePolicyRequestModel": {
                "required": [
                    "targetType",
                    "rulesetId",
                    "notificationIds"
                ],
                "type": "object",
                "properties": {
                    "targetId": {
                        "type": "string"
                    },
                    "targetType": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Gcp",
                            "Kubernetes",
                            "OrganizationalUnit",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Vendor",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "rulesetId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "rulesetVersion": {
                        "type": "string"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "Models-ServicePortEditViewModel": {
                "required": [
                    "portRange"
                ],
                "type": "object",
                "properties": {
                    "portRange": {
                        "$ref": "#/components/schemas/Models-PortRangeViewModel"
                    },
                    "protocol": {
                        "enum": [
                            "ALL",
                            "HOPOPT",
                            "ICMP",
                            "IGMP",
                            "GGP",
                            "IPV4",
                            "ST",
                            "TCP",
                            "CBT",
                            "EGP",
                            "IGP",
                            "BBN_RCC_MON",
                            "NVP2",
                            "PUP",
                            "ARGUS",
                            "EMCON",
                            "XNET",
                            "CHAOS",
                            "UDP",
                            "MUX",
                            "DCN_MEAS",
                            "HMP",
                            "PRM",
                            "XNS_IDP",
                            "TRUNK1",
                            "TRUNK2",
                            "LEAF1",
                            "LEAF2",
                            "RDP",
                            "IRTP",
                            "ISO_TP4",
                            "NETBLT",
                            "MFE_NSP",
                            "MERIT_INP",
                            "DCCP",
                            "ThreePC",
                            "IDPR",
                            "XTP",
                            "DDP",
                            "IDPR_CMTP",
                            "TPplusplus",
                            "IL",
                            "IPV6",
                            "SDRP",
                            "IPV6_ROUTE",
                            "IPV6_FRAG",
                            "IDRP",
                            "RSVP",
                            "GRE",
                            "DSR",
                            "BNA",
                            "ESP",
                            "AH",
                            "I_NLSP",
                            "SWIPE",
                            "NARP",
                            "MOBILE",
                            "TLSP",
                            "SKIP",
                            "ICMPV6",
                            "IPV6_NONXT",
                            "IPV6_OPTS",
                            "CFTP",
                            "SAT_EXPAK",
                            "KRYPTOLAN",
                            "RVD",
                            "IPPC",
                            "SAT_MON",
                            "VISA",
                            "IPCV",
                            "CPNX",
                            "CPHB",
                            "WSN",
                            "PVP",
                            "BR_SAT_MON",
                            "SUN_ND",
                            "WB_MON",
                            "WB_EXPAK",
                            "ISO_IP",
                            "VMTP",
                            "SECURE_VMTP",
                            "VINES",
                            "TTP",
                            "NSFNET_IGP",
                            "DGP",
                            "TCF",
                            "EIGRP",
                            "OSPFIGP",
                            "SPRITE_RPC",
                            "LARP",
                            "MTP",
                            "AX25",
                            "IPIP",
                            "MICP",
                            "SCC_SP",
                            "ETHERIP",
                            "ENCAP",
                            "GMTP",
                            "IFMP",
                            "PNNI",
                            "PIM",
                            "ARIS",
                            "SCPS",
                            "QNX",
                            "AN",
                            "IPCOMP",
                            "SNP",
                            "COMPAQ_PEER",
                            "IPX_IN_IP",
                            "VRRP",
                            "PGM",
                            "L2TP",
                            "DDX",
                            "IATP",
                            "STP",
                            "SRP",
                            "UTI",
                            "SMP",
                            "SM",
                            "PTP",
                            "ISIS",
                            "FIRE",
                            "CRTP",
                            "CRUDP",
                            "SSCOPMCE",
                            "IPLT",
                            "SPS",
                            "PIPE",
                            "SCTP",
                            "FC",
                            "RSVP_E2E_IGNORE",
                            "MOBILITY_HEADER",
                            "UDPLITE",
                            "MPLS_IN_IP",
                            "MANET",
                            "HIP",
                            "SHIM6",
                            "WESP",
                            "ROHC"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "protected": {
                        "type": "boolean"
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-ScopeViewModel"
                        }
                    }
                }
            },
            "Models-PortRangeViewModel": {
                "type": "object",
                "properties": {
                    "from": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "to": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Models-ScopeViewModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "CIDR",
                            "DNS",
                            "IPList",
                            "MagicIP",
                            "AWS",
                            "Tag",
                            "ASG",
                            "CIDRv6",
                            "PrefixList"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-EmergencyPolicyViewModel": {
                "type": "object",
                "properties": {
                    "timeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-ServicePortViewModel"
                        }
                    }
                }
            },
            "Models-ServicePortViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "portRange": {
                        "$ref": "#/components/schemas/Models-PortRangeViewModel"
                    },
                    "protocol": {
                        "enum": [
                            "ALL",
                            "HOPOPT",
                            "ICMP",
                            "IGMP",
                            "GGP",
                            "IPV4",
                            "ST",
                            "TCP",
                            "CBT",
                            "EGP",
                            "IGP",
                            "BBN_RCC_MON",
                            "NVP2",
                            "PUP",
                            "ARGUS",
                            "EMCON",
                            "XNET",
                            "CHAOS",
                            "UDP",
                            "MUX",
                            "DCN_MEAS",
                            "HMP",
                            "PRM",
                            "XNS_IDP",
                            "TRUNK1",
                            "TRUNK2",
                            "LEAF1",
                            "LEAF2",
                            "RDP",
                            "IRTP",
                            "ISO_TP4",
                            "NETBLT",
                            "MFE_NSP",
                            "MERIT_INP",
                            "DCCP",
                            "ThreePC",
                            "IDPR",
                            "XTP",
                            "DDP",
                            "IDPR_CMTP",
                            "TPplusplus",
                            "IL",
                            "IPV6",
                            "SDRP",
                            "IPV6_ROUTE",
                            "IPV6_FRAG",
                            "IDRP",
                            "RSVP",
                            "GRE",
                            "DSR",
                            "BNA",
                            "ESP",
                            "AH",
                            "I_NLSP",
                            "SWIPE",
                            "NARP",
                            "MOBILE",
                            "TLSP",
                            "SKIP",
                            "ICMPV6",
                            "IPV6_NONXT",
                            "IPV6_OPTS",
                            "CFTP",
                            "SAT_EXPAK",
                            "KRYPTOLAN",
                            "RVD",
                            "IPPC",
                            "SAT_MON",
                            "VISA",
                            "IPCV",
                            "CPNX",
                            "CPHB",
                            "WSN",
                            "PVP",
                            "BR_SAT_MON",
                            "SUN_ND",
                            "WB_MON",
                            "WB_EXPAK",
                            "ISO_IP",
                            "VMTP",
                            "SECURE_VMTP",
                            "VINES",
                            "TTP",
                            "NSFNET_IGP",
                            "DGP",
                            "TCF",
                            "EIGRP",
                            "OSPFIGP",
                            "SPRITE_RPC",
                            "LARP",
                            "MTP",
                            "AX25",
                            "IPIP",
                            "MICP",
                            "SCC_SP",
                            "ETHERIP",
                            "ENCAP",
                            "GMTP",
                            "IFMP",
                            "PNNI",
                            "PIM",
                            "ARIS",
                            "SCPS",
                            "QNX",
                            "AN",
                            "IPCOMP",
                            "SNP",
                            "COMPAQ_PEER",
                            "IPX_IN_IP",
                            "VRRP",
                            "PGM",
                            "L2TP",
                            "DDX",
                            "IATP",
                            "STP",
                            "SRP",
                            "UTI",
                            "SMP",
                            "SM",
                            "PTP",
                            "ISIS",
                            "FIRE",
                            "CRTP",
                            "CRUDP",
                            "SSCOPMCE",
                            "IPLT",
                            "SPS",
                            "PIPE",
                            "SCTP",
                            "FC",
                            "RSVP_E2E_IGNORE",
                            "MOBILITY_HEADER",
                            "UDPLITE",
                            "MPLS_IN_IP",
                            "MANET",
                            "HIP",
                            "SHIM6",
                            "WESP",
                            "ROHC"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "protected": {
                        "type": "boolean"
                    },
                    "canDelete": {
                        "type": "boolean"
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-ScopeViewModel"
                        }
                    }
                }
            },
            "Models-EmergencyPolicyPatchViewModel": {
                "type": "object",
                "properties": {
                    "timeout": {
                        "type": "string"
                    }
                }
            },
            "EntityFetchStatus-FetcherRunStatusViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroupName": {
                        "type": "string"
                    },
                    "workFlowId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "fetchedEntities": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastSuccessfulRun": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastFailureRun": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "vendor": {
                        "type": "string"
                    }
                }
            },
            "Compliance-ExclusionOld-ExclusionGetOldViewModel": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "ruleLogicHash": {
                        "description": "[Optional] Hash for the rule logic. If not specified, the exclusion logic applies to all rules.",
                        "pattern": "^[A-Za-z0-9+/]{22}?$",
                        "type": "string"
                    },
                    "ruleName": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "logic": {
                        "description": "[Optional] The GSL logic of the exclusion. If not specified, the entire rule is excluded.",
                        "pattern": "(name|id){1} (like){1} '{1}[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'{1}",
                        "type": "string"
                    },
                    "bundleId": {
                        "format": "int64",
                        "description": "id of the bundle containing the rule, whose findings will be excluded.",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "[Optional] id of the cloud account on which the rule is applied, for which findings will be excluded. If not specified, findings for all cloud accounts for which the rule applies will be excluded.",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountType": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "comment": {
                        "description": "Comment text (free text)",
                        "type": "string"
                    }
                }
            },
            "Compliance-ExclusionOld-ExclusionPostOldViewModel": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "ruleLogicHash": {
                        "description": "[Optional] Hash for the rule logic. If not specified, the exclusion logic applies to all rules.",
                        "pattern": "^[A-Za-z0-9+/]{22}?$",
                        "type": "string"
                    },
                    "ruleName": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "logic": {
                        "description": "[Optional] The GSL logic of the exclusion. If not specified, the entire rule is excluded.",
                        "pattern": "(name|id){1} (like){1} '{1}[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+'{1}",
                        "type": "string"
                    },
                    "bundleId": {
                        "format": "int64",
                        "description": "id of the bundle containing the rule, whose findings will be excluded.",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "[Optional] id of the cloud account on which the rule is applied, for which findings will be excluded. If not specified, findings for all cloud accounts for which the rule applies will be excluded.",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountType": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "comment": {
                        "description": "Comment text (free text)",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-ExternalFindings-ExternalFindingsOperationRequestViewModel": {
                "required": [
                    "findingSource",
                    "externalCloudAccountId"
                ],
                "type": "object",
                "properties": {
                    "findingSource": {
                        "description": "the external system sending the finding (e.g, Qualys)",
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "resourceId": {
                        "description": "The id of the cloud entity related to the finding, as identified by the cloud provider (e.g., an instanceId for AWS)",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingId": {
                        "description": "a unique id for the finding, set by the external source. This must be unique for all findings from this source.",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalCloudAccountId": {
                        "description": "the cloud id of the entity, as identified by the cloud provider (e.g., the AWS account number, or Azure subscription id)",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-SearchRequestViewModel": {
                "description": "Search or filter parameters. This object is passed via url so the field names are short because quary params are limited (about 2000 chars)",
                "type": "object",
                "properties": {
                    "pageSize": {
                        "format": "int32",
                        "description": "page size (number of findings returned per page). default: 10.",
                        "maximum": 10000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "skipAggregations": {
                        "type": "boolean"
                    },
                    "lowAggregationsSize": {
                        "type": "boolean"
                    },
                    "sorting": {
                        "$ref": "#/components/schemas/Compliance-Finding-SortingViewModel",
                        "description": "sort data"
                    },
                    "multiSorting": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-Finding-SortingViewModel"
                        }
                    },
                    "filter": {
                        "$ref": "#/components/schemas/Compliance-Finding-SearchFilterViewModel",
                        "description": "filter"
                    },
                    "searchAfter": {
                        "description": "token for the page of findings (first page if not specified)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dataSource": {
                        "enum": [
                            "Finding",
                            "Archive"
                        ],
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-SortingViewModel": {
                "type": "object",
                "properties": {
                    "fieldName": {
                        "description": "Field name",
                        "type": "string"
                    },
                    "direction": {
                        "format": "int32",
                        "description": "direction. 1 is asc, -1 desc",
                        "type": "integer"
                    }
                }
            },
            "Compliance-Finding-SearchFilterViewModel": {
                "type": "object",
                "properties": {
                    "freeTextPhrase": {
                        "description": "free text",
                        "type": "string"
                    },
                    "fields": {
                        "description": "fields",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-FieldFilterViewModel"
                        }
                    },
                    "onlyCIEM": {
                        "type": "boolean"
                    },
                    "onlyCustomPolicy": {
                        "description": "Filtering all findings created by custom policy",
                        "type": "boolean"
                    },
                    "creationTime": {
                        "$ref": "#/components/schemas/Shared-SharedViewModels-DateRangeViewModel"
                    },
                    "hasRemediation": {
                        "type": "boolean"
                    }
                }
            },
            "CGN-OpenSearch-Model-CommonViewModels-FieldFilterViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Shared-SharedViewModels-DateRangeViewModel": {
                "type": "object",
                "properties": {
                    "from": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "to": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "ExternalFindings-ExternalFindingPaginationViewModel": {
                "type": "object",
                "properties": {
                    "searchRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel",
                        "description": "search request for findings"
                    },
                    "findings": {
                        "description": "current page of findings",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-Finding-FindingViewModel"
                        }
                    },
                    "totalFindingsCount": {
                        "format": "int64",
                        "description": "total number of findings",
                        "type": "integer"
                    },
                    "aggregations": {
                        "description": "aggregate findings per search or filter entity (facet)",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Compliance-Finding-FieldAggregationViewModel"
                            }
                        }
                    },
                    "searchAfter": {
                        "description": "token for next page of results",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Compliance-Finding-FindingViewModel": {
                "type": "object",
                "properties": {
                    "entityObject": {
                        "description": "details for the entity in the cloud provider",
                        "type": "object"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "finding id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "findingKey": {
                        "description": "finding key",
                        "type": "string"
                    },
                    "createdTime": {
                        "format": "date-time",
                        "description": "date finding was first found",
                        "type": "string"
                    },
                    "updatedTime": {
                        "format": "date-time",
                        "description": "date of last update for the finding",
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "description": "cloud account provider (AWS/Azure/GCP)",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-Finding-FindingCommentViewModel"
                        }
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "cloud account id (on AWS/Azure/GCP)",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountExternalId": {
                        "description": "cloud account id on the cloud provider",
                        "type": "string"
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "description": "the Organizational Unit id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "organizationalUnitPath": {
                        "description": "the Organizational Unit path",
                        "type": "string"
                    },
                    "bundleId": {
                        "format": "int64",
                        "description": "the bundle id",
                        "type": "integer"
                    },
                    "bundleVersion": {
                        "type": "string"
                    },
                    "alertType": {
                        "description": "the bundle id",
                        "enum": [
                            "SecurityEvent",
                            "Task"
                        ],
                        "type": "string"
                    },
                    "ruleId": {
                        "description": "id of the specific rule that failed",
                        "type": "string"
                    },
                    "ruleName": {
                        "description": "name of the specific rule that failed (text string)",
                        "type": "string"
                    },
                    "ruleLogic": {
                        "description": "the GSL logic for the rule",
                        "type": "string"
                    },
                    "entityId": {
                        "description": "the  entity id (representing a cloud entity) that was tested by the rule",
                        "type": "string"
                    },
                    "entityExternalId": {
                        "description": "the cloud provider entity id for the entity tested by the rule",
                        "type": "string"
                    },
                    "entityType": {
                        "description": "the type of entity tested (e.g. S3, or EC2)",
                        "type": "string"
                    },
                    "entityTypeByEnvironmentType": {
                        "description": "the type of entity tested by the environment type in format of {EnvironmentType}|{EntityType}",
                        "type": "string"
                    },
                    "entityName": {
                        "description": "the entity name (on the cloud provider), as a text string, in the specific cloud provider format",
                        "type": "string"
                    },
                    "entityNetwork": {
                        "type": "string"
                    },
                    "entityTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-TagRuleEntity"
                        }
                    },
                    "severity": {
                        "description": "the severity of the finding (H/M/L)",
                        "type": "string"
                    },
                    "description": {
                        "description": "text description of the finding (the failure reason)",
                        "type": "string"
                    },
                    "remediation": {
                        "description": "the recommended remediation (if any) for the failure",
                        "type": "string"
                    },
                    "tag": {
                        "description": "tags assigned to the finding (list string)",
                        "type": "string"
                    },
                    "region": {
                        "description": "the region in which the entity was located",
                        "type": "string"
                    },
                    "bundleName": {
                        "description": "the name of the bundle with the rule",
                        "type": "string"
                    },
                    "acknowledged": {
                        "description": "indicates the finding was acknowledged",
                        "type": "boolean"
                    },
                    "origin": {
                        "description": " source of the finding (Compliance or Magellan)",
                        "enum": [
                            "ComplianceEngine",
                            "Magellan",
                            "MagellanAwsGuardDuty",
                            "Serverless",
                            "AwsInspector",
                            "ServerlessSecurityAnalyzer",
                            "ExternalFindingSource",
                            "Qualys",
                            "Tenable",
                            "AwsGuardDuty",
                            "KubernetesImageScanning",
                            "KubernetesRuntimeAssurance",
                            "ContainersRuntimeProtection",
                            "WorkloadChangeMonitoring",
                            "ImageAssurance",
                            "SourceCodeAssurance",
                            "InfrastructureAsCode",
                            "CIEM",
                            "Incident"
                        ],
                        "type": "string"
                    },
                    "lastSeenTime": {
                        "format": "date-time",
                        "description": "Date when the finding was last seen",
                        "type": "string"
                    },
                    "ownerUserName": {
                        "description": " user assigned to the finding",
                        "type": "string"
                    },
                    "magellan": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-Compliance-AssessmentFinding-MagellanData",
                        "description": "Extra data for Magellan findings"
                    },
                    "isExcluded": {
                        "description": "Indicates the finding was excluded from the assessment",
                        "type": "boolean"
                    },
                    "webhookResponses": {
                        "description": "Consists of Webhook type and the response of that webhook, if response defined",
                        "type": "object",
                        "properties": {
                            "none": {
                                "$ref": "#/components/schemas/Falconetix-Model-ElasticSearch-WebhookResponse-WebhookResponseMessage"
                            },
                            "serviceNow": {
                                "$ref": "#/components/schemas/Falconetix-Model-ElasticSearch-WebhookResponse-WebhookResponseMessage"
                            },
                            "jira": {
                                "$ref": "#/components/schemas/Falconetix-Model-ElasticSearch-WebhookResponse-WebhookResponseMessage"
                            }
                        }
                    },
                    "remediationActions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "additionalFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-FindingAdditionalFieldViewModel"
                        }
                    },
                    "occurrences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scanId": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Archived"
                        ],
                        "type": "string"
                    },
                    "statusReason": {
                        "enum": [
                            "Unspecified",
                            "RuleViolation",
                            "ConfigurationFixed",
                            "AssetDeleted",
                            "RulesetDeleted",
                            "RuleDeleted",
                            "PolicyDeleted",
                            "UserClosed",
                            "CloudAccountDeleted"
                        ],
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "action": {
                        "enum": [
                            "Detect",
                            "Prevent"
                        ],
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Compliance-Finding-FieldAggregationViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "object"
                    },
                    "count": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Compliance-Finding-FindingCommentViewModel": {
                "description": "comments for a finding (listed by user)",
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-Compliance-AssessmentFinding-MagellanData": {
                "type": "object",
                "properties": {
                    "alertWindowStartTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "alertWindowEndTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-ElasticSearch-WebhookResponse-WebhookResponseMessage": {
                "type": "object",
                "properties": {
                    "requestTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "responseContent": {
                        "type": "object"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-FindingAdditionalFieldViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-ExternalFindings-ExternalFindingUpsertRequestViewModel": {
                "required": [
                    "resourceId",
                    "resourceType",
                    "externalCloudAccountId",
                    "vendor",
                    "findingSource",
                    "findingSeverity",
                    "findingId",
                    "findingCreatedAt",
                    "findingTitle"
                ],
                "type": "object",
                "properties": {
                    "resourceId": {
                        "description": "cloud entity resource Id such as AWS ec2 instance id, or  Azure vm id etc",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "resourceName": {
                        "description": "[optional] cloud entity resource name such as AWS lambda name",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "resourceType": {
                        "description": "the entityType, as used by the  Rule engine.",
                        "type": "string"
                    },
                    "externalCloudAccountId": {
                        "description": "the cloud account id, i.e., Aws account id, Azure subscriptionId, or GCP projectId",
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "vendor": {
                        "description": "the cloud vendor, Aws, Azure, or Gcp",
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "findingSource": {
                        "description": "the name of the external source, e.g., qualys , tenable etc",
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingSourceDescription": {
                        "description": "[optional] additional description of external source",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingSourceUrl": {
                        "description": "external URL describing the finding",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingSeverity": {
                        "description": "the  Severity level for the finding, Low, Medium, or High",
                        "enum": [
                            "Low",
                            "Medium",
                            "High",
                            "Critical",
                            "Informational"
                        ],
                        "type": "string"
                    },
                    "originalFindingSeverity": {
                        "description": "original external source  severity for the finding",
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingId": {
                        "description": "unique identifier for the finding. This must be unique for all findings from this source.",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "scanId": {
                        "description": "[optional] refering scan id",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingCreatedAt": {
                        "format": "date-time",
                        "description": "date finding was created, in ISO8601 Date String format",
                        "type": "string"
                    },
                    "findingTitle": {
                        "description": "short description of the finding",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingDescription": {
                        "description": "description of the finding",
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingStatus": {
                        "description": "Finding status text",
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingCategory": {
                        "description": "Finding Category text",
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingRecommendation": {
                        "description": "Finding Recommendation/remediation  text",
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                    },
                    "relatedFindingsRef": {
                        "description": "FindingIds that are related to this finding",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ruleId": {
                        "description": "[optional] Rule id or Plugin id that is used to generate the finding",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "findingRulesPackage": {
                        "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-ExternalFindingsRulesPackageViewModel",
                        "description": ""
                    },
                    "additionalFields": {
                        "description": "Additional fields that can be added as part of the finding object, as  (name, value) pairs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-ExternalFindingsFieldViewModel"
                        }
                    },
                    "findingAlertType": {
                        "description": "Alert Type for Events page possible values SecurityEvent, Task(POSTURE FINDINGS) if no value provided using default SecurityEvent",
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-ExternalFindings-ExternalFindingsRulesPackageViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "provider": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "version": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-ExternalFindings-ExternalFindingsFieldViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "value": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "comment": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-ExternalFindings-ExternalFindingsResponseViewModel": {
                "type": "object",
                "properties": {
                    "failedRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-FailedExternalFindingsResponse"
                        }
                    },
                    "totalFailedRecords": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    },
                    "totalSuccessfulRecords": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-ExternalFindings-FailedExternalFindingsResponse": {
                "type": "object",
                "properties": {
                    "request": {
                        "$ref": "#/components/schemas/Falconetix-Model-ExternalFindings-ExternalFindingUpsertRequestViewModel"
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "Models-FimFilterViewModel": {
                "type": "object",
                "properties": {
                    "page": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "count": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "key": {
                        "type": "string"
                    },
                    "dir": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    },
                    "created": {
                        "type": "boolean"
                    },
                    "changed": {
                        "type": "boolean"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "serverIdList": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "date": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Models-FimGetViewModel": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-FimAlertViewModel"
                        }
                    },
                    "total": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Models-FimAlertViewModel": {
                "description": "An single FIM event representation. \r\nCurrently based on the AlertViewModel",
                "required": [
                    "path"
                ],
                "type": "object",
                "properties": {
                    "serverId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "change": {
                        "enum": [
                            "FIMScanStarted",
                            "FIMScanEnded",
                            "FileCreated",
                            "FileDeleted",
                            "FileChanged",
                            "RegistryCreated",
                            "RegistryDeleted",
                            "RegistryChanged"
                        ],
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": {
                        "description": " object type",
                        "type": "string"
                    },
                    "name": {
                        "description": "Human friendly Alert type",
                        "type": "string"
                    },
                    "description": {
                        "description": "Actual content of the alert info",
                        "type": "string"
                    },
                    "comment": {
                        "description": "Free field for user comments",
                        "type": "string"
                    },
                    "canBeAcknowledged": {
                        "description": "Signals whether this Alert can be manually acknowledged",
                        "type": "boolean"
                    },
                    "acknowledged": {
                        "description": "Was this Alert manually acknowledged (muted) by the user",
                        "type": "boolean"
                    },
                    "severity": {
                        "enum": [
                            "None",
                            "Low",
                            "Med",
                            "High"
                        ],
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "locationMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Falconetix-Model-AlertLocationEntityMetadata"
                        }
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Falconetix-Model-AlertPivotEntity"
                    },
                    "srl": {
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "modified": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-FindingsStatsBySeverityViewModel": {
                "description": "Statistics (passes/fails) per severity",
                "type": "object",
                "properties": {
                    "aggByProperty": {
                        "type": "string"
                    },
                    "aggStatistics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ElasticSearch-Std-Base-AggKeyStatistics"
                        }
                    }
                }
            },
            "ElasticSearch-Std-Base-AggKeyStatistics": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "numberOfDocuments": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Compliance-Finding-FindingsStatsViewModel": {
                "description": "Statistics (passes/fails) for a bundle",
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ElasticSearch-Std-Finding-RuleStatistics"
                        }
                    }
                }
            },
            "ElasticSearch-Std-Finding-RuleStatistics": {
                "type": "object",
                "properties": {
                    "ruleLogicHash": {
                        "type": "string"
                    },
                    "numberOfFindings": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Compliance-Finding-BaseFindingViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "finding id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "findingKey": {
                        "description": "finding key",
                        "type": "string"
                    },
                    "createdTime": {
                        "format": "date-time",
                        "description": "date finding was first found",
                        "type": "string"
                    },
                    "updatedTime": {
                        "format": "date-time",
                        "description": "date of last update for the finding",
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "description": "cloud account provider (AWS/Azure/GCP)",
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-Finding-FindingCommentViewModel"
                        }
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "cloud account id (on AWS/Azure/GCP)",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountExternalId": {
                        "description": "cloud account id on the cloud provider",
                        "type": "string"
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "description": "the Organizational Unit id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "organizationalUnitPath": {
                        "description": "the Organizational Unit path",
                        "type": "string"
                    },
                    "bundleId": {
                        "format": "int64",
                        "description": "the bundle id",
                        "type": "integer"
                    },
                    "bundleVersion": {
                        "type": "string"
                    },
                    "alertType": {
                        "description": "the bundle id",
                        "enum": [
                            "SecurityEvent",
                            "Task"
                        ],
                        "type": "string"
                    },
                    "ruleId": {
                        "description": "id of the specific rule that failed",
                        "type": "string"
                    },
                    "ruleName": {
                        "description": "name of the specific rule that failed (text string)",
                        "type": "string"
                    },
                    "ruleLogic": {
                        "description": "the GSL logic for the rule",
                        "type": "string"
                    },
                    "entityId": {
                        "description": "the  entity id (representing a cloud entity) that was tested by the rule",
                        "type": "string"
                    },
                    "entityExternalId": {
                        "description": "the cloud provider entity id for the entity tested by the rule",
                        "type": "string"
                    },
                    "entityType": {
                        "description": "the type of entity tested (e.g. S3, or EC2)",
                        "type": "string"
                    },
                    "entityTypeByEnvironmentType": {
                        "description": "the type of entity tested by the environment type in format of {EnvironmentType}|{EntityType}",
                        "type": "string"
                    },
                    "entityName": {
                        "description": "the entity name (on the cloud provider), as a text string, in the specific cloud provider format",
                        "type": "string"
                    },
                    "entityNetwork": {
                        "type": "string"
                    },
                    "entityTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-TagRuleEntity"
                        }
                    },
                    "severity": {
                        "description": "the severity of the finding (H/M/L)",
                        "type": "string"
                    },
                    "description": {
                        "description": "text description of the finding (the failure reason)",
                        "type": "string"
                    },
                    "remediation": {
                        "description": "the recommended remediation (if any) for the failure",
                        "type": "string"
                    },
                    "tag": {
                        "description": "tags assigned to the finding (list string)",
                        "type": "string"
                    },
                    "region": {
                        "description": "the region in which the entity was located",
                        "type": "string"
                    },
                    "bundleName": {
                        "description": "the name of the bundle with the rule",
                        "type": "string"
                    },
                    "acknowledged": {
                        "description": "indicates the finding was acknowledged",
                        "type": "boolean"
                    },
                    "origin": {
                        "description": " source of the finding (Compliance or Magellan)",
                        "enum": [
                            "ComplianceEngine",
                            "Magellan",
                            "MagellanAwsGuardDuty",
                            "Serverless",
                            "AwsInspector",
                            "ServerlessSecurityAnalyzer",
                            "ExternalFindingSource",
                            "Qualys",
                            "Tenable",
                            "AwsGuardDuty",
                            "KubernetesImageScanning",
                            "KubernetesRuntimeAssurance",
                            "ContainersRuntimeProtection",
                            "WorkloadChangeMonitoring",
                            "ImageAssurance",
                            "SourceCodeAssurance",
                            "InfrastructureAsCode",
                            "CIEM",
                            "Incident"
                        ],
                        "type": "string"
                    },
                    "lastSeenTime": {
                        "format": "date-time",
                        "description": "Date when the finding was last seen",
                        "type": "string"
                    },
                    "ownerUserName": {
                        "description": " user assigned to the finding",
                        "type": "string"
                    },
                    "magellan": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-Compliance-AssessmentFinding-MagellanData",
                        "description": "Extra data for Magellan findings"
                    },
                    "isExcluded": {
                        "description": "Indicates the finding was excluded from the assessment",
                        "type": "boolean"
                    },
                    "webhookResponses": {
                        "description": "Consists of Webhook type and the response of that webhook, if response defined",
                        "type": "object",
                        "properties": {
                            "none": {
                                "$ref": "#/components/schemas/Falconetix-Model-ElasticSearch-WebhookResponse-WebhookResponseMessage"
                            },
                            "serviceNow": {
                                "$ref": "#/components/schemas/Falconetix-Model-ElasticSearch-WebhookResponse-WebhookResponseMessage"
                            },
                            "jira": {
                                "$ref": "#/components/schemas/Falconetix-Model-ElasticSearch-WebhookResponse-WebhookResponseMessage"
                            }
                        }
                    },
                    "remediationActions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "additionalFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-FindingAdditionalFieldViewModel"
                        }
                    },
                    "occurrences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scanId": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Archived"
                        ],
                        "type": "string"
                    },
                    "statusReason": {
                        "enum": [
                            "Unspecified",
                            "RuleViolation",
                            "ConfigurationFixed",
                            "AssetDeleted",
                            "RulesetDeleted",
                            "RuleDeleted",
                            "PolicyDeleted",
                            "UserClosed",
                            "CloudAccountDeleted"
                        ],
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "action": {
                        "enum": [
                            "Detect",
                            "Prevent"
                        ],
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Compliance-Finding-GetFindingByKeyViewModel": {
                "required": [
                    "findingKey"
                ],
                "type": "object",
                "properties": {
                    "findingKey": {
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-SelectAllResponseViewModel": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "statusCode": {
                        "enum": [
                            "Continue",
                            "SwitchingProtocols",
                            "OK",
                            "Created",
                            "Accepted",
                            "NonAuthoritativeInformation",
                            "NoContent",
                            "ResetContent",
                            "PartialContent",
                            "MultipleChoices",
                            "Ambiguous",
                            "MovedPermanently",
                            "Moved",
                            "Found",
                            "Redirect",
                            "SeeOther",
                            "RedirectMethod",
                            "NotModified",
                            "UseProxy",
                            "Unused",
                            "TemporaryRedirect",
                            "RedirectKeepVerb",
                            "BadRequest",
                            "Unauthorized",
                            "PaymentRequired",
                            "Forbidden",
                            "NotFound",
                            "MethodNotAllowed",
                            "NotAcceptable",
                            "ProxyAuthenticationRequired",
                            "RequestTimeout",
                            "Conflict",
                            "Gone",
                            "LengthRequired",
                            "PreconditionFailed",
                            "RequestEntityTooLarge",
                            "RequestUriTooLong",
                            "UnsupportedMediaType",
                            "RequestedRangeNotSatisfiable",
                            "ExpectationFailed",
                            "UpgradeRequired",
                            "InternalServerError",
                            "NotImplemented",
                            "BadGateway",
                            "ServiceUnavailable",
                            "GatewayTimeout",
                            "HttpVersionNotSupported"
                        ],
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "ActionBegin",
                            "ActionError",
                            "ActionTimeout",
                            "FinishRunningAction"
                        ],
                        "type": "string"
                    },
                    "completed": {
                        "type": "boolean"
                    },
                    "total": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "updated": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "failed": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "error": {
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-FindingPaganationViewModel": {
                "type": "object",
                "properties": {
                    "searchRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel",
                        "description": "search request for findings"
                    },
                    "findings": {
                        "description": "current page of findings",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compliance-Finding-BaseFindingViewModel"
                        }
                    },
                    "totalFindingsCount": {
                        "format": "int64",
                        "description": "total number of findings",
                        "type": "integer"
                    },
                    "aggregations": {
                        "description": "aggregate findings per search or filter entity (facet)",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Compliance-Finding-FieldAggregationViewModel"
                            }
                        }
                    },
                    "searchAfter": {
                        "description": "token for next page of results",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Compliance-Finding-FindingController-FindingSourceViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "value": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "originType": {
                        "enum": [
                            "ComplianceEngine",
                            "Magellan",
                            "ExternalFindings",
                            "Serverless",
                            "KubernetesRuntimeAssurance",
                            "ContainersRuntimeProtection",
                            "ImageAssurance",
                            "SourceCodeAssurance",
                            "InfrastructureAsCode",
                            "CIEM",
                            "Incident",
                            "WorkloadChangeMonitoring"
                        ],
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-PutAcknowledgedViewModel": {
                "type": "object",
                "properties": {
                    "acknowledged": {
                        "description": "acknowledge finding",
                        "type": "boolean"
                    },
                    "comment": {
                        "description": "acknowledge comment",
                        "maxLength": 200,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-PutSeverityViewModel": {
                "required": [
                    "severity"
                ],
                "type": "object",
                "properties": {
                    "severity": {
                        "description": "finding severity (H/M/L)",
                        "enum": [
                            "Informational",
                            "Low",
                            "Medium",
                            "High",
                            "Critical"
                        ],
                        "type": "string"
                    },
                    "comment": {
                        "description": "severity comment (if severity is changed)",
                        "maxLength": 200,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-PutAssigneeViewModel": {
                "type": "object",
                "properties": {
                    "assigneeUserName": {
                        "description": "assigned  user name (email address)",
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-PostCommentViewModel": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "description": "general comment for finding",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-PostCommentByFindingKeyViewModel": {
                "required": [
                    "findingKey",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "findingKey": {
                        "type": "string"
                    },
                    "text": {
                        "description": "general comment for finding",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "Compliance-Finding-FindingController-AssessmentFindingOriginProperties": {
                "type": "object",
                "properties": {
                    "origin": {
                        "type": "string"
                    },
                    "originNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "originDescription": {
                        "type": "string"
                    }
                }
            },
            "System-IO-Stream": {
                "type": "object",
                "properties": {
                    "canRead": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "canSeek": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "canTimeout": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "canWrite": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "length": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "position": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "readTimeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "writeTimeout": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "BL-Std-RuleEngine-Services-FindingsFilter": {
                "type": "object",
                "properties": {
                    "findingIndexType": {
                        "enum": [
                            "Finding",
                            "Archive",
                            "Deleted"
                        ],
                        "type": "string"
                    },
                    "cloudAccountExternalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bundleIds": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "fromDateTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "BL-Std-Services-FindingsCsvReport-FindingsResult": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "format": "int64",
                        "type": "integer",
                        "readOnly": true
                    },
                    "findings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-ElasticSearch-BaseFindingIndexEntity"
                        },
                        "readOnly": true
                    },
                    "fetchedPages": {
                        "format": "int32",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "Falconetix-Model-ElasticSearch-BaseFindingIndexEntity": {
                "type": "object",
                "properties": {
                    "findingKey": {
                        "type": "string"
                    },
                    "ruleLogicHash": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "updatedTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastSeenTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "cloudAccountExternalId": {
                        "type": "string"
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "bundleId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "bundleName": {
                        "type": "string"
                    },
                    "bundleVersion": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "rlmRuleId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "ruleLogic": {
                        "type": "string"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "entityNetwork": {
                        "type": "string"
                    },
                    "entityTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "remediation": {
                        "type": "string"
                    },
                    "hasRemediation": {
                        "type": "boolean"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assessmentHistoryId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "acknowledged": {
                        "type": "boolean"
                    },
                    "version": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "magellan": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-Compliance-AssessmentFinding-MagellanData"
                    },
                    "isExcluded": {
                        "type": "boolean"
                    },
                    "remediationActions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Archived"
                        ],
                        "type": "string"
                    },
                    "statusReason": {
                        "enum": [
                            "Unspecified",
                            "RuleViolation",
                            "ConfigurationFixed",
                            "AssetDeleted",
                            "RulesetDeleted",
                            "RuleDeleted",
                            "PolicyDeleted",
                            "UserClosed",
                            "CloudAccountDeleted"
                        ],
                        "type": "string"
                    },
                    "scanId": {
                        "type": "string"
                    },
                    "webhookResponses": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Falconetix-Model-ElasticSearch-BaseFindingIndexEntity-WebhookResponseMessageEntity"
                        }
                    },
                    "alertType": {
                        "enum": [
                            "SecurityEvent",
                            "Task"
                        ],
                        "type": "string"
                    },
                    "additionalFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-FindingAdditionalField"
                        }
                    },
                    "occurrences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reindexMark": {
                        "type": "string"
                    },
                    "rulesets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-ElasticSearch-RulesetData"
                        }
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "entityExternalId": {
                        "type": "string"
                    },
                    "entityName": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "origin": {
                        "enum": [
                            "ComplianceEngine",
                            "Magellan",
                            "MagellanAwsGuardDuty",
                            "Serverless",
                            "AwsInspector",
                            "ServerlessSecurityAnalyzer",
                            "ExternalFindingSource",
                            "Qualys",
                            "Tenable",
                            "AwsGuardDuty",
                            "KubernetesImageScanning",
                            "KubernetesRuntimeAssurance",
                            "ContainersRuntimeProtection",
                            "WorkloadChangeMonitoring",
                            "ImageAssurance",
                            "SourceCodeAssurance",
                            "InfrastructureAsCode",
                            "CIEM",
                            "Incident"
                        ],
                        "type": "string"
                    },
                    "ruleName": {
                        "type": "string"
                    },
                    "ownerUserName": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "createdTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "action": {
                        "enum": [
                            "Detect",
                            "Prevent"
                        ],
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "aggregationEntity": {
                        "type": "string",
                        "readOnly": true
                    },
                    "aggregationEntityTypeByEnvironmentType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "aggregationCloudAccountIdCalc": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ruleNameSortable": {
                        "type": "string"
                    },
                    "ownerUserNameSortable": {
                        "type": "string"
                    },
                    "categorySortable": {
                        "type": "string"
                    },
                    "severitySortable": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "originSortable": {
                        "type": "string"
                    },
                    "entityNameSortable": {
                        "type": "string"
                    },
                    "entityTypeSortable": {
                        "type": "string"
                    },
                    "cloudAccountIdSortable": {
                        "type": "string"
                    },
                    "cloudAccountTypeSortable": {
                        "type": "string"
                    },
                    "createdTimeSortable": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "actionSortable": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timeStamp": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-ElasticSearch-BaseFindingIndexEntity-WebhookResponseMessageEntity": {
                "type": "object",
                "properties": {
                    "requestTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "responseContentStr": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-Entities-FindingAdditionalField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "isCustomerFacing": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-ElasticSearch-RulesetData": {
                "type": "object",
                "properties": {
                    "rlmRulesetId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "rulesetId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "rulesetName": {
                        "type": "string"
                    },
                    "rulesetVersion": {
                        "type": "string"
                    },
                    "assessmentHistoryId": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Compliance-Report-FindingsReportViewModel": {
                "type": "object",
                "properties": {
                    "searchRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel",
                        "description": "search request for findings"
                    },
                    "recipents": {
                        "description": "recipents for mail",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "selectedColumns": {
                        "description": "Selected Columns",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "showExcluded": {
                        "description": "Show Excluded Column",
                        "type": "boolean"
                    }
                }
            },
            "Google-GcpBigQuery-GcpBigQueryViewModel": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string"
                    },
                    "lastModifiedTime": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "reference": {
                        "$ref": "#/components/schemas/Google-GcpBigQuery-GcpBigQueryReferenceViewModel"
                    },
                    "datasetAccess": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-GcpBigQuery-GcpBigQueryDatasetAccessViewModel"
                        }
                    },
                    "defaultEncryptionConfiguration": {
                        "$ref": "#/components/schemas/Google-GcpBigQuery-GcpBigQueryEncryptionConfigurationViewModel"
                    },
                    "defaultPartitionExpirationMs": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "defaultTableExpirationMs": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-GcpBigQuery-GcpBigQueryReferenceViewModel": {
                "type": "object",
                "properties": {
                    "datasetId": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    }
                }
            },
            "Google-GcpBigQuery-GcpBigQueryDatasetAccessViewModel": {
                "type": "object",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "groupByEmail": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "userByEmail": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "specialGroup": {
                        "type": "string"
                    },
                    "iamMember": {
                        "type": "string"
                    }
                }
            },
            "Google-GcpBigQuery-GcpBigQueryEncryptionConfigurationViewModel": {
                "type": "object",
                "properties": {
                    "kmsKeyName": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-GcpDisk-GcpDiskViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "creationTimestamp": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "lastAttachTimestamp": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "lastDetachTimestamp": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "sourceImage": {
                        "type": "string"
                    },
                    "sourceImageId": {
                        "type": "string"
                    },
                    "sourceDisk": {
                        "type": "string"
                    },
                    "sourceDiskId": {
                        "type": "string"
                    },
                    "sourceSnapshot": {
                        "type": "string"
                    },
                    "sourceSnapshotId": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Google-Gke-GcpGkeClusterViewModel": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "nodePools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Gke-GcpGkeNodePoolViewModel"
                        }
                    },
                    "network": {
                        "type": "string"
                    },
                    "subnetwork": {
                        "type": "string"
                    },
                    "clusterIpv4Cidr": {
                        "type": "string"
                    },
                    "currentNodeCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "currentMasterVersion": {
                        "type": "string"
                    },
                    "initialClusterVersion": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableKubernetesAlpha": {
                        "type": "boolean"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "ipAllocationPolicy": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeIPAllocationPolicyViewModel"
                    },
                    "labelFingerprint": {
                        "type": "string"
                    },
                    "legacyAbac": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeLegacyAbacViewModel"
                    },
                    "loggingService": {
                        "type": "string"
                    },
                    "maintenancePolicy": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeMaintenancePolicyViewModel"
                    },
                    "monitoringService": {
                        "type": "string"
                    },
                    "networkPolicy": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeNetworkPolicyViewModel"
                    },
                    "nodeIpv4CidrSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "servicesIpv4Cidr": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "addonsConfig": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeAddonsConfigViewModel"
                    },
                    "masterAuthorizedNetworksConfig": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeMasterAuthorizedNetworksConfigViewModel"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Gke-GcpGkeStatusConditionViewModel"
                        }
                    },
                    "expireTime": {
                        "type": "string"
                    },
                    "privateClusterConfig": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkePrivateClusterConfigViewModel"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-Gke-GcpGkeNodePoolViewModel": {
                "type": "object",
                "properties": {
                    "autoScaling": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeNodePoolAutoScalingViewModel"
                    },
                    "config": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeNodeConfigViewModel"
                    },
                    "initialNodeCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "instanceGroupUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "management": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeNodeManagementViewModel"
                    },
                    "name": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Gke-GcpGkeStatusConditionViewModel"
                        }
                    }
                }
            },
            "Google-Gke-GcpGkeIPAllocationPolicyViewModel": {
                "type": "object",
                "properties": {
                    "clusterIpv4CidrBlock": {
                        "type": "string"
                    },
                    "clusterSecondaryRangeName": {
                        "type": "string"
                    },
                    "nodeIpv4CidrBlock": {
                        "type": "string"
                    },
                    "servicesIpv4CidrBlock": {
                        "type": "string"
                    },
                    "servicesSecondaryRangeName": {
                        "type": "string"
                    },
                    "useIpAliases": {
                        "type": "boolean"
                    }
                }
            },
            "Google-Gke-GcpGkeLegacyAbacViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "Google-Gke-GcpGkeMaintenancePolicyViewModel": {
                "type": "object",
                "properties": {
                    "dailyMaintenanceWindow": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeDailyMaintenanceWindowViewModel"
                    }
                }
            },
            "Google-Gke-GcpGkeNetworkPolicyViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "provider": {
                        "type": "string"
                    }
                }
            },
            "Google-Gke-GcpGkeAddonsConfigViewModel": {
                "type": "object",
                "properties": {
                    "horizontalPodAutoscaling": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeHorizontalPodAutoscalingViewModel"
                    },
                    "httpLoadBalancing": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeHttpLoadBalancingViewModel"
                    },
                    "kubernetesDashboard": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeKubernetesDashboardViewModel"
                    },
                    "networkPolicyConfig": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeNetworkPolicyConfigViewModel"
                    }
                }
            },
            "Google-Gke-GcpGkeMasterAuthorizedNetworksConfigViewModel": {
                "type": "object",
                "properties": {
                    "cidrBlocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Gke-GcpGkeCidrBlockViewModel"
                        }
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "Google-Gke-GcpGkeStatusConditionViewModel": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Google-Gke-GcpGkePrivateClusterConfigViewModel": {
                "type": "object",
                "properties": {
                    "enablePrivateEndpoint": {
                        "type": "boolean"
                    },
                    "enablePrivateNodes": {
                        "type": "boolean"
                    },
                    "masterIpv4CidrBlock": {
                        "type": "string"
                    },
                    "privateEndpoint": {
                        "type": "string"
                    },
                    "publicEndpoint": {
                        "type": "string"
                    }
                }
            },
            "Google-Gke-GcpGkeNodePoolAutoScalingViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "maxNodeCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minNodeCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Google-Gke-GcpGkeNodeConfigViewModel": {
                "type": "object",
                "properties": {
                    "accelerators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Gke-GcpGkeAcceleratorConfigViewModel"
                        }
                    },
                    "diskSizeGb": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "localSsdCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "machineType": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "minCpuPlatform": {
                        "type": "string"
                    },
                    "oauthScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "preemptible": {
                        "type": "boolean"
                    },
                    "serviceAccount": {
                        "type": "string"
                    },
                    "diskType": {
                        "type": "string"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Gke-GcpGkeNodeTaintViewModel"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Google-Gke-GcpGkeNodeManagementViewModel": {
                "type": "object",
                "properties": {
                    "autoRepair": {
                        "type": "boolean"
                    },
                    "autoUpgrade": {
                        "type": "boolean"
                    },
                    "upgradeOptions": {
                        "$ref": "#/components/schemas/Google-Gke-GcpGkeAutoUpgradeOptionsViewModel"
                    }
                }
            },
            "Google-Gke-GcpGkeDailyMaintenanceWindowViewModel": {
                "type": "object",
                "properties": {
                    "duration": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    }
                }
            },
            "Google-Gke-GcpGkeHorizontalPodAutoscalingViewModel": {
                "type": "object",
                "properties": {
                    "disabled": {
                        "type": "boolean"
                    }
                }
            },
            "Google-Gke-GcpGkeHttpLoadBalancingViewModel": {
                "type": "object",
                "properties": {
                    "disabled": {
                        "type": "boolean"
                    }
                }
            },
            "Google-Gke-GcpGkeKubernetesDashboardViewModel": {
                "type": "object",
                "properties": {
                    "disabled": {
                        "type": "boolean"
                    }
                }
            },
            "Google-Gke-GcpGkeNetworkPolicyConfigViewModel": {
                "type": "object",
                "properties": {
                    "disabled": {
                        "type": "boolean"
                    }
                }
            },
            "Google-Gke-GcpGkeCidrBlockViewModel": {
                "type": "object",
                "properties": {
                    "cidrBlockValue": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    }
                }
            },
            "Google-Gke-GcpGkeAcceleratorConfigViewModel": {
                "type": "object",
                "properties": {
                    "acceleratorCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "acceleratorType": {
                        "type": "string"
                    }
                }
            },
            "Google-Gke-GcpGkeNodeTaintViewModel": {
                "type": "object",
                "properties": {
                    "effect": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Google-Gke-GcpGkeAutoUpgradeOptionsViewModel": {
                "type": "object",
                "properties": {
                    "autoUpgradeStartTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Google-GcpImage-GcpImageViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "creationTimestamp": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "sourceSnapshotId": {
                        "type": "string"
                    },
                    "sourceSnapshot": {
                        "type": "string"
                    },
                    "sourceImage": {
                        "type": "string"
                    },
                    "sourceDiskId": {
                        "type": "string"
                    },
                    "sourceDisk": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Google-Kms-GcpKmsKeyRingViewModel": {
                "type": "object",
                "properties": {
                    "cryptoKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Kms-GcpKmsKeyRingCryptoKeyViewModel"
                        }
                    },
                    "iamPolicy": {
                        "$ref": "#/components/schemas/Google-Kms-GcpKmsIamPolicyViewModel"
                    },
                    "region": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-Kms-GcpKmsKeyRingCryptoKeyViewModel": {
                "type": "object",
                "properties": {
                    "eTag": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primary": {
                        "$ref": "#/components/schemas/Google-Kms-GcpKmsKeyRingCryptoKeyVersionViewModel"
                    },
                    "purpose": {
                        "type": "string"
                    },
                    "rotationPeriod": {
                        "type": "string"
                    },
                    "rotationPeriodInDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Kms-GcpKmsKeyRingLabelViewModel"
                        }
                    },
                    "nextRotationTime": {
                        "type": "string"
                    },
                    "iamPolicy": {
                        "$ref": "#/components/schemas/Google-Kms-GcpKmsIamPolicyViewModel"
                    }
                }
            },
            "Google-Kms-GcpKmsIamPolicyViewModel": {
                "type": "object",
                "properties": {
                    "auditConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Kms-GcpKmsIamPolicyAuditConfigViewModel"
                        }
                    },
                    "bindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Kms-GcpKmsIamPolicyBindingViewModel"
                        }
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "version": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Google-Kms-GcpKmsKeyRingCryptoKeyVersionViewModel": {
                "type": "object",
                "properties": {
                    "eTag": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "destroyTime": {
                        "type": "string"
                    },
                    "destroyEventTime": {
                        "type": "string"
                    },
                    "protectionLevel": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "Google-Kms-GcpKmsKeyRingLabelViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Google-Kms-GcpKmsIamPolicyAuditConfigViewModel": {
                "type": "object",
                "properties": {
                    "auditLogConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Kms-GcpKmsIamPolicyAuditLogConfigViewModel"
                        }
                    },
                    "service": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Kms-GcpKmsIamPolicyBindingViewModel": {
                "type": "object",
                "properties": {
                    "condition": {
                        "$ref": "#/components/schemas/Google-Kms-GcpKmsIamPolicyExprViewModel"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "role": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Kms-GcpKmsIamPolicyAuditLogConfigViewModel": {
                "type": "object",
                "properties": {
                    "exemptedMembers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logType": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-Kms-GcpKmsIamPolicyExprViewModel": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-ProjectInfo-GcpProjectInfoViewModel": {
                "type": "object",
                "properties": {
                    "defaultServiceAccount": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabledFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/Google-ProjectInfo-GcpProjectMetadataViewModel"
                    },
                    "sharedVpcHostProjectId": {
                        "type": "string"
                    },
                    "projectNumber": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "lifecycleState": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "createTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "orgPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-OrgPolicy-GcpOrgPolicyViewModel"
                        }
                    },
                    "accessApprovalSettings": {
                        "$ref": "#/components/schemas/Google-ProjectInfo-GcpProjectAccessApprovalSettingsViewModel"
                    }
                }
            },
            "Google-ProjectInfo-GcpProjectMetadataViewModel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-ProjectInfo-ItemsDataViewModel"
                        }
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "Google-OrgPolicy-GcpOrgPolicyViewModel": {
                "type": "object",
                "properties": {
                    "version": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "constraint": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "listPolicy": {
                        "$ref": "#/components/schemas/Google-OrgPolicy-GcpOrgPolicyListPolicyViewModel"
                    },
                    "booleanPolicy": {
                        "$ref": "#/components/schemas/Google-OrgPolicy-GcpOrgPolicyBooleanPolicyViewModel"
                    }
                }
            },
            "Google-ProjectInfo-GcpProjectAccessApprovalSettingsViewModel": {
                "type": "object",
                "properties": {
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enrolledServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-ProjectInfo-GcpProjectEnrolledServiceViewModel"
                        }
                    },
                    "enrolledAncestor": {
                        "type": "boolean"
                    },
                    "activeKeyVersion": {
                        "type": "string"
                    },
                    "ancestorHasActiveKeyVersion": {
                        "type": "boolean"
                    },
                    "invalidKeyVersion": {
                        "type": "boolean"
                    }
                }
            },
            "Google-ProjectInfo-ItemsDataViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Google-OrgPolicy-GcpOrgPolicyListPolicyViewModel": {
                "type": "object",
                "properties": {
                    "allowedValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deniedValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allValues": {
                        "type": "string"
                    },
                    "suggestedValue": {
                        "type": "string"
                    },
                    "inheritFromParent": {
                        "type": "boolean"
                    }
                }
            },
            "Google-OrgPolicy-GcpOrgPolicyBooleanPolicyViewModel": {
                "type": "object",
                "properties": {
                    "enforced": {
                        "type": "boolean"
                    }
                }
            },
            "Google-ProjectInfo-GcpProjectEnrolledServiceViewModel": {
                "type": "object",
                "properties": {
                    "cloudProduct": {
                        "type": "string"
                    },
                    "enrollmentLevel": {
                        "type": "string"
                    }
                }
            },
            "Google-PubSub-GcpPubSubTopicViewModel": {
                "type": "object",
                "properties": {
                    "messageStoragePolicy": {
                        "$ref": "#/components/schemas/Google-PubSub-GcpPubSubTopicMessageStoragePolicyViewModel"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "policy": {
                        "$ref": "#/components/schemas/Google-PubSub-GcpPubSubIamPolicyViewModel"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-PubSub-GcpPubSubTopicMessageStoragePolicyViewModel": {
                "type": "object",
                "properties": {
                    "allowedRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Google-PubSub-GcpPubSubIamPolicyViewModel": {
                "type": "object",
                "properties": {
                    "bindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-PubSub-GcpPubSubIamPolicyViewModel-GcpPubSubPolicyBindingViewModel"
                        }
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "version": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Google-PubSub-GcpPubSubIamPolicyViewModel-GcpPubSubPolicyBindingViewModel": {
                "type": "object",
                "properties": {
                    "condition": {
                        "type": "object"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "role": {
                        "type": "string"
                    }
                }
            },
            "Google-PubSub-GcpPubSubSubscriptionViewModel": {
                "type": "object",
                "properties": {
                    "ackDeadlineSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "messageRetentionDuration": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "pushConfig": {
                        "type": "string"
                    },
                    "retainAckedMessages": {
                        "type": "boolean"
                    },
                    "topic": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-SecurityGroup-GcpSecurityGroupViewModel": {
                "type": "object",
                "properties": {
                    "network": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-SecurityGroup-GcpServiceRuleViewModel"
                        }
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-SecurityGroup-GcpServiceRuleViewModel"
                        }
                    },
                    "vmInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Instance-GcpVMInstanceViewModel"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-SecurityGroup-GcpServiceRuleViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "number": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "destinationPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "destinationPortTo": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    }
                }
            },
            "Google-Instance-GcpVMInstanceViewModel": {
                "type": "object",
                "properties": {
                    "canIpForward": {
                        "type": "boolean"
                    },
                    "cpuPlatform": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Instance-GcpComputeAttachedDiskViewModel"
                        }
                    },
                    "machineType": {
                        "type": "string"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Instance-NetworkInterfaceViewModel"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "networkTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shared-SharedViewModels-TagViewModel"
                        }
                    },
                    "zone": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "isRunning": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isBillable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-Instance-NetworkInterfaceViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "networkIP": {
                        "type": "string"
                    },
                    "subnetwork": {
                        "type": "string"
                    },
                    "publicIP": {
                        "type": "string"
                    }
                }
            },
            "Google-ServiceAccount-GcpServiceAccountViewModel": {
                "type": "object",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "oauth2ClientId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "uniqueId": {
                        "type": "string"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-ServiceAccount-GcpServiceAccountKeyViewModel"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-ServiceAccount-GcpServiceAccountKeyViewModel": {
                "type": "object",
                "properties": {
                    "keyAlgorithm": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateKeyData": {
                        "type": "string"
                    },
                    "privateKeyType": {
                        "type": "string"
                    },
                    "publicKeyData": {
                        "type": "string"
                    },
                    "validAfterTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "validBeforeTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "managedBy": {
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpStorageBucketViewModel": {
                "type": "object",
                "properties": {
                    "acl": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-StorageBucket-GcpAccessControlViewModel"
                        }
                    },
                    "billing": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpBillingDataViewModel"
                    },
                    "cors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-StorageBucket-GcpCorsDataViewModel"
                        }
                    },
                    "defaultObjectAcl": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-StorageBucket-GcpAccessControlViewModel"
                        }
                    },
                    "defaultKmsKeyName": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "lifecycle": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpLifecycleDataViewModel"
                    },
                    "location": {
                        "type": "string"
                    },
                    "logging": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpLoggingDataViewModel"
                    },
                    "metageneration": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpOwnerDataViewModel"
                    },
                    "projectNumber": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "selfLink": {
                        "$ref": "#/components/schemas/Falconetix-Model-Google-ApiWrapperModels-GoogleCloudResourceUri"
                    },
                    "storageClass": {
                        "type": "string"
                    },
                    "timeCreatedRaw": {
                        "type": "string"
                    },
                    "timeCreated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedRaw": {
                        "type": "string"
                    },
                    "updated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "versioning": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpVersioningDataViewModel"
                    },
                    "website": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpWebsiteDataViewModel"
                    },
                    "defaultEventBasedHold": {
                        "type": "boolean"
                    },
                    "iamConfiguration": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpIamConfigurationDataViewModel"
                    },
                    "retentionPolicy": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpRetentionPolicyDataViewModel"
                    },
                    "locationType": {
                        "type": "string"
                    },
                    "customPlacementConfig": {
                        "$ref": "#/components/schemas/Falconetix-Model-GcpStorageBucketCustomPlacementConfig"
                    },
                    "satisfiesPZS": {
                        "type": "boolean"
                    },
                    "rpo": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpAccessControlViewModel": {
                "type": "object",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "entity": {
                        "type": "string"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "generation": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "object__": {
                        "type": "string"
                    },
                    "projectTeam": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpProjectTeamDataViewModel"
                    },
                    "role": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpBillingDataViewModel": {
                "type": "object",
                "properties": {
                    "requesterPays": {
                        "type": "boolean"
                    }
                }
            },
            "Google-StorageBucket-GcpCorsDataViewModel": {
                "type": "object",
                "properties": {
                    "maxAgeSeconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "method": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "origin": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "responseHeader": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Google-StorageBucket-GcpLifecycleDataViewModel": {
                "type": "object",
                "properties": {
                    "rule": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-StorageBucket-GcpRuleDataViewModel"
                        }
                    }
                }
            },
            "Google-StorageBucket-GcpLoggingDataViewModel": {
                "type": "object",
                "properties": {
                    "logBucket": {
                        "type": "string"
                    },
                    "logObjectPrefix": {
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpOwnerDataViewModel": {
                "type": "object",
                "properties": {
                    "entity": {
                        "type": "string"
                    },
                    "entityId": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-Google-ApiWrapperModels-GoogleCloudResourceUri": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "projectId": {
                        "description": "https://www.googleapis.com/compute/v1/projects/[project-id]/....",
                        "type": "string"
                    },
                    "resourceName": {
                        "description": "https://www.googleapis.com/compute/v1/projects/144807/global/networks/...\r\nreturns the last segment of the uri",
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpVersioningDataViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "Google-StorageBucket-GcpWebsiteDataViewModel": {
                "type": "object",
                "properties": {
                    "mainPageSuffix": {
                        "type": "string"
                    },
                    "notFoundPage": {
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpIamConfigurationDataViewModel": {
                "type": "object",
                "properties": {
                    "bucketPolicyOnly": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpIamConfigurationDataViewModel-GcpBucketPolicyOnlyDataViewModel"
                    },
                    "uniformBucketLevelAccess": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpIamConfigurationDataViewModel-GcpUniformBucketLevelAccessDataViewModel"
                    },
                    "publicAccessPrevention": {
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpRetentionPolicyDataViewModel": {
                "type": "object",
                "properties": {
                    "effectiveTimeRaw": {
                        "type": "string"
                    },
                    "effectiveTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "isLocked": {
                        "type": "boolean"
                    },
                    "retentionPeriod": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-GcpStorageBucketCustomPlacementConfig": {
                "type": "object",
                "properties": {
                    "dataLocations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Google-StorageBucket-GcpProjectTeamDataViewModel": {
                "type": "object",
                "properties": {
                    "projectNumber": {
                        "type": "string"
                    },
                    "team": {
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpRuleDataViewModel": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpRuleDataViewModel-GcpActionDataViewModel"
                    },
                    "condition": {
                        "$ref": "#/components/schemas/Google-StorageBucket-GcpRuleDataViewModel-GcpConditionDataViewModel"
                    }
                }
            },
            "Google-StorageBucket-GcpIamConfigurationDataViewModel-GcpBucketPolicyOnlyDataViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "lockedTimeRaw": {
                        "type": "string"
                    },
                    "lockedTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpIamConfigurationDataViewModel-GcpUniformBucketLevelAccessDataViewModel": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "lockedTimeRaw": {
                        "type": "string"
                    },
                    "lockedTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpRuleDataViewModel-GcpActionDataViewModel": {
                "type": "object",
                "properties": {
                    "storageClass": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Google-StorageBucket-GcpRuleDataViewModel-GcpConditionDataViewModel": {
                "type": "object",
                "properties": {
                    "age": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "createdBefore": {
                        "type": "string"
                    },
                    "isLive": {
                        "type": "boolean"
                    },
                    "matchesStorageClass": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "numNewerVersions": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "GenericList-GenericListResponseViewModel": {
                "required": [
                    "id",
                    "name",
                    "items"
                ],
                "type": "object",
                "properties": {
                    "isManaged": {
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "pattern": "[a-zA-Z0-9/\\-_:]*[a-zA-Z]+[a-zA-Z0-9/\\-_:]*",
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GenericList-GenericListValueViewModel"
                        }
                    }
                }
            },
            "GenericList-GenericListValueViewModel": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "pattern": "[a-zA-Z0-9/.\\-_:%*{}()=!&|\\\\$#~^+@ \\u00C0-\\u00D6\\u00D8-\\u00f6\\u00f8-\\u00ff]+",
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    }
                }
            },
            "GenericList-GenericListViewModelBase": {
                "required": [
                    "name",
                    "items"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "pattern": "[a-zA-Z0-9/\\-_:]*[a-zA-Z]+[a-zA-Z0-9/\\-_:]*",
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GenericList-GenericListValueViewModel"
                        }
                    }
                }
            },
            "GenericList-GenericListViewModel": {
                "required": [
                    "id",
                    "name",
                    "items"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "pattern": "[a-zA-Z0-9/\\-_:]*[a-zA-Z]+[a-zA-Z0-9/\\-_:]*",
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GenericList-GenericListValueViewModel"
                        }
                    }
                }
            },
            "Google-Accounts-GoogleAccountOnboardingDetailsViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "clientEmail": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "gSuitUser": {
                        "type": "string"
                    }
                }
            },
            "Google-Accounts-GoogleAccountStatsViewModel": {
                "type": "object",
                "properties": {
                    "stats": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-Google-NetworkStat"
                        }
                    },
                    "totalVMInstancesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalSecurityGroupsCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalFirewallRulesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Network-GoogleCloudNetworkViewModel"
                        }
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-SecurityGroup-GcpSecurityGroupViewModel"
                        }
                    },
                    "vmInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Instance-GcpVMInstanceViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-Google-NetworkStat": {
                "type": "object",
                "properties": {
                    "networkId": {
                        "type": "string"
                    },
                    "networkName": {
                        "type": "string"
                    },
                    "resourceType": {
                        "enum": [
                            "Local",
                            "Shared"
                        ],
                        "type": "string"
                    },
                    "vmInstancesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "securityGroupsCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "firewallRulesCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Google-Network-GoogleCloudNetworkViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "autoCreateSubnetworks": {
                        "type": "boolean"
                    },
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "gatewayIPv4": {
                        "type": "string"
                    },
                    "iPv4Range": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subnetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Google-Accounts-GoogleAccountNameViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-Accounts-GoogleCloudAccountGetViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Google id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "description": "Google account name in ",
                        "type": "string"
                    },
                    "projectId": {
                        "description": "the Google project id (that will be onboarded)",
                        "type": "string"
                    },
                    "creationDate": {
                        "format": "date-time",
                        "description": "creation date for project in Google",
                        "type": "string"
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "organizationalUnitName": {
                        "type": "string"
                    },
                    "gsuite": {
                        "$ref": "#/components/schemas/Google-Accounts-GoogleAccountGsuiteViewModel"
                    },
                    "vendor": {
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "projectNumber": {
                        "type": "string"
                    }
                }
            },
            "Google-Accounts-GoogleAccountGsuiteViewModel": {
                "type": "object",
                "properties": {
                    "gsuiteUser": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    }
                }
            },
            "Google-Accounts-GoogleCloudAccountUpdateViewModel": {
                "required": [
                    "name",
                    "serviceAccountCredentials"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Google account name in ",
                        "type": "string"
                    },
                    "serviceAccountCredentials": {
                        "description": "The service account JSON block (from the GCP console)",
                        "type": "object"
                    }
                }
            },
            "Google-Accounts-GoogleCloudAccountPostViewModel": {
                "required": [
                    "name",
                    "serviceAccountCredentials"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Google account name in ",
                        "type": "string"
                    },
                    "serviceAccountCredentials": {
                        "description": "The service account JSON block (from the GCP console)",
                        "type": "object"
                    },
                    "organizationalUnitId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "gsuiteUser": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    }
                }
            },
            "Google-Firewall-GoogleCloudFirewallRuleViewModel": {
                "type": "object",
                "properties": {
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "allowed": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Firewall-GoogleFirewallRuleScopeViewModel"
                        }
                    },
                    "denied": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Firewall-GoogleFirewallRuleScopeViewModel"
                        }
                    },
                    "destinationRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "sourceRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourceTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "targetTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "priority": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "direction": {
                        "enum": [
                            "Ingress",
                            "Egress"
                        ],
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-Firewall-GoogleFirewallRuleScopeViewModel": {
                "type": "object",
                "properties": {
                    "ipProtocol": {
                        "type": "string"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Google-CloudFunction-GoogleCloudFunctionViewModel": {
                "type": "object",
                "properties": {
                    "availableMemoryMb": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "entryPoint": {
                        "type": "string"
                    },
                    "environmentVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-CloudFunction-GoogleCloudFunctionEnvironmentVariableViewModel"
                        }
                    },
                    "trigger": {
                        "$ref": "#/components/schemas/Google-CloudFunction-GoogleCloudFunctionTriggerViewModel"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-CloudFunction-GoogleCloudFunctionLabelViewModel"
                        }
                    },
                    "maxInstances": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "serviceAccountEmail": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "sourceArchiveUrl": {
                        "type": "string"
                    },
                    "sourceRepository": {
                        "$ref": "#/components/schemas/Google-CloudFunction-GoogleCloudFunctionSourceRepositoryViewModel"
                    },
                    "sourceUploadUrl": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "timeout": {
                        "type": "object"
                    },
                    "updateTime": {
                        "type": "object"
                    },
                    "versionId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "vpcConnector": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-CloudFunction-GoogleCloudFunctionEnvironmentVariableViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Google-CloudFunction-GoogleCloudFunctionTriggerViewModel": {
                "type": "object",
                "properties": {
                    "eventTrigger": {
                        "$ref": "#/components/schemas/Google-CloudFunction-GoogleCloudFunctionEventTriggerViewModel"
                    },
                    "httpsTrigger": {
                        "$ref": "#/components/schemas/Google-CloudFunction-GoogleCloudFunctionHttpsTriggerViewModel"
                    }
                }
            },
            "Google-CloudFunction-GoogleCloudFunctionLabelViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Google-CloudFunction-GoogleCloudFunctionSourceRepositoryViewModel": {
                "type": "object",
                "properties": {
                    "deployedUrl": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-CloudFunction-GoogleCloudFunctionEventTriggerViewModel": {
                "type": "object",
                "properties": {
                    "eventType": {
                        "type": "string"
                    },
                    "failurePolicy": {
                        "$ref": "#/components/schemas/Google-CloudFunction-GoogleCloudFunctionFailurePolicyViewModel"
                    },
                    "resource": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-CloudFunction-GoogleCloudFunctionHttpsTriggerViewModel": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-CloudFunction-GoogleCloudFunctionFailurePolicyViewModel": {
                "type": "object",
                "properties": {
                    "retry": {
                        "$ref": "#/components/schemas/Google-CloudFunction-GoogleCloudFunctionRetryViewModel"
                    },
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-CloudFunction-GoogleCloudFunctionRetryViewModel": {
                "type": "object",
                "properties": {
                    "eTag": {
                        "type": "string"
                    }
                }
            },
            "Google-IamPolicy-GoogleCloudIamPolicyViewModel": {
                "type": "object",
                "properties": {
                    "eTag": {
                        "type": "string"
                    },
                    "version": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "bindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-IamPolicy-GcpIamPolicyBindingsViewModel"
                        }
                    },
                    "auditConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-IamPolicy-GcpIamPolicyAuditConfigsViewModel"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-IamPolicy-GcpIamPolicyBindingsViewModel": {
                "type": "object",
                "properties": {
                    "eTag": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Google-IamPolicy-GcpIamPolicyAuditConfigsViewModel": {
                "type": "object",
                "properties": {
                    "eTag": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "auditLogConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-IamPolicy-GcpIamPolicyAuditConfigsViewModel-GcpIamPolicyAuditLogConfigsViewModel"
                        }
                    }
                }
            },
            "Google-IamPolicy-GcpIamPolicyAuditConfigsViewModel-GcpIamPolicyAuditLogConfigsViewModel": {
                "type": "object",
                "properties": {
                    "eTag": {
                        "type": "string"
                    },
                    "logType": {
                        "type": "string"
                    },
                    "exemptedMembers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Google-Subnet-GoogleCloudSubnetViewModel": {
                "type": "object",
                "properties": {
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "gatewayAddress": {
                        "type": "string"
                    },
                    "ipCidrRange": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-Instance-NetworkDetailViewModel": {
                "type": "object",
                "properties": {
                    "vmInstanceName": {
                        "type": "string"
                    },
                    "resourceType": {
                        "enum": [
                            "Local",
                            "Shared"
                        ],
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Instance-GoogleCloudFirewallRuleWithSecurityGroupsViewModel"
                        }
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Instance-GoogleCloudFirewallRuleWithSecurityGroupsViewModel"
                        }
                    },
                    "networkInterface": {
                        "$ref": "#/components/schemas/Google-Instance-NetworkInterfaceViewModel"
                    }
                }
            },
            "Google-Instance-GoogleCloudFirewallRuleWithSecurityGroupsViewModel": {
                "type": "object",
                "properties": {
                    "securityGroupDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Instance-SecurityGroupOfFirewallRule"
                        }
                    },
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "allowed": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Firewall-GoogleFirewallRuleScopeViewModel"
                        }
                    },
                    "denied": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Google-Firewall-GoogleFirewallRuleScopeViewModel"
                        }
                    },
                    "destinationRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "sourceRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourceTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "targetTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isProtected": {
                        "type": "boolean"
                    },
                    "priority": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "direction": {
                        "enum": [
                            "Ingress",
                            "Egress"
                        ],
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Google-Instance-SecurityGroupOfFirewallRule": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    }
                }
            },
            "Models-HomeViewModel": {
                "type": "object",
                "properties": {
                    "serversCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudAccountsCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Leases-IamSafeLeaseViewModel": {
                "required": [
                    "cloudAccountId",
                    "expirationDate"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Lease id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "Cloud account id for the user",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "expirationDate": {
                        "format": "date-time",
                        "description": "Lease expiry time",
                        "type": "string"
                    },
                    "user": {
                        "description": "Account user",
                        "type": "string"
                    },
                    "iamEntities": {
                        "description": "AWS IAM users and roles ARN affected by lease",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Leases-IamSafeCustomLeasePostViewModel": {
                "required": [
                    "cloudAccountId",
                    "iamEntityArn"
                ],
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "[Required] Cloud account id for the user",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "expirationDate": {
                        "format": "date-time",
                        "description": "[Required] Lease expiry time",
                        "type": "string"
                    },
                    "iamEntityArn": {
                        "description": "[Required] AWS IAM user or role ARN affected by lease",
                        "type": "string"
                    }
                }
            },
            "Leases-IamSafeLeasePostViewModel": {
                "required": [
                    "cloudAccountId",
                    "code"
                ],
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "expirationDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "iamEntityArn": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-InfrastructureAssessmentHistoryResultV2ViewModel": {
                "type": "object",
                "properties": {
                    "scannedAsset": {
                        "$ref": "#/components/schemas/CGN-VLM-Model-UnifiedScanResult-VlmScannedAsset"
                    },
                    "scanInfo": {
                        "$ref": "#/components/schemas/CGN-VLM-Model-UnifiedScanResult-VlmScanInfo"
                    },
                    "storedKey": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "environmentId": {
                        "format": "uuid",
                        "type": "string",
                        "readOnly": true,
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "environmentName": {
                        "type": "string"
                    },
                    "tests": {
                        "description": "list of rules in the assessment",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-RuleTestResultViewModel"
                        }
                    },
                    "testEntities": {
                        "description": "list of entities tested in the assessment",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "exclusions": {
                        "description": "list of exclusions associated with this assessment",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Exclusion-ExclusionViewModel"
                        }
                    },
                    "remediations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Remediation-RemediationViewModel"
                        }
                    },
                    "dataSyncStatus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Assessment-AssessmentDataSyncStatusEntityViewModel"
                        }
                    },
                    "createdTime": {
                        "format": "date-time",
                        "description": "date of assessment",
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "description": "assessment id",
                        "type": "integer"
                    },
                    "assessmentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "triggeredBy": {
                        "description": "reason for assessment",
                        "enum": [
                            "Unknown",
                            "ContinuousCompliancePolicy",
                            "Manual",
                            "SystemBundle",
                            "Serverless",
                            "Logic",
                            "Magellan",
                            "KubernetesRuntimeAssurance",
                            "ContainersRuntimeProtection",
                            "ExternalFinding",
                            "CIEM",
                            "Incident",
                            "WorkloadChangeMonitoring"
                        ],
                        "type": "string"
                    },
                    "assessmentPassed": {
                        "description": "assessment result",
                        "type": "boolean"
                    },
                    "hasErrors": {
                        "description": "assessment has errors",
                        "type": "boolean"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryStatsV2ViewModel",
                        "description": "summary statistics for assessment"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryBundleResultV2ViewModel"
                    },
                    "hasDataSyncStatusIssues": {
                        "type": "boolean"
                    },
                    "comparisonCustomId": {
                        "type": "string"
                    },
                    "additionalFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "CGN-VLM-Model-UnifiedScanResult-VlmScannedAsset": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "platform": {
                        "enum": [
                            "Aws",
                            "Azure",
                            "Google",
                            "Kubernetes",
                            "Terraform",
                            "Generic",
                            "KubernetesRuntimeAssurance",
                            "ShiftLeft",
                            "SourceCodeAssurance",
                            "ImageAssurance",
                            "Alibaba",
                            "Cft",
                            "ContainerRegistry",
                            "Ers",
                            "Oci",
                            "CIEM"
                        ],
                        "type": "string"
                    },
                    "environmentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "entityType": {
                        "enum": [
                            "Instance",
                            "VirtualMachine",
                            "VMInstance",
                            "Lambda",
                            "FunctionApp",
                            "CloudFunction",
                            "KubernetesImage",
                            "ContainerRegistryImage",
                            "EcsImage",
                            "ShiftLeftImage"
                        ],
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "entityName": {
                        "type": "string"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "additionalFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                }
            },
            "CGN-VLM-Model-UnifiedScanResult-VlmScanInfo": {
                "type": "object",
                "properties": {
                    "scanProducer": {
                        "type": "string"
                    },
                    "scanDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-InfrastructureAsCode-InfrastructureAssessmentResultViewModel": {
                "type": "object",
                "properties": {
                    "assessmentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "statusCode": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-Magellan-MagellanAccountOffboardingModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "type": "string"
                    },
                    "vendor": {
                        "enum": [
                            "AWS",
                            "Azure",
                            "GCP",
                            "Kubernetes",
                            "Alibaba",
                            "ERS",
                            "OCI"
                        ],
                        "type": "string"
                    },
                    "logTypes": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "flowlogs",
                                "CloudTrail",
                                "Both",
                                "GuardDuty"
                            ],
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-Magellan-MagellanOnboardingModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "description": "AWS cloud account id",
                        "type": "string"
                    },
                    "bucketName": {
                        "description": "The name of the bucket that Magellan (logic) will use for the onboarding [case sensitive]",
                        "type": "string"
                    },
                    "isUnifiedOnboarding": {
                        "type": "boolean"
                    },
                    "rulesetsIds": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "Views-Magellan-AwsLogicLogViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "description": "AWS cloud account id",
                        "type": "string"
                    },
                    "isOnboarded": {
                        "description": "indicates whether the account was successfully onboarded to Magellan (Log.ic)",
                        "type": "boolean"
                    },
                    "bucketName": {
                        "description": "The name of the bucket that Magellan (logic) will use for the onboarding [case sensitive]",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-Magellan-MagellanCustomOnboardingModel": {
                "type": "object",
                "properties": {
                    "bucketName": {
                        "type": "string"
                    },
                    "bucketAccountId": {
                        "type": "string"
                    },
                    "topicArn": {
                        "type": "string"
                    },
                    "cloudAccountIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "onboardingType": {
                        "enum": [
                            "flowlogs",
                            "CloudTrail",
                            "Both",
                            "GuardDuty"
                        ],
                        "type": "string"
                    },
                    "isUnifiedOnboarding": {
                        "description": "Boolean that check if the request was from UnifiedOnboarding method. not needed for API.",
                        "type": "boolean"
                    },
                    "rulesetsIds": {
                        "description": "List of rule sets.  not needed for API.",
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "isSubscribedAlready": {
                        "description": "Boolean that check if the account connect to centralized bucket on other account.",
                        "type": "boolean"
                    },
                    "isAutoDiscoveryEnabled": {
                        "description": "Boolean that check if the bucket should support auto discovery of additional accounts",
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-Magellan-MagellanOnboardingAzurePricingStorage-MagellanAlibabaActionTrailOnboardingModel": {
                "type": "object",
                "properties": {
                    "cloudAccountNumbers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-Magellan-MagellanOnboardingAzurePricingStorage-MagellanAzureNewStorageDetailsAfterArmModel": {
                "type": "object",
                "properties": {
                    "storageDetails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subscriptionId": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-Magellan-MagellanGcpOnboardingModel": {
                "type": "object",
                "properties": {
                    "cloudAccounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logType": {
                        "enum": [
                            "NetworkTraffic",
                            "AccountActivity",
                            "Both"
                        ],
                        "type": "string"
                    }
                }
            },
            "Models-IpAddressMetadataViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "set or get the internal id for the address",
                        "type": "string"
                    },
                    "cidr": {
                        "description": "set or get the CIDR for the address",
                        "type": "string"
                    },
                    "name": {
                        "description": "set or get the name for the IP address",
                        "type": "string"
                    },
                    "classificaiton": {
                        "description": "set or get the claasification of the IP address",
                        "enum": [
                            "External",
                            "Unsafe",
                            "Dmz",
                            "InternalVpc",
                            "InternalDc",
                            "NoClassification"
                        ],
                        "type": "string"
                    },
                    "classification": {
                        "enum": [
                            "External",
                            "Unsafe",
                            "Dmz",
                            "InternalVpc",
                            "InternalDc",
                            "NoClassification"
                        ],
                        "type": "string"
                    }
                }
            },
            "IPList-IpListViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "IP List Name",
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "[a-zA-Z0-9/\\-_:]*[a-zA-Z]+[a-zA-Z0-9/\\-_:]*",
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "description": "IP List Id",
                        "type": "integer"
                    },
                    "description": {
                        "description": "IP List Description",
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-IPDescriptor"
                        }
                    }
                }
            },
            "Falconetix-Model-IPDescriptor": {
                "required": [
                    "ip"
                ],
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "comment": {
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "IPList-IpListPutViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int64",
                        "description": "IP List Id",
                        "type": "integer"
                    },
                    "description": {
                        "description": "IP List Description",
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-IPDescriptor"
                        }
                    }
                }
            },
            "LicenseActivator-LicenseViewModel": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "userCenterId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "sku": {
                        "type": "string"
                    },
                    "productType": {
                        "enum": [
                            "Unknown",
                            "",
                            "Logic"
                        ],
                        "type": "string"
                    },
                    "macro": {
                        "type": "string"
                    },
                    "qty": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "expirationDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "LicenseActivator-LicenseGetRequestModel": {
                "required": [
                    "userName",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "userName": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "LicenseActivator-LicenseActivatorViewModel": {
                "required": [
                    "services"
                ],
                "type": "object",
                "properties": {
                    "userCenterAccountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LicenseActivator-LicenseActivatorViewModelService"
                        }
                    }
                }
            },
            "LicenseActivator-LicenseActivatorViewModelService": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "productType": {
                        "enum": [
                            "Unknown",
                            "",
                            "Logic"
                        ],
                        "type": "string"
                    },
                    "sku": {
                        "enum": [
                            "Undefined",
                            "CPCGD9CNX100CONTRACTEVAL",
                            "CPCGD9CNP100CONTRACTEVAL",
                            "CPCGD9CNP25CONTRACT1Y",
                            "CPCGD9CNP25CONTRACTREN1Y",
                            "CPCGD9CNP25CONTRACT2Y",
                            "CPCGD9CNP25CONTRACT3Y",
                            "CPCGD9CNP25RENCONTRACT1Y",
                            "CPCGD9CNP100CONTRACT1Y",
                            "CPCGD9CNP100CONTRACT1YINF",
                            "CPCGD9CNP100BUNCONTRACT1Y",
                            "CPCGD9CNP100CONTRACT2Y",
                            "CPCGD9CNP100CONTRACT2YINF",
                            "CPCGD9CNP100CONTRACT3Y",
                            "CPCGD9CNP100CONTRACT3YINF",
                            "CPCGD9CNP100RENCONTRACT1Y",
                            "CPCGD9CNP100RENCONTRACT2Y",
                            "CPCGD9CNP100RENCONTRACT3Y",
                            "CPCGD9CNX252YCONTRACT",
                            "CPCGD9CNX25CONTRACT1Y",
                            "CPCGD9CNX251YCONTRACT",
                            "CPCGD9CNX253YCONTRACT",
                            "CPCGD9CNX1001Y",
                            "CPCGD9CNX1001YINF",
                            "CPCGD9CNX100CONTRACT1Y",
                            "CPCGD9CNX100CONTRACT2Y",
                            "CPCGD9CNX100CONTRACT3Y",
                            "CPCGD9CNX100RENCONTRACT1Y",
                            "CPCGD9CNX100RENCONTRACT2Y",
                            "CPCGD9CNX100RENCONTRACT3Y",
                            "CPCGLG10GBYLOGCONTRACTEVAL",
                            "CPCGLG1000GBMLOGCONTRACTEVAL",
                            "CPCGLG10TBYLOGCONTRACTEVAL",
                            "CPCGLG10TBMLOGCONTRACTEVAL",
                            "CPCGLG1000GBYLOGRENCONTRACT1Y",
                            "CPCGLG1000GBMLOGCONTRACT1Y",
                            "CPCGLG1000GBMLOGCONTRACT2Y",
                            "CPCGLG1000GBMLOGCONTRACT3Y",
                            "CPCGLG1000GBYLOGCONTRACT1Y",
                            "CPCGLG1000GBYLOGCONTRACT2Y",
                            "CPCGLG1000GBYLOGCONTRACT3Y",
                            "CPCGLG10TBMLOGCONTRACT1Y",
                            "CPCGLG10TBMLOGCONTRACT2Y",
                            "CPCGLG10TBMLOGCONTRACT3Y",
                            "CPCGLG10TBYLOGCONTRACT1Y",
                            "CPCGLG10TBYLOGCONTRACT2Y",
                            "CPCGLG10TBYLOGCONTRACT3Y",
                            "CGD9_CNP_100",
                            "CGD9_CNX_100",
                            "CNP_100",
                            "CNX_100",
                            "CGLG_1000GB_MLOG",
                            "CGLG_10TB_MLOG",
                            "CGLG_1000GB_YLOG",
                            "CGLG_10TB_YLOG",
                            "CP_CGD9_CNP_100_PSMO",
                            "CP_CGD9_CNP_100_PS",
                            "CP_CGD9_CNP_100_PS_TESTPLAN"
                        ],
                        "type": "string"
                    },
                    "seats": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "expirationDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "amountOfYears": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "macro": {
                        "type": "string"
                    }
                }
            },
            "LicenseActivator-LicenseActivateRequestModel": {
                "required": [
                    "licenses",
                    "userName",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "licenses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LicenseActivator-LicenseActivatorViewModel"
                        }
                    },
                    "userName": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "Controllers-LicensingController-UpdateFeatureModel": {
                "type": "object",
                "properties": {
                    "feature": {
                        "enum": [
                            "Network",
                            "Compliance",
                            "IAM Safety",
                            "FIM",
                            "Enterprise"
                        ],
                        "type": "string"
                    },
                    "featureEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "Controllers-LicensingController-ComplianceApprovalNeededViewModel": {
                "type": "object",
                "properties": {
                    "isComplianceApprovalNeeded": {
                        "type": "boolean"
                    }
                }
            },
            "Controllers-LicensingController-LicensingViewModel": {
                "type": "object",
                "properties": {
                    "emailNotificationsAllowed": {
                        "type": "boolean"
                    },
                    "apiAllowed": {
                        "type": "boolean"
                    },
                    "longAccessLeasesAllowed": {
                        "type": "boolean"
                    },
                    "twoFactorAuthenticationAllowed": {
                        "type": "boolean"
                    }
                }
            },
            "MSP-Api-V1-ManagedAccountGetViewModel": {
                "required": [
                    "companyName",
                    "pointOfContact",
                    "adminEmail",
                    "adminFirstName",
                    "adminLastName"
                ],
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "int64",
                        "description": " account unique identifier",
                        "type": "integer"
                    },
                    "adminUserId": {
                        "format": "int32",
                        "description": " user unique identifier. This admin user can't be deleted.",
                        "type": "integer"
                    },
                    "trust": {
                        "$ref": "#/components/schemas/Account-AccountTrustViewModel"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "pointOfContact": {
                        "type": "string"
                    },
                    "adminEmail": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "adminFirstName": {
                        "type": "string"
                    },
                    "adminLastName": {
                        "type": "string"
                    }
                }
            },
            "MSP-Api-V1-ManagedAccountPostViewModel": {
                "required": [
                    "companyName",
                    "pointOfContact",
                    "adminEmail",
                    "adminFirstName",
                    "adminLastName"
                ],
                "type": "object",
                "properties": {
                    "trustMspAccount": {
                        "description": "Whether to allow cross-account-access from your MSP account to the newly created managed account",
                        "type": "boolean"
                    },
                    "trustRestrictions": {
                        "$ref": "#/components/schemas/Account-AccountTrustRestrictionsViewModel",
                        "description": "Role restrictions for the cross-account-access permission. relevant only if {.MSP.Api.V1.ManagedAccountPostViewModel.TrustMspAccount} is true."
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "pointOfContact": {
                        "type": "string"
                    },
                    "adminEmail": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "adminFirstName": {
                        "type": "string"
                    },
                    "adminLastName": {
                        "type": "string"
                    }
                }
            },
            "MSP-Api-V1-ManagedAccountPostUserViewModel": {
                "required": [
                    "managedAccountId",
                    "email",
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "managedAccountId": {
                        "format": "int64",
                        "description": " account unique identifier",
                        "type": "integer"
                    },
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "firstName": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "lastName": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "ssoEnabled": {
                        "description": "Enabling SAML 2.0 SSO",
                        "type": "boolean"
                    }
                }
            },
            "MSP-Api-V1-ManagedAccountGetUserViewModel": {
                "required": [
                    "managedAccountId",
                    "email",
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "userId": {
                        "format": "int64",
                        "description": " user unique identifier",
                        "type": "integer"
                    },
                    "managedAccountId": {
                        "format": "int64",
                        "description": " account unique identifier",
                        "type": "integer"
                    },
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "firstName": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "lastName": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "ssoEnabled": {
                        "description": "Enabling SAML 2.0 SSO",
                        "type": "boolean"
                    }
                }
            },
            "MSP-Api-V1-ManagedAccountEmailViewModel": {
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    }
                }
            },
            "MSP-Api-V1-ManagedAccountPutIconViewModel": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "blob": {
                        "type": "string"
                    }
                }
            },
            "MSP-Api-V1-ManagedAccountGetIconViewModel": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-OrganizationalUnit-OrganizationalUnitNodeViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-OrganizationalUnit-OrganizationalUnitNodeViewModel"
                        }
                    }
                }
            },
            "Falconetix-Model-OrganizationalUnit-OrganizationalUnitViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "parentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Falconetix-Model-OrganizationalUnit-OrganizationalUnitEntityTreeItem": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "awsCloudAcountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "azureCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "ociCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "googleCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "k8sCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "shiftLeftCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "alibabaCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "containerRegistryAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "awsAggregatedCloudAcountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "azureAggregateCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "ociAggregateCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "googleAggregateCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "k8sAggregateCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "shiftLeftAggregateCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "alibabaAggregateCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "containerRegistryAggregateCloudAccountsCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "subOrganizationalUnitsCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isRoot": {
                        "type": "boolean"
                    },
                    "isParentRoot": {
                        "type": "boolean"
                    },
                    "pathStr": {
                        "type": "string"
                    }
                }
            },
            "BL-Std-Services-OrganizationalUnit-UpdateOrganizationalUnitViewModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "[^/]+$",
                        "type": "string"
                    },
                    "parentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Models-PermissionViewModel": {
                "type": "object",
                "properties": {
                    "userId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "srl": {
                        "type": "string"
                    },
                    "manage": {
                        "type": "boolean"
                    },
                    "view": {
                        "type": "boolean"
                    },
                    "add": {
                        "type": "boolean"
                    },
                    "access": {
                        "type": "boolean"
                    }
                }
            },
            "ProtectedAsset-SearchRequestViewModel": {
                "description": "Search or filter parameters. This object is passed via url so the field names are short because quary params are limited (about 2000 chars)",
                "type": "object",
                "properties": {
                    "pageSize": {
                        "format": "int32",
                        "description": "page size (number of findings returned per page). default: 10.",
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "skipAggregations": {
                        "type": "boolean"
                    },
                    "aggregations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sorting": {
                        "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-SortingViewModel",
                        "description": "sort data"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-SearchFilterViewModel",
                        "description": "filter"
                    },
                    "searchAfter": {
                        "description": "token for the page of findings (first page if not specified)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "additionalFields": {
                        "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-AdditionalFieldsRequestViewModel"
                    },
                    "optionalAggregationFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "externalAdditionalFields": {
                        "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-AdditionalFieldsRequestViewModel"
                    },
                    "filterEntitiesWithoutRiskScore": {
                        "type": "boolean"
                    }
                }
            },
            "CGN-OpenSearch-Model-CommonViewModels-SortingViewModel": {
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string"
                    },
                    "direction": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "CGN-OpenSearch-Model-CommonViewModels-SearchFilterViewModel": {
                "type": "object",
                "properties": {
                    "freeTextPhrase": {
                        "type": "string"
                    },
                    "freeTextForIdsPhrase": {
                        "type": "string"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-FieldFilterViewModel"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-TagViewModel"
                        }
                    },
                    "includedEntityTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludedEntityTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CGN-OpenSearch-Model-CommonViewModels-AdditionalFieldsRequestViewModel": {
                "type": "object",
                "properties": {
                    "source": {
                        "type": "string"
                    },
                    "filterFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-FieldFilterViewModel"
                        }
                    },
                    "sortField": {
                        "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-SortingViewModel"
                    }
                }
            },
            "CGN-OpenSearch-Model-CommonViewModels-TagViewModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "ProtectedAsset-ProtectedAssetPaganationViewModel": {
                "type": "object",
                "properties": {
                    "searchRequest": {
                        "$ref": "#/components/schemas/ProtectedAsset-SearchRequestViewModel",
                        "description": "search request for findings"
                    },
                    "assets": {
                        "description": "current page of findings",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProtectedAsset-ProtectedAssetViewModel"
                        }
                    },
                    "totalCount": {
                        "format": "int64",
                        "description": "total number of findings",
                        "type": "integer"
                    },
                    "aggregations": {
                        "description": "aggregate findings per search or filter entity (facet)",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-FieldAggregationViewModel"
                            }
                        }
                    },
                    "searchAfter": {
                        "description": "token for next page of results",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ProtectedAsset-ProtectedAssetViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id of the entity SRL-accountId",
                        "type": "string"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "externalCloudAccountId": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "cloudaccount id",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "srl": {
                        "description": "SRL",
                        "type": "string"
                    },
                    "type": {
                        "description": "rule engine type Enum",
                        "type": "string"
                    },
                    "name": {
                        "description": "entity Name",
                        "type": "string"
                    },
                    "tags": {
                        "description": "entity Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-OpenSearch-Model-CommonViewModels-TagViewModel"
                        }
                    },
                    "platform": {
                        "description": "aws,azure,gcp",
                        "type": "string"
                    },
                    "typeByPlatform": {
                        "description": "rule engine type Enum by the platform (aws,azure,gcp...) in formt of platform|type",
                        "type": "string"
                    },
                    "network": {
                        "description": "VPC for Aws, Vnet for Azure, Network for Gcp",
                        "type": "string"
                    },
                    "region": {
                        "description": "aws region , azure region(not resourcegroup) , gcp location",
                        "type": "string"
                    },
                    "resourceGroup": {
                        "description": "azure resourcegroup and aws in the future...",
                        "type": "string"
                    },
                    "additionalFields": {
                        "description": "AdditionalFields we want to add that are relevant for our entities but dont want to mess the general object...",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-OpenSearch-Model-AssetsIndexer-AssetIndexerAdditionalField"
                        }
                    },
                    "externalAdditionalFields": {
                        "description": "ExternalAdditionalFields: AdditionalFields we want to add from external sources, that are relevant for our entities",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CGN-OpenSearch-Model-AssetsIndexer-AssetIndexerExternalAdditionalField"
                        }
                    },
                    "assetLabels": {
                        "description": "AssetLabels: Labels we want to add on an entity.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "compartment": {
                        "description": "OCI Compartment",
                        "type": "string"
                    },
                    "riskScore": {
                        "format": "double",
                        "description": "Risk score",
                        "type": "number"
                    },
                    "postureFindings": {
                        "description": "Severity name and its unique finding count",
                        "type": "object",
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "businessPriority": {
                        "description": "Business Modifier Priority",
                        "type": "string"
                    },
                    "cvEs": {
                        "description": "CVEs per severity",
                        "type": "object",
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "malware": {
                        "format": "int32",
                        "description": "Number of Malware",
                        "type": "integer"
                    },
                    "malwarePerSeverity": {
                        "description": "Malware per severity",
                        "type": "object",
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "secrets": {
                        "format": "int32",
                        "description": "Number of Secrets",
                        "type": "integer"
                    },
                    "secretsPerSeverity": {
                        "description": "Secrets per severity",
                        "type": "object",
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "context": {
                        "$ref": "#/components/schemas/ProtectedAsset-ContextViewModel",
                        "description": "Asset context"
                    },
                    "vulnerability": {
                        "$ref": "#/components/schemas/CGN-Common-Model-Vlm-VlmAssetMetadata"
                    }
                }
            },
            "CGN-OpenSearch-Model-CommonViewModels-FieldAggregationViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "object"
                    },
                    "count": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "CGN-OpenSearch-Model-AssetsIndexer-AssetIndexerAdditionalField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CGN-OpenSearch-Model-AssetsIndexer-AssetIndexerExternalAdditionalField": {
                "type": "object",
                "properties": {
                    "source": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "ProtectedAsset-ContextViewModel": {
                "type": "object",
                "properties": {
                    "networkExposure": {
                        "type": "string"
                    },
                    "iamSensitivity": {
                        "format": "double",
                        "type": "number"
                    },
                    "dataSensitivity": {
                        "type": "string"
                    },
                    "iamExposure": {
                        "type": "string"
                    },
                    "dataClassifications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "wafProtection": {
                        "type": "string"
                    }
                }
            },
            "CGN-Common-Model-Vlm-VlmAssetMetadata": {
                "type": "object",
                "properties": {
                    "stats": {
                        "$ref": "#/components/schemas/CGN-VLM-Model-Entities-VulnerabilityStats"
                    },
                    "scanStatus": {
                        "type": "string"
                    },
                    "scanStatusDetails": {
                        "type": "string"
                    }
                }
            },
            "CGN-VLM-Model-Entities-VulnerabilityStats": {
                "type": "object",
                "properties": {
                    "cve": {
                        "$ref": "#/components/schemas/CGN-VLM-Model-Entities-VulnerabilitySeverityStats"
                    },
                    "cveFixable": {
                        "$ref": "#/components/schemas/CGN-VLM-Model-Entities-VulnerabilitySeverityStats"
                    },
                    "threat": {
                        "$ref": "#/components/schemas/CGN-VLM-Model-Entities-VulnerabilitySeverityStats"
                    },
                    "secret": {
                        "$ref": "#/components/schemas/CGN-VLM-Model-Entities-VulnerabilitySeverityStats"
                    }
                }
            },
            "CGN-VLM-Model-Entities-VulnerabilitySeverityStats": {
                "type": "object",
                "properties": {
                    "all": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "critical": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "high": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "medium": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "low": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "informational": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "unknown": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Falconetix-Model-Serverless-Protego-ProtegoInvocationsEntity": {
                "type": "object",
                "properties": {
                    "date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "sum": {
                        "format": "double",
                        "type": "number"
                    }
                }
            },
            "Role-EditRoleViewModel": {
                "required": [
                    "name",
                    "permissions"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Role Name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Role Description",
                        "type": "string"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/User-PermissionsViewModel",
                        "description": "Permissions of the role"
                    }
                }
            },
            "User-PermissionsViewModel": {
                "type": "object",
                "properties": {
                    "access": {
                        "description": "Access permission list (list of SRLs)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "manage": {
                        "description": "Manage permission list (list of SRLs)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rulesets": {
                        "description": "Compliance permission list (list of SRLs)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notifications": {
                        "description": "Compliance permission list (list of SRLs)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "policies": {
                        "description": "Compliance permission list (list of SRLs)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "alertActions": {
                        "description": "Compliance permission list (list of SRLs)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "create": {
                        "description": "Create permission list (list of SRLs)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "view": {
                        "description": "View permission list (list of SRLs)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "onBoarding": {
                        "description": "View permission SRL",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "crossAccountAccess": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Role-RoleGetViewModel": {
                "required": [
                    "name",
                    "permissions"
                ],
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role-RoleGetUserViewModel"
                        }
                    },
                    "serviceAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role-RoleGetServiceAccountViewModel"
                        }
                    },
                    "id": {
                        "format": "int64",
                        "description": "Role Id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Role Name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Role Description",
                        "type": "string"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/User-PermissionsViewModel",
                        "description": "Permissions of the role"
                    }
                }
            },
            "Role-RoleGetUserViewModel": {
                "type": "object",
                "properties": {
                    "userId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "userName": {
                        "type": "string"
                    }
                }
            },
            "Role-RoleGetServiceAccountViewModel": {
                "type": "object",
                "properties": {
                    "serviceAccountName": {
                        "type": "string"
                    },
                    "serviceAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Role-RoleViewModel": {
                "required": [
                    "name",
                    "permissions"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int64",
                        "description": "Role Id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Role Name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Role Description",
                        "type": "string"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/User-PermissionsViewModel",
                        "description": "Permissions of the role"
                    }
                }
            },
            "Controllers-RuleObjectModelResultViewModel": {
                "type": "object",
                "properties": {
                    "ruleEntityTypeName": {
                        "type": "string"
                    },
                    "objectModel": {
                        "type": "object"
                    },
                    "cloudType": {
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "containerregistry",
                            "ers",
                            "oci",
                            "ocigov",
                            "ocigovuk",
                            "CIEM"
                        ],
                        "type": "string"
                    }
                }
            },
            "Models-SecurityGroupViewModel": {
                "type": "object",
                "properties": {
                    "securityGroupId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "securityGroupName": {
                        "type": "string"
                    },
                    "securityGroupDescription": {
                        "type": "string"
                    },
                    "loggingPolicy": {
                        "enum": [
                            "NoLogging",
                            "LogSuccess",
                            "LogDeny",
                            "LogBoth"
                        ],
                        "type": "string"
                    },
                    "fimPolicy": {
                        "$ref": "#/components/schemas/Models-FIMPolicyViewModel"
                    },
                    "whitelist": {
                        "type": "object",
                        "properties": {
                            "inbound": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Falconetix-WebApi-Models-ScopeElementViewModel"
                                }
                            },
                            "outbound": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Falconetix-WebApi-Models-ScopeElementViewModel"
                                }
                            }
                        }
                    },
                    "services": {
                        "type": "object",
                        "properties": {
                            "inbound": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-SecurityGroupServiceViewModel"
                                }
                            },
                            "outbound": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Models-SecurityGroupServiceViewModel"
                                }
                            }
                        }
                    }
                }
            },
            "Models-FIMPolicyViewModel": {
                "required": [
                    "frequency",
                    "enabled",
                    "rules",
                    "excludedFileTypes"
                ],
                "type": "object",
                "properties": {
                    "frequency": {
                        "enum": [
                            "Every6Hours",
                            "Every12Hours",
                            "OnceADay",
                            "OnceAWeek"
                        ],
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Models-FIMPolicyViewModel-FIMRuleViewModel"
                        }
                    },
                    "excludedFileTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-SecurityGroupServiceViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "protocolType": {
                        "enum": [
                            "ALL",
                            "HOPOPT",
                            "ICMP",
                            "IGMP",
                            "GGP",
                            "IPV4",
                            "ST",
                            "TCP",
                            "CBT",
                            "EGP",
                            "IGP",
                            "BBN_RCC_MON",
                            "NVP2",
                            "PUP",
                            "ARGUS",
                            "EMCON",
                            "XNET",
                            "CHAOS",
                            "UDP",
                            "MUX",
                            "DCN_MEAS",
                            "HMP",
                            "PRM",
                            "XNS_IDP",
                            "TRUNK1",
                            "TRUNK2",
                            "LEAF1",
                            "LEAF2",
                            "RDP",
                            "IRTP",
                            "ISO_TP4",
                            "NETBLT",
                            "MFE_NSP",
                            "MERIT_INP",
                            "DCCP",
                            "ThreePC",
                            "IDPR",
                            "XTP",
                            "DDP",
                            "IDPR_CMTP",
                            "TPplusplus",
                            "IL",
                            "IPV6",
                            "SDRP",
                            "IPV6_ROUTE",
                            "IPV6_FRAG",
                            "IDRP",
                            "RSVP",
                            "GRE",
                            "DSR",
                            "BNA",
                            "ESP",
                            "AH",
                            "I_NLSP",
                            "SWIPE",
                            "NARP",
                            "MOBILE",
                            "TLSP",
                            "SKIP",
                            "ICMPV6",
                            "IPV6_NONXT",
                            "IPV6_OPTS",
                            "CFTP",
                            "SAT_EXPAK",
                            "KRYPTOLAN",
                            "RVD",
                            "IPPC",
                            "SAT_MON",
                            "VISA",
                            "IPCV",
                            "CPNX",
                            "CPHB",
                            "WSN",
                            "PVP",
                            "BR_SAT_MON",
                            "SUN_ND",
                            "WB_MON",
                            "WB_EXPAK",
                            "ISO_IP",
                            "VMTP",
                            "SECURE_VMTP",
                            "VINES",
                            "TTP",
                            "NSFNET_IGP",
                            "DGP",
                            "TCF",
                            "EIGRP",
                            "OSPFIGP",
                            "SPRITE_RPC",
                            "LARP",
                            "MTP",
                            "AX25",
                            "IPIP",
                            "MICP",
                            "SCC_SP",
                            "ETHERIP",
                            "ENCAP",
                            "GMTP",
                            "IFMP",
                            "PNNI",
                            "PIM",
                            "ARIS",
                            "SCPS",
                            "QNX",
                            "AN",
                            "IPCOMP",
                            "SNP",
                            "COMPAQ_PEER",
                            "IPX_IN_IP",
                            "VRRP",
                            "PGM",
                            "L2TP",
                            "DDX",
                            "IATP",
                            "STP",
                            "SRP",
                            "UTI",
                            "SMP",
                            "SM",
                            "PTP",
                            "ISIS",
                            "FIRE",
                            "CRTP",
                            "CRUDP",
                            "SSCOPMCE",
                            "IPLT",
                            "SPS",
                            "PIPE",
                            "SCTP",
                            "FC",
                            "RSVP_E2E_IGNORE",
                            "MOBILITY_HEADER",
                            "UDPLITE",
                            "MPLS_IN_IP",
                            "MANET",
                            "HIP",
                            "SHIM6",
                            "WESP",
                            "ROHC"
                        ],
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-WebApi-Models-ScopeElementViewModel"
                        }
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Models-FIMPolicyViewModel-FIMRuleViewModel": {
                "type": "object",
                "properties": {
                    "include": {
                        "type": "boolean"
                    },
                    "value": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    }
                }
            },
            "Models-UpdateItem": {
                "type": "object",
                "properties": {
                    "op": {
                        "description": "Usually one of:\r\nremove\r\nadd\r\nreplace\r\nmove\r\ncopy\r\n\r\nHowever , can be customized in some cases",
                        "type": "string"
                    },
                    "path": {
                        "description": "the field or path to field",
                        "type": "string"
                    },
                    "value": {
                        "description": "the target value of the operation. could be basic or complex type",
                        "type": "object"
                    }
                }
            },
            "Models-SecurityGroupNameViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Models-FimPolicyUpdateViewModel": {
                "type": "object",
                "properties": {
                    "sgId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "fimPolicy": {
                        "$ref": "#/components/schemas/Models-FIMPolicyViewModel"
                    }
                }
            },
            "Models-LoggingPolicyViewModel": {
                "type": "object",
                "properties": {
                    "loggingPolicy": {
                        "type": "string"
                    }
                }
            },
            "Models-AgentServiceViewModel": {
                "required": [
                    "name",
                    "protocol"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                    },
                    "portRange": {
                        "$ref": "#/components/schemas/Common-DataTypes-PortRange"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "normallyOpen": {
                        "type": "boolean"
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-WebApi-Models-ScopeElementViewModel"
                        }
                    },
                    "icmpType": {
                        "type": "string"
                    },
                    "icmpV6Type": {
                        "type": "string"
                    }
                }
            },
            "Common-DataTypes-PortRange": {
                "type": "object",
                "properties": {
                    "portFrom": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "portTo": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "SecurityGroup-AddSecurityGroupViewModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "serverId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "Serverless-ServerlessAddAccountRequest": {
                "required": [
                    "cloudAccountId"
                ],
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "type": "string"
                    },
                    "cloudProvider": {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string"
                    }
                }
            },
            "Serverless-ServerlessAccountViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudVendor": {
                        "enum": [
                            "aws",
                            "azure",
                            "kubernetes"
                        ],
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "crossAccountRoleTemplateURL": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "shouldUpdate": {
                        "type": "boolean"
                    },
                    "isOrgOnboarding": {
                        "type": "boolean"
                    },
                    "isOrgOnboardingManagement": {
                        "type": "boolean"
                    },
                    "hasMissingPermissions": {
                        "type": "boolean"
                    },
                    "deleteAccountRoleTemplateURL": {
                        "type": "string"
                    },
                    "genericTemplateUrl": {
                        "type": "string"
                    },
                    "fspAutoInstrumentation": {
                        "type": "boolean"
                    },
                    "fspAutoInstrumentationState": {
                        "type": "string"
                    },
                    "fspStickyVersion": {
                        "type": "string"
                    }
                }
            },
            "Serverless-ServerlessPutAccountViewModel": {
                "type": "object",
                "properties": {
                    "fspAutoInstrumentation": {
                        "type": "boolean"
                    },
                    "fspStickyVersion": {
                        "type": "string"
                    },
                    "policiesAction": {
                        "$ref": "#/components/schemas/Falconetix-Model-Serverless-ServerlessPoliciesAction"
                    }
                }
            },
            "Falconetix-Model-Serverless-ServerlessPoliciesAction": {
                "type": "object",
                "properties": {
                    "signature": {
                        "enum": [
                            "alert",
                            "block"
                        ],
                        "type": "string"
                    },
                    "malware": {
                        "enum": [
                            "alert",
                            "block"
                        ],
                        "type": "string"
                    }
                }
            },
            "Serverless-ServerlessAccountStatusViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "cloudVendor": {
                        "enum": [
                            "aws",
                            "azure",
                            "kubernetes"
                        ],
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "shouldUpdate": {
                        "type": "boolean"
                    },
                    "isOrgOnboarding": {
                        "type": "boolean"
                    },
                    "isOrgOnboardingManagement": {
                        "type": "boolean"
                    },
                    "hasMissingPermissions": {
                        "type": "boolean"
                    },
                    "validatePermissionsStatus": {
                        "enum": [
                            "Success",
                            "InProgress",
                            "Error"
                        ],
                        "type": "string"
                    },
                    "lastValidatePermissionsTimestamp": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Serverless-ServerlessExclusionViewModel": {
                "type": "object",
                "properties": {
                    "scope": {
                        "enum": [
                            "Account",
                            "Function",
                            "FunctionGroup",
                            "FunctionVersion",
                            "FunctionApp"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "payloadsType": {
                        "enum": [
                            "String",
                            "IoFingerprint",
                            "IoFeature",
                            "SignatureName"
                        ],
                        "type": "string"
                    },
                    "target": {
                        "enum": [
                            "Host",
                            "Ip",
                            "File",
                            "Process",
                            "Api",
                            "Http",
                            "Io",
                            "Signature"
                        ],
                        "type": "string"
                    },
                    "payloads": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Serverless-ServerlessExclusionModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "payloadsType": {
                        "enum": [
                            "String",
                            "IoFingerprint",
                            "IoFeature",
                            "SignatureName"
                        ],
                        "type": "string"
                    },
                    "target": {
                        "enum": [
                            "Host",
                            "Ip",
                            "File",
                            "Process",
                            "Api",
                            "Http",
                            "Io",
                            "Signature"
                        ],
                        "type": "string"
                    },
                    "payloads": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Serverless-ServerlessRuleViewModel": {
                "type": "object",
                "properties": {
                    "scope": {
                        "enum": [
                            "Account",
                            "Function",
                            "FunctionGroup",
                            "FunctionVersion",
                            "FunctionApp"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "payloadsType": {
                        "enum": [
                            "String",
                            "SignatureName"
                        ],
                        "type": "string"
                    },
                    "target": {
                        "enum": [
                            "Host",
                            "Ip",
                            "File",
                            "Process",
                            "Api",
                            "Http",
                            "Io",
                            "Signature"
                        ],
                        "type": "string"
                    },
                    "payloads": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Serverless-ServerlessRuleModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "payloadsType": {
                        "enum": [
                            "String",
                            "SignatureName"
                        ],
                        "type": "string"
                    },
                    "target": {
                        "enum": [
                            "Host",
                            "Ip",
                            "File",
                            "Process",
                            "Api",
                            "Http",
                            "Io",
                            "Signature"
                        ],
                        "type": "string"
                    },
                    "payloads": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Serverless-ServerlessDeleteRuleViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Serverless-ServerlessMissingPermissionsViewModel": {
                "type": "object",
                "properties": {
                    "lastValidatePermissionsTimestamp": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "validatePermissionsStatus": {
                        "enum": [
                            "Success",
                            "InProgress",
                            "Error"
                        ],
                        "type": "string"
                    },
                    "denyPermissionsList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serverless-ServerlessPermissionViewModel"
                        }
                    }
                }
            },
            "Serverless-ServerlessPermissionViewModel": {
                "type": "object",
                "properties": {
                    "serviceAction": {
                        "type": "string"
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "roleName": {
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serverless-ServerlessPermissionResourceViewModel"
                        }
                    }
                }
            },
            "Serverless-ServerlessPermissionResourceViewModel": {
                "type": "object",
                "properties": {
                    "arn": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-ServiceInterfaces-Serverless-ServerlessApiResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object"
                    },
                    "nextToken": {
                        "type": "string"
                    },
                    "statusCode": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Serverless-ServerlessFunctionViewModel": {
                "type": "object",
                "properties": {
                    "functionArn": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "accountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "vpc": {
                        "type": "string"
                    },
                    "funcRiskLevel": {
                        "type": "string"
                    },
                    "funcPostureScore": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "includesFSP": {
                        "type": "boolean"
                    },
                    "isRuntimeSupported": {
                        "type": "boolean"
                    },
                    "fspMode": {
                        "enum": [
                            "Alert",
                            "Block"
                        ],
                        "type": "string"
                    },
                    "fspVersion": {
                        "type": "string"
                    },
                    "scanStatus": {
                        "enum": [
                            "Disabled",
                            "Complete",
                            "Partial"
                        ],
                        "type": "string"
                    },
                    "timeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "whiteListProgressPercent": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "handler": {
                        "type": "string"
                    },
                    "fspAutoInstrumentation": {
                        "type": "boolean"
                    },
                    "fspAutoInstrumentationSupported": {
                        "type": "boolean"
                    },
                    "fspAutoInstrumentationState": {
                        "type": "string"
                    },
                    "fspAutoInstrumentationProgressStep": {
                        "type": "string"
                    },
                    "triggersAnalysis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serverless-FunctionPermissionViewModel"
                        }
                    },
                    "rolePermissionsAnalysis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serverless-FunctionPermissionViewModel"
                        }
                    },
                    "serverlessErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serverless-ServerlessErrorViewModel"
                        }
                    },
                    "fspFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Serverless-FunctionPermissionViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "suggestedPolicy": {
                        "type": "object"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serverless-FunctionPermissionResourceViewModel"
                        }
                    }
                }
            },
            "Serverless-ServerlessErrorViewModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Serverless-FunctionPermissionResourceViewModel": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    }
                }
            },
            "Serverless-ServerlessFunctionAppViewModel": {
                "type": "object",
                "properties": {
                    "includesFSP": {
                        "type": "boolean"
                    },
                    "fspMode": {
                        "enum": [
                            "Alert",
                            "Block"
                        ],
                        "type": "string"
                    },
                    "fspFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isRuntimeSupported": {
                        "type": "boolean"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "functionsSummary": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serverless-ServerlessFunctionSummaryViewModel"
                        }
                    },
                    "serverlessErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serverless-ServerlessErrorViewModel"
                        }
                    }
                }
            },
            "Serverless-ServerlessFunctionSummaryViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "whiteListProgress": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Serverless-ServerlessPodGroupViewModel": {
                "type": "object",
                "properties": {
                    "isLearningModeActive": {
                        "type": "boolean"
                    },
                    "fspMode": {
                        "enum": [
                            "Alert",
                            "Block"
                        ],
                        "type": "string"
                    },
                    "learningModeStartTime": {
                        "type": "string"
                    },
                    "learningModeEndTime": {
                        "type": "string"
                    },
                    "learningModePeriod": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "whiteListProgressPercent": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "Serverless-ServerlessPutFunctionsListViewModel": {
                "type": "object",
                "properties": {
                    "functionsData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serverless-ServerlessPutFunctionViewModel"
                        }
                    }
                }
            },
            "Serverless-ServerlessPutFunctionViewModel": {
                "type": "object",
                "properties": {
                    "functionId": {
                        "type": "string"
                    },
                    "fspAutoInstrumentation": {
                        "type": "boolean"
                    },
                    "isLearningModeActive": {
                        "type": "boolean"
                    },
                    "learningModePeriod": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "fspStickyVersion": {
                        "type": "string"
                    },
                    "fspMode": {
                        "enum": [
                            "Alert",
                            "Block"
                        ],
                        "type": "string"
                    }
                }
            },
            "Serverless-ServerlessPutFunctionResponseViewModel": {
                "type": "object",
                "properties": {
                    "functionId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusCode": {
                        "enum": [
                            "Continue",
                            "SwitchingProtocols",
                            "OK",
                            "Created",
                            "Accepted",
                            "NonAuthoritativeInformation",
                            "NoContent",
                            "ResetContent",
                            "PartialContent",
                            "MultipleChoices",
                            "Ambiguous",
                            "MovedPermanently",
                            "Moved",
                            "Found",
                            "Redirect",
                            "SeeOther",
                            "RedirectMethod",
                            "NotModified",
                            "UseProxy",
                            "Unused",
                            "TemporaryRedirect",
                            "RedirectKeepVerb",
                            "BadRequest",
                            "Unauthorized",
                            "PaymentRequired",
                            "Forbidden",
                            "NotFound",
                            "MethodNotAllowed",
                            "NotAcceptable",
                            "ProxyAuthenticationRequired",
                            "RequestTimeout",
                            "Conflict",
                            "Gone",
                            "LengthRequired",
                            "PreconditionFailed",
                            "RequestEntityTooLarge",
                            "RequestUriTooLong",
                            "UnsupportedMediaType",
                            "RequestedRangeNotSatisfiable",
                            "ExpectationFailed",
                            "UpgradeRequired",
                            "InternalServerError",
                            "NotImplemented",
                            "BadGateway",
                            "ServiceUnavailable",
                            "GatewayTimeout",
                            "HttpVersionNotSupported"
                        ],
                        "type": "string"
                    }
                }
            },
            "Serverless-ServerlessPutSingleFunctionViewModel": {
                "type": "object",
                "properties": {
                    "fspAutoInstrumentation": {
                        "type": "boolean"
                    },
                    "isLearningModeActive": {
                        "type": "boolean"
                    },
                    "learningModePeriod": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "fspMode": {
                        "enum": [
                            "Alert",
                            "Block"
                        ],
                        "type": "string"
                    },
                    "fspStickyVersion": {
                        "type": "string"
                    }
                }
            },
            "Serverless-EnableFSPViewModel": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean"
                    }
                }
            },
            "Serverless-ServerlessEnableFunctionFSPBlockBody": {
                "type": "object",
                "properties": {
                    "fspMode": {
                        "enum": [
                            "Alert",
                            "Block"
                        ],
                        "type": "string"
                    }
                }
            },
            "Serverless-ServerlessWhiteListViewModel": {
                "type": "object",
                "properties": {
                    "completed": {
                        "type": "boolean"
                    },
                    "whiteListProgressPercent": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "files": {
                        "$ref": "#/components/schemas/Serverless-WhiteListResourceTypeViewModel"
                    },
                    "ips": {
                        "$ref": "#/components/schemas/Serverless-WhiteListResourceTypeViewModel"
                    },
                    "hosts": {
                        "$ref": "#/components/schemas/Serverless-WhiteListResourceTypeViewModel"
                    },
                    "apis": {
                        "$ref": "#/components/schemas/Serverless-WhiteListResourceTypeViewModel"
                    },
                    "processes": {
                        "$ref": "#/components/schemas/Serverless-WhiteListResourceTypeViewModel"
                    },
                    "https": {
                        "$ref": "#/components/schemas/Serverless-WhiteListResourceTypeViewModel"
                    },
                    "inputs": {
                        "$ref": "#/components/schemas/Serverless-WhiteListResourceTypeViewModel"
                    },
                    "signatures": {
                        "$ref": "#/components/schemas/Serverless-WhiteListResourceTypeViewModel"
                    }
                }
            },
            "Serverless-WhiteListResourceTypeViewModel": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serverless-WhiteListResourceViewModel"
                        }
                    }
                }
            },
            "Serverless-WhiteListResourceViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "source": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "callstackInfo": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Serverless-ServerlessFspVersioViewModel": {
                "type": "object",
                "properties": {
                    "fspVersion": {
                        "type": "string"
                    },
                    "versionState": {
                        "type": "string"
                    },
                    "unsupportedRuntimes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Serverless-ServerlessFSPSupportedRuntimesViewModel": {
                "type": "object",
                "properties": {
                    "supportedRuntimes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Compliance-Serverless-Policy-ServerlessPolicyViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "topic": {
                        "enum": [
                            "TASK",
                            "SECURITY_EVENT",
                            "MANAGEMENT"
                        ],
                        "type": "string"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "provider": {
                        "enum": [
                            "aws",
                            "azure",
                            "kubernetes"
                        ],
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                }
            },
            "Compliance-Serverless-Policy-ServerlessPolicyRequestModel": {
                "required": [
                    "cloudAccountId",
                    "topic",
                    "notificationIds"
                ],
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "topic": {
                        "enum": [
                            "TASK",
                            "SECURITY_EVENT",
                            "MANAGEMENT"
                        ],
                        "type": "string"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "provider": {
                        "enum": [
                            "aws",
                            "azure",
                            "kubernetes"
                        ],
                        "type": "string"
                    }
                }
            },
            "ServiceAccountViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "[^/]+$",
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "roleIds": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "ServiceAccountGetViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "[^/]+$",
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "apiKeyId": {
                        "type": "string"
                    },
                    "roleIds": {
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "dateCreated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastUsed": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Falconetix-Model-EmailNotificationsDescriptor": {
                "type": "object",
                "properties": {
                    "state": {
                        "enum": [
                            "Active",
                            "Suspended",
                            "Deferred"
                        ],
                        "type": "string"
                    },
                    "serverCreatedOrDeleted": {
                        "type": "boolean"
                    },
                    "serverStatusChange": {
                        "type": "boolean"
                    },
                    "serverUpdated": {
                        "type": "boolean"
                    },
                    "awsProfileCreatedOrDeleted": {
                        "type": "boolean"
                    },
                    "cloudTamperDetected": {
                        "type": "boolean"
                    },
                    "awsInvalidCredentials": {
                        "type": "boolean"
                    },
                    "policyChanges": {
                        "type": "boolean"
                    },
                    "cloudExternalChanges": {
                        "type": "boolean"
                    },
                    "fimChanges": {
                        "type": "boolean"
                    },
                    "invitationEvent": {
                        "type": "boolean"
                    },
                    "leaseEvent": {
                        "type": "boolean"
                    },
                    "userCreatedOrDeleted": {
                        "type": "boolean"
                    },
                    "userPermissionsChange": {
                        "type": "boolean"
                    },
                    "userLogonSuccessfully": {
                        "type": "boolean"
                    },
                    "userLogonFailure": {
                        "type": "boolean"
                    },
                    "userLockOut": {
                        "type": "boolean"
                    },
                    "userForgotPassword": {
                        "type": "boolean"
                    },
                    "userPasswordChange": {
                        "type": "boolean"
                    },
                    "alertEventsNotifyLevel": {
                        "enum": [
                            "None",
                            "Low",
                            "Med",
                            "High"
                        ],
                        "type": "string"
                    },
                    "usersNotificationsOthers": {
                        "type": "boolean"
                    },
                    "accessNotificationsOthers": {
                        "type": "boolean"
                    },
                    "azureCloudAccountDeleted": {
                        "type": "boolean"
                    },
                    "azureInvalidCredentials": {
                        "type": "boolean"
                    },
                    "alibabaProfileCreatedOrDeleted": {
                        "type": "boolean"
                    },
                    "ociProfileCreatedOrDeleted": {
                        "type": "boolean"
                    },
                    "iamSafe": {
                        "$ref": "#/components/schemas/Falconetix-Model-IamSafeEmailNotificationsDescriptor"
                    },
                    "compliance": {
                        "$ref": "#/components/schemas/Falconetix-Model-ComplianceEmailNotificationsDescriptor"
                    },
                    "kubernetes": {
                        "$ref": "#/components/schemas/Falconetix-Model-KubernetesEmailNotificationsDescriptor"
                    }
                }
            },
            "Falconetix-Model-IamSafeEmailNotificationsDescriptor": {
                "type": "object",
                "properties": {
                    "leaseEvent": {
                        "type": "boolean"
                    },
                    "leaseNotificationsOthers": {
                        "type": "boolean"
                    },
                    "tamperDetected": {
                        "type": "boolean"
                    },
                    "enrollmentEvent": {
                        "type": "boolean"
                    },
                    "iamSafetyAccount": {
                        "type": "boolean"
                    },
                    "iamSafetyInvalidCredentials": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-ComplianceEmailNotificationsDescriptor": {
                "type": "object",
                "properties": {
                    "bundleAdded": {
                        "type": "boolean"
                    },
                    "bundleDeleted": {
                        "type": "boolean"
                    },
                    "ruleAdded": {
                        "type": "boolean"
                    },
                    "ruleChanged": {
                        "type": "boolean"
                    },
                    "ruleDeleted": {
                        "type": "boolean"
                    }
                }
            },
            "Falconetix-Model-KubernetesEmailNotificationsDescriptor": {
                "type": "object",
                "properties": {
                    "agentStatusDegradation": {
                        "type": "boolean"
                    }
                }
            },
            "Models-SnsSettingsViewModel": {
                "type": "object",
                "properties": {
                    "topicArn": {
                        "description": "AWS SNS Topic ARN value",
                        "type": "string"
                    }
                }
            },
            "Models-EmailNotificationFiltersViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-SettingsViewModel": {
                "type": "object",
                "properties": {
                    "pairingKey": {
                        "description": "pairing key",
                        "type": "string"
                    },
                    "emailNotifications": {
                        "$ref": "#/components/schemas/Falconetix-Model-EmailNotificationsDescriptor",
                        "description": "email notification details"
                    },
                    "defaultLeaseTime": {
                        "format": "double",
                        "description": "default lease time",
                        "type": "number"
                    },
                    "snsTopicArn": {
                        "description": "ARN for SNS Topic",
                        "type": "string"
                    },
                    "mfaEnabled": {
                        "description": "MFA is enabled",
                        "type": "boolean"
                    },
                    "apiKey": {
                        "description": "API Key",
                        "type": "string"
                    }
                }
            },
            "Tenable-Account-TenableVulnerabilitySyncViewModel": {
                "required": [
                    "tenableId"
                ],
                "type": "object",
                "properties": {
                    "since": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "tenableId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Tenable-Account-TenableVulnerabilitySyncResultViewModel": {
                "type": "object",
                "properties": {
                    "workFlow": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Tenable-Account-TenableAccountStatusViewModel": {
                "type": "object",
                "properties": {
                    "tenableId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tenableExternalAccountNumber": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "lastAssetSync": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastMatchedAssetsCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "lastVulnerabilitySync": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastMatchedVulnerabilitiesCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accessKey": {
                        "type": "string"
                    },
                    "secretKey": {
                        "type": "string"
                    }
                }
            },
            "Tenable-Account-TenableAccountViewModel": {
                "required": [
                    "name",
                    "accessKey",
                    "secretKey"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Tenable account name in ",
                        "type": "string"
                    },
                    "accessKey": {
                        "description": "Tenable API Access Key",
                        "type": "string"
                    },
                    "secretKey": {
                        "description": "Tenable  API Secret Key",
                        "type": "string"
                    }
                }
            },
            "User-UserViewModel": {
                "required": [
                    "permissions"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int32",
                        "description": "user id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "description": "user name",
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "type": "string",
                        "readOnly": true,
                        "example": "MyName@gmail.com"
                    },
                    "accountId": {
                        "format": "int64",
                        "description": "The account id of the user",
                        "type": "integer",
                        "readOnly": true
                    },
                    "isSuspended": {
                        "description": "user is suspended",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isOwner": {
                        "description": "user is account owner",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isSuperUser": {
                        "description": "user is Super User",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isAuditor": {
                        "description": "user is auditor user",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "hasApiKey": {
                        "description": "user has generated an API Key - V1 or V2",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "hasApiKeyV1": {
                        "description": "user has generated an API Key - V1",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "hasApiKeyV2": {
                        "description": "user has generated an API Key - V2",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isMfaEnabled": {
                        "description": "user has enabled MFA authentication",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "ssoEnabled": {
                        "description": "user has enabled SSO sign-on",
                        "type": "boolean"
                    },
                    "roleIds": {
                        "description": "list of roles for the user",
                        "type": "array",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "iamSafe": {
                        "$ref": "#/components/schemas/UserAndRole-IamSafe-UserIamSafeConfigViewModel",
                        "description": "IAM safety details for the user"
                    },
                    "canSwitchRole": {
                        "description": "user can switch roles",
                        "type": "boolean"
                    },
                    "isLocked": {
                        "type": "boolean"
                    },
                    "lastLogin": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/User-PermissionsViewModel",
                        "description": "User direct permissions"
                    },
                    "calculatedPermissions": {
                        "$ref": "#/components/schemas/User-PermissionsViewModel"
                    },
                    "isMobileDevicePaired": {
                        "description": "user has paired mobile device",
                        "type": "boolean"
                    },
                    "mfaEnforcement": {
                        "$ref": "#/components/schemas/UserAndRole-MfaUserEnforcementViewModel"
                    },
                    "apiKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAndRole-IamSafe-UserApiKeyViewModel"
                        }
                    }
                }
            },
            "UserAndRole-IamSafe-UserIamSafeConfigViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAndRole-IamSafe-UserIamSafeAccountViewModel"
                        }
                    }
                }
            },
            "UserAndRole-MfaUserEnforcementViewModel": {
                "type": "object",
                "properties": {
                    "mfaCoercingDate": {
                        "type": "string"
                    },
                    "isEnforced": {
                        "type": "boolean"
                    },
                    "enforcerFullName": {
                        "type": "string"
                    }
                }
            },
            "UserAndRole-IamSafe-UserApiKeyViewModel": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "[^/]+$",
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "dateCreated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastUsed": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "UserAndRole-IamSafe-UserIamSafeAccountViewModel": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                        "type": "string"
                    },
                    "externalAccountNumber": {
                        "type": "string"
                    },
                    "lastLeaseTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "iamEntities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "iamEntitiesLastLeaseTime": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAndRole-IamSafe-IamEntityLastLeaseTimeViewModel"
                        }
                    },
                    "cloudAccountState": {
                        "type": "string"
                    },
                    "iamEntity": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "UserAndRole-IamSafe-IamEntityLastLeaseTimeViewModel": {
                "type": "object",
                "properties": {
                    "iamEntity": {
                        "type": "string"
                    },
                    "lastLeaseTime": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "UserAndRole-IamSafe-UserIamSafeAccountPutViewModel": {
                "required": [
                    "iamEntities"
                ],
                "type": "object",
                "properties": {
                    "iamEntities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "User-UserPostViewModel": {
                "required": [
                    "email",
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "description": "Email Address",
                        "pattern": "^([0-9a-zA-Z]([-.'\\w\\+]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*\\.)+[a-zA-Z]{2,})$",
                        "type": "string",
                        "example": "MyName@gmail.com"
                    },
                    "firstName": {
                        "description": "[Required]",
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "lastName": {
                        "description": "[Required]",
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "ssoEnabled": {
                        "description": "Determines whether this user is an SSO user (as opposed to  native authentication)",
                        "type": "boolean"
                    }
                }
            },
            "Models-AlertsPartialUpdateViewModel_Falconetix-Model-WarningSeverity_": {
                "type": "object",
                "properties": {
                    "alertId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "data": {
                        "enum": [
                            "None",
                            "Low",
                            "Med",
                            "High"
                        ],
                        "type": "string"
                    }
                }
            },
            "Models-AlertsPartialUpdateViewModel_System-Boolean_": {
                "type": "object",
                "properties": {
                    "alertId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "data": {
                        "type": "boolean"
                    }
                }
            },
            "Models-AlertsPartialUpdateViewModel_System-String_": {
                "type": "object",
                "properties": {
                    "alertId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "data": {
                        "type": "string"
                    }
                }
            },
            "Models-GetDataParms_System-Object_": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string"
                    },
                    "page_size": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "page_index": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Models-GetDataParmsTimeFilter"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-Assessment-AssessmentResultViewModel_Newtonsoft-Json-Linq-JRaw_": {
                "description": "the API result structure. Aggregates results from multiple tests",
                "type": "object",
                "properties": {
                    "request": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Assessment-BaseAssessmentRequestViewModel",
                        "description": "Request information"
                    },
                    "tests": {
                        "description": "Tests results",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-RuleTestResult"
                        }
                    },
                    "locationMetadata": {
                        "$ref": "#/components/schemas/Falconetix-Model-Entites-RuleEngine-LocationMetadata",
                        "description": "Location metadata"
                    },
                    "testEntities": {
                        "description": "list of the cloud entities that were tested by the bundle",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "dataSyncStatus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Assessment-AssessmentDataSyncStatusEntityViewModel"
                        }
                    },
                    "assessmentPassed": {
                        "description": "assessment passed",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "hasErrors": {
                        "description": "assessment has errors",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "id": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "assessmentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryResultV2ViewModel_Newtonsoft-Json-Linq-JRaw_": {
                "type": "object",
                "properties": {
                    "tests": {
                        "description": "list of rules in the assessment",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-RuleTestResultViewModel"
                        }
                    },
                    "testEntities": {
                        "description": "list of entities tested in the assessment",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "exclusions": {
                        "description": "list of exclusions associated with this assessment",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Exclusion-ExclusionViewModel"
                        }
                    },
                    "remediations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Remediation-RemediationViewModel"
                        }
                    },
                    "dataSyncStatus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Assessment-AssessmentDataSyncStatusEntityViewModel"
                        }
                    },
                    "createdTime": {
                        "format": "date-time",
                        "description": "date of assessment",
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "description": "assessment id",
                        "type": "integer"
                    },
                    "assessmentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "triggeredBy": {
                        "description": "reason for assessment",
                        "enum": [
                            "Unknown",
                            "ContinuousCompliancePolicy",
                            "Manual",
                            "SystemBundle",
                            "Serverless",
                            "Logic",
                            "Magellan",
                            "KubernetesRuntimeAssurance",
                            "ContainersRuntimeProtection",
                            "ExternalFinding",
                            "CIEM",
                            "Incident",
                            "WorkloadChangeMonitoring"
                        ],
                        "type": "string"
                    },
                    "assessmentPassed": {
                        "description": "assessment result",
                        "type": "boolean"
                    },
                    "hasErrors": {
                        "description": "assessment has errors",
                        "type": "boolean"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryStatsV2ViewModel",
                        "description": "summary statistics for assessment"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryBundleResultV2ViewModel"
                    },
                    "hasDataSyncStatusIssues": {
                        "type": "boolean"
                    },
                    "comparisonCustomId": {
                        "type": "string"
                    },
                    "additionalFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryResultV2ViewModel_Falconetix-Model-RuleEngine-Entities-AssessmentHistoryMinimizedEntity_": {
                "type": "object",
                "properties": {
                    "tests": {
                        "description": "list of rules in the assessment",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-RuleTestResultViewModel"
                        }
                    },
                    "testEntities": {
                        "description": "list of entities tested in the assessment",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-AssessmentHistoryMinimizedEntity"
                            }
                        }
                    },
                    "exclusions": {
                        "description": "list of exclusions associated with this assessment",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Exclusion-ExclusionViewModel"
                        }
                    },
                    "remediations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Remediation-RemediationViewModel"
                        }
                    },
                    "dataSyncStatus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-Assessment-AssessmentDataSyncStatusEntityViewModel"
                        }
                    },
                    "createdTime": {
                        "format": "date-time",
                        "description": "date of assessment",
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "description": "assessment id",
                        "type": "integer"
                    },
                    "assessmentId": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "triggeredBy": {
                        "description": "reason for assessment",
                        "enum": [
                            "Unknown",
                            "ContinuousCompliancePolicy",
                            "Manual",
                            "SystemBundle",
                            "Serverless",
                            "Logic",
                            "Magellan",
                            "KubernetesRuntimeAssurance",
                            "ContainersRuntimeProtection",
                            "ExternalFinding",
                            "CIEM",
                            "Incident",
                            "WorkloadChangeMonitoring"
                        ],
                        "type": "string"
                    },
                    "assessmentPassed": {
                        "description": "assessment result",
                        "type": "boolean"
                    },
                    "hasErrors": {
                        "description": "assessment has errors",
                        "type": "boolean"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryStatsV2ViewModel",
                        "description": "summary statistics for assessment"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-ViewModels-AssessmentHistory-V2-AssessmentHistoryBundleResultV2ViewModel"
                    },
                    "hasDataSyncStatusIssues": {
                        "type": "boolean"
                    },
                    "comparisonCustomId": {
                        "type": "string"
                    },
                    "additionalFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "Models-CloudAccountPartialUpdateViewModel_System-String_": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "The  cloud account id, at least one of the following properties must be provided: \"cloudAccountId\", \"externalAccountNumber\"",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountNumber": {
                        "description": "Aws external account number, at least one of the following properties must be provided: \"cloudAccountId\", \"externalAccountNumber\"",
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                }
            },
            "Models-CloudAccountPartialUpdateViewModel_Models-CloudAccountRegionConfigurationViewModel_": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "The  cloud account id, at least one of the following properties must be provided: \"cloudAccountId\", \"externalAccountNumber\"",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountNumber": {
                        "description": "Aws external account number, at least one of the following properties must be provided: \"cloudAccountId\", \"externalAccountNumber\"",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Models-CloudAccountRegionConfigurationViewModel"
                    }
                }
            },
            "Models-CloudAccountPartialUpdateViewModel_Models-CloudAccountCredentialsViewModel_": {
                "type": "object",
                "properties": {
                    "cloudAccountId": {
                        "format": "uuid",
                        "description": "The  cloud account id, at least one of the following properties must be provided: \"cloudAccountId\", \"externalAccountNumber\"",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "externalAccountNumber": {
                        "description": "Aws external account number, at least one of the following properties must be provided: \"cloudAccountId\", \"externalAccountNumber\"",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Models-CloudAccountCredentialsViewModel"
                    }
                }
            },
            "System-Collections-Generic-KeyValuePair_System-String_System-String_": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "System-Collections-Generic-KeyValuePair_System-String_Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterAddonProfileViewModel_": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "readOnly": true
                    },
                    "value": {
                        "$ref": "#/components/schemas/Azure-AzureKubernetesCluster-AzureKubernetesManagedClusterAddonProfileViewModel",
                        "readOnly": true
                    }
                }
            },
            "Compliance-Finding-SelectAllRequestViewModel_Compliance-Models-ActionType_": {
                "type": "object",
                "properties": {
                    "searchRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel"
                    },
                    "actionRequest": {
                        "enum": [
                            "Undefined",
                            "Acknowledge",
                            "Severity",
                            "Assign",
                            "Comment",
                            "Close",
                            "Archive",
                            "Delete",
                            "Unarchive"
                        ],
                        "type": "string"
                    },
                    "excludedFindingsIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PutAcknowledgedViewModel_": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "details": {
                        "$ref": "#/components/schemas/Compliance-Finding-PutAcknowledgedViewModel"
                    }
                }
            },
            "Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PutAcknowledgedViewModel_": {
                "type": "object",
                "properties": {
                    "searchRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel"
                    },
                    "actionRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-PutAcknowledgedViewModel"
                    },
                    "excludedFindingsIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PutSeverityViewModel_": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "details": {
                        "$ref": "#/components/schemas/Compliance-Finding-PutSeverityViewModel"
                    }
                }
            },
            "Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PutSeverityViewModel_": {
                "type": "object",
                "properties": {
                    "searchRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel"
                    },
                    "actionRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-PutSeverityViewModel"
                    },
                    "excludedFindingsIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PutAssigneeViewModel_": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "details": {
                        "$ref": "#/components/schemas/Compliance-Finding-PutAssigneeViewModel"
                    }
                }
            },
            "Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PutAssigneeViewModel_": {
                "type": "object",
                "properties": {
                    "searchRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel"
                    },
                    "actionRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-PutAssigneeViewModel"
                    },
                    "excludedFindingsIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "Compliance-Finding-BulkViewModel-BulkRequestViewModel_Compliance-Finding-PostCommentViewModel_": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "details": {
                        "$ref": "#/components/schemas/Compliance-Finding-PostCommentViewModel"
                    }
                }
            },
            "Compliance-Finding-SelectAllRequestViewModel_Compliance-Finding-PostCommentViewModel_": {
                "type": "object",
                "properties": {
                    "searchRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel"
                    },
                    "actionRequest": {
                        "$ref": "#/components/schemas/Compliance-Finding-PostCommentViewModel"
                    },
                    "excludedFindingsIds": {
                        "type": "array",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    }
                }
            },
            "BL-Std-Helpers-TreeNode_Falconetix-Model-OrganizationalUnit-OrganizationalUnitEntityTreeItem_System-String_": {
                "type": "object",
                "properties": {
                    "item": {
                        "$ref": "#/components/schemas/Falconetix-Model-OrganizationalUnit-OrganizationalUnitEntityTreeItem"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BL-Std-Helpers-TreeNode_Falconetix-Model-OrganizationalUnit-OrganizationalUnitEntityTreeItem_System-String_"
                        }
                    }
                }
            },
            "Falconetix-Model-ProtectedAssetsReport-ProtectedAssetsReportViewModel_ProtectedAsset-SearchRequestViewModel_": {
                "type": "object",
                "properties": {
                    "searchRequest": {
                        "$ref": "#/components/schemas/ProtectedAsset-SearchRequestViewModel",
                        "description": "Search request for protected assets"
                    },
                    "recipients": {
                        "description": "Recipients for email",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ImageAssurancePolicyViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "targetType",
                    "targetType",
                    "targetPlatform",
                    "targetPlatform",
                    "targetId",
                    "targetId",
                    "rulesetId",
                    "rulesetId",
                    "notificationIds",
                    "notificationIds",
                    "errorMessage",
                    "errorMessage",
                    "admissionControllerAction",
                    "admissionControllerAction",
                    "admissionControlUnScannedAction",
                    "admissionControlUnScannedAction"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetType": {
                        "deprecated": true,
                        "x-deprecatedMessage": "use TargetPlatform instead",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ImageAssurancePolicyType"
                            }
                        ]
                    },
                    "targetPlatform": {
                        "$ref": "#/components/schemas/ImageAssurancePolicyPlatform"
                    },
                    "targetId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "notificationIds": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "errorMessage": {
                        "type": "string",
                        "nullable": true
                    },
                    "admissionControllerAction": {
                        "type": "string",
                        "description": "[Preview feature - Image Admission] Image Admission action to block non-compliant images according to the relevant ruleset.\nOptions: 'Prevention', 'Detection', or null.",
                        "nullable": true
                    },
                    "admissionControlUnScannedAction": {
                        "type": "string",
                        "description": "[Preview feature - Image Admission] Image Admission unScanned action of Detection or Prevention to alert on or block images that have not been scanned.\nOptions: 'Prevention', 'Detection', or null.",
                        "nullable": true
                    }
                }
            },
            "ImageAssurancePolicyType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Environment",
                    "OrganizationalUnit"
                ],
                "enum": [
                    "Environment",
                    "OrganizationalUnit"
                ]
            },
            "ImageAssurancePolicyPlatform": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Aws",
                    "Kubernetes",
                    "OrganizationalUnit",
                    "ShiftLeft",
                    "ContainerRegistry"
                ],
                "enum": [
                    "Aws",
                    "Kubernetes",
                    "OrganizationalUnit",
                    "ShiftLeft",
                    "ContainerRegistry"
                ]
            },
            "ImageAssurancePolicyRequestModelOld": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "targetId",
                    "notificationIds",
                    "rulesetId",
                    "id",
                    "id",
                    "targetId",
                    "targetType",
                    "targetType",
                    "targetPlatform",
                    "targetPlatform",
                    "notificationIds",
                    "rulesetId"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "targetType": {
                        "deprecated": true,
                        "x-deprecatedMessage": "use TargetPlatform instead",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ImageAssurancePolicyType"
                            }
                        ]
                    },
                    "targetPlatform": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ImageAssurancePolicyPlatform"
                            }
                        ]
                    },
                    "notificationIds": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "WorkloadAccountSettingModel": {
                "type": "object",
                "additionalProperties": false
            },
            "WorkloadExclusionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name",
                    "payloadsPatternType",
                    "payloadsPatternType",
                    "target",
                    "target",
                    "payloads",
                    "payloads",
                    "workloadExternalIds",
                    "workloadExternalIds",
                    "scope",
                    "scope"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "payloadsPatternType": {
                        "$ref": "#/components/schemas/WorkloadExclusionPayloadsPatternTypesModel"
                    },
                    "target": {
                        "$ref": "#/components/schemas/WorkloadExclusionTargetsModel"
                    },
                    "payloads": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkloadExclusionModelPayload"
                        }
                    },
                    "workloadExternalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scope": {
                        "$ref": "#/components/schemas/WorkloadScopeType"
                    }
                }
            },
            "WorkloadExclusionPayloadsPatternTypesModel": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "String",
                    "IoFingerprint",
                    "IoFeature",
                    "SignatureName",
                    "MalwareFilepath"
                ],
                "enum": [
                    "String",
                    "IoFingerprint",
                    "IoFeature",
                    "SignatureName",
                    "MalwareFilepath"
                ]
            },
            "WorkloadExclusionTargetsModel": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Host",
                    "Ip",
                    "File",
                    "Process",
                    "Api",
                    "Http",
                    "Io",
                    "Signature",
                    "Malware"
                ],
                "enum": [
                    "Host",
                    "Ip",
                    "File",
                    "Process",
                    "Api",
                    "Http",
                    "Io",
                    "Signature",
                    "Malware"
                ]
            },
            "WorkloadExclusionModelPayload": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "pattern",
                    "pattern",
                    "callStackInfo",
                    "callStackInfo"
                ],
                "properties": {
                    "pattern": {
                        "type": "string"
                    },
                    "callStackInfo": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "WorkloadScopeType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Account",
                    "Workload",
                    "WorkloadGroup",
                    "FunctionApp"
                ],
                "enum": [
                    "Account",
                    "Workload",
                    "WorkloadGroup",
                    "FunctionApp"
                ]
            },
            "WorkloadCloudProvider": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "aws",
                    "azure",
                    "kubernetes"
                ],
                "enum": [
                    "aws",
                    "azure",
                    "kubernetes"
                ]
            },
            "WorkloadExclusionModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name",
                    "payloadsPatternType",
                    "payloadsPatternType",
                    "target",
                    "target",
                    "payloads",
                    "payloads",
                    "workloadExternalIds",
                    "workloadExternalIds"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "payloadsPatternType": {
                        "$ref": "#/components/schemas/WorkloadExclusionPayloadsPatternTypesModel"
                    },
                    "target": {
                        "$ref": "#/components/schemas/WorkloadExclusionTargetsModel"
                    },
                    "payloads": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkloadExclusionModelPayload"
                        }
                    },
                    "workloadExternalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "WorkloadDeleteRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "WorkloadType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "KubernetesPodGroup",
                    "Lambda",
                    "AzureFunctionApp"
                ],
                "enum": [
                    "KubernetesPodGroup",
                    "Lambda",
                    "AzureFunctionApp"
                ]
            },
            "WorkloadRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name",
                    "payloadsPatternType",
                    "payloadsPatternType",
                    "target",
                    "target",
                    "payloads",
                    "payloads",
                    "workloadExternalIds",
                    "workloadExternalIds",
                    "scope",
                    "scope"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "payloadsPatternType": {
                        "$ref": "#/components/schemas/WorkloadRulePayloadsTypesModel"
                    },
                    "target": {
                        "$ref": "#/components/schemas/WorkloadRuleTargetsModel"
                    },
                    "payloads": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkloadRuleModelPayload"
                        }
                    },
                    "workloadExternalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scope": {
                        "$ref": "#/components/schemas/WorkloadScopeType"
                    }
                }
            },
            "WorkloadRulePayloadsTypesModel": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "String",
                    "SignatureName",
                    "MalwareFilepath"
                ],
                "enum": [
                    "String",
                    "SignatureName",
                    "MalwareFilepath"
                ]
            },
            "WorkloadRuleTargetsModel": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Host",
                    "Ip",
                    "File",
                    "Process",
                    "Api",
                    "Http",
                    "Io",
                    "Signature",
                    "Malware"
                ],
                "enum": [
                    "Host",
                    "Ip",
                    "File",
                    "Process",
                    "Api",
                    "Http",
                    "Io",
                    "Signature",
                    "Malware"
                ]
            },
            "WorkloadRuleModelPayload": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "pattern",
                    "pattern",
                    "callStackInfo",
                    "callStackInfo"
                ],
                "properties": {
                    "pattern": {
                        "type": "string"
                    },
                    "callStackInfo": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "WorkloadRuleModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name",
                    "payloadsPatternType",
                    "payloadsPatternType",
                    "target",
                    "target",
                    "payloads",
                    "payloads",
                    "workloadExternalIds",
                    "workloadExternalIds"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "payloadsPatternType": {
                        "$ref": "#/components/schemas/WorkloadRulePayloadsTypesModel"
                    },
                    "target": {
                        "$ref": "#/components/schemas/WorkloadRuleTargetsModel"
                    },
                    "payloads": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkloadRuleModelPayload"
                        }
                    },
                    "workloadExternalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "KubernetesPodGroupConfigViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "isProtectionEnabled",
                    "isProtectionEnabled",
                    "profilingStartTime",
                    "profilingStartTime",
                    "profilingEndTime",
                    "profilingEndTime",
                    "profilingPeriod",
                    "profilingPeriod",
                    "profilingProgressPercent",
                    "profilingProgressPercent"
                ],
                "properties": {
                    "isProtectionEnabled": {
                        "type": "boolean"
                    },
                    "profilingStartTime": {
                        "type": "string"
                    },
                    "profilingEndTime": {
                        "type": "string"
                    },
                    "profilingPeriod": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "profilingProgressPercent": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "KubernetesPodGroupConfigRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "isProtectionEnabled",
                    "isProtectionEnabled",
                    "profilingPeriod",
                    "profilingPeriod"
                ],
                "properties": {
                    "isProtectionEnabled": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "profilingPeriod": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                }
            },
            "KubernetesWhiteListViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "completed",
                    "completed",
                    "whiteListProgressPercent",
                    "whiteListProgressPercent",
                    "profilingState",
                    "profilingState",
                    "hosts",
                    "hosts",
                    "processes",
                    "processes",
                    "signatures",
                    "signatures"
                ],
                "properties": {
                    "completed": {
                        "type": "boolean"
                    },
                    "whiteListProgressPercent": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "profilingState": {
                        "type": "string"
                    },
                    "hosts": {
                        "$ref": "#/components/schemas/KubernetesWhiteListResourceTypeViewModel"
                    },
                    "processes": {
                        "$ref": "#/components/schemas/KubernetesWhiteListResourceTypeViewModel"
                    },
                    "signatures": {
                        "$ref": "#/components/schemas/KubernetesWhiteListResourceTypeViewModel"
                    }
                }
            },
            "KubernetesWhiteListResourceTypeViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status",
                    "status",
                    "items",
                    "items"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesWhiteListResourceViewModel"
                        }
                    }
                }
            },
            "KubernetesWhiteListResourceViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "action",
                    "action",
                    "source",
                    "source",
                    "callStackInfo",
                    "callStackInfo"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "source": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "callStackInfo": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "KubernetesAccountConfigViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "policiesAction",
                    "policiesAction"
                ],
                "properties": {
                    "policiesAction": {
                        "$ref": "#/components/schemas/KubernetesPoliciesActionViewModel"
                    }
                }
            },
            "KubernetesPoliciesActionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "signature",
                    "signature",
                    "malware",
                    "malware"
                ],
                "properties": {
                    "signature": {
                        "$ref": "#/components/schemas/KubernetesPolicyActionType"
                    },
                    "malware": {
                        "$ref": "#/components/schemas/KubernetesPolicyActionType"
                    }
                }
            },
            "KubernetesPolicyActionType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "alert",
                    "block"
                ],
                "enum": [
                    "alert",
                    "block"
                ]
            },
            "KubernetesAccountConfigRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "policiesAction",
                    "policiesAction"
                ],
                "properties": {
                    "policiesAction": {
                        "$ref": "#/components/schemas/KubernetesPoliciesActionRequestModel"
                    }
                }
            },
            "KubernetesPoliciesActionRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "signature",
                    "signature",
                    "malware",
                    "malware"
                ],
                "properties": {
                    "signature": {
                        "$ref": "#/components/schemas/KubernetesPolicyActionType"
                    },
                    "malware": {
                        "$ref": "#/components/schemas/KubernetesPolicyActionType"
                    }
                }
            },
            "KubernetesRuntimeAssuranceViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "targetType",
                    "targetType",
                    "targetId",
                    "targetId",
                    "accountExternalId",
                    "accountExternalId",
                    "rulesetId",
                    "rulesetId",
                    "action",
                    "action",
                    "notificationIds",
                    "notificationIds",
                    "errorMessage",
                    "errorMessage"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetType": {
                        "$ref": "#/components/schemas/ContinuousCompliancePolicyTargetType"
                    },
                    "targetId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "accountExternalId": {
                        "type": "string"
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "action": {
                        "$ref": "#/components/schemas/KubernetesRuntimeAssuranceAction"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                }
            },
            "ContinuousCompliancePolicyTargetType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Aws",
                    "Azure",
                    "Gcp",
                    "Kubernetes",
                    "OrganizationalUnit",
                    "Terraform",
                    "Generic",
                    "KubernetesRuntimeAssurance",
                    "ShiftLeft",
                    "Alibaba",
                    "Cft",
                    "ContainerRegistry",
                    "Ers",
                    "Vendor",
                    "Oci",
                    "CIEM"
                ],
                "enum": [
                    "Aws",
                    "Azure",
                    "Gcp",
                    "Kubernetes",
                    "OrganizationalUnit",
                    "Terraform",
                    "Generic",
                    "KubernetesRuntimeAssurance",
                    "ShiftLeft",
                    "Alibaba",
                    "Cft",
                    "ContainerRegistry",
                    "Ers",
                    "Vendor",
                    "Oci",
                    "CIEM"
                ]
            },
            "KubernetesRuntimeAssuranceAction": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Detection",
                    "Prevention"
                ],
                "enum": [
                    "Detection",
                    "Prevention"
                ]
            },
            "KubernetesRuntimeAssuranceRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "targetId",
                    "targetType",
                    "notificationIds",
                    "action",
                    "rulesetId",
                    "id",
                    "id",
                    "targetId",
                    "targetType",
                    "notificationIds",
                    "action",
                    "rulesetId",
                    "externalAccountId",
                    "externalAccountId"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "targetType": {
                        "default": 15,
                        "$ref": "#/components/schemas/ContinuousCompliancePolicyTargetType"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "action": {
                        "$ref": "#/components/schemas/KubernetesRuntimeAssuranceAction"
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "externalAccountId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "KubernetesServiceAccountViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/KubernetesBaseViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "automountServiceAccountToken",
                            "automountServiceAccountToken",
                            "imagePullSecrets",
                            "imagePullSecrets",
                            "secrets",
                            "secrets"
                        ],
                        "properties": {
                            "automountServiceAccountToken": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "imagePullSecrets": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/KubernetesLocalObjectReferenceViewModel"
                                }
                            },
                            "secrets": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/KubernetesObjectReferenceViewModel"
                                }
                            }
                        }
                    }
                ]
            },
            "KubernetesLocalObjectReferenceViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "KubernetesObjectReferenceViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "apiVersion",
                    "apiVersion",
                    "fieldPath",
                    "fieldPath",
                    "name",
                    "name",
                    "namespace",
                    "namespace",
                    "resourceVersion",
                    "resourceVersion",
                    "uid",
                    "uid"
                ],
                "properties": {
                    "apiVersion": {
                        "type": "string"
                    },
                    "fieldPath": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "resourceVersion": {
                        "type": "string"
                    },
                    "uid": {
                        "type": "string"
                    }
                }
            },
            "KubernetesBaseViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "tags",
                    "tags",
                    "id",
                    "id",
                    "kubernetesAccountId",
                    "kubernetesAccountId",
                    "name",
                    "name",
                    "namespace",
                    "namespace",
                    "annotations",
                    "annotations",
                    "ownerReferences",
                    "ownerReferences"
                ],
                "properties": {
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "kubernetesAccountId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ownerReferences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesOwnerReferencesViewModel"
                        }
                    }
                }
            },
            "KubernetesOwnerReferencesViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "kind",
                    "kind",
                    "uid",
                    "uid"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "uid": {
                        "type": "string"
                    }
                }
            },
            "KubernetesServiceViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/KubernetesBaseViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "spec",
                            "spec",
                            "status",
                            "status"
                        ],
                        "properties": {
                            "spec": {
                                "$ref": "#/components/schemas/KubernetesServiceSpecViewModel"
                            },
                            "status": {
                                "$ref": "#/components/schemas/KubernetesServiceStatusViewModel"
                            }
                        }
                    }
                ]
            },
            "KubernetesServiceSpecViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type",
                    "clusterIP",
                    "clusterIP",
                    "selector",
                    "selector",
                    "ports",
                    "ports"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "clusterIP": {
                        "type": "string"
                    },
                    "selector": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesServicePortsViewModel"
                        }
                    }
                }
            },
            "KubernetesServicePortsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "port",
                    "port",
                    "protocol",
                    "protocol",
                    "targetPort",
                    "targetPort",
                    "nodePort",
                    "nodePort"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "targetPort": {
                        "type": "string"
                    },
                    "nodePort": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                }
            },
            "KubernetesServiceStatusViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "loadBalancer",
                    "loadBalancer"
                ],
                "properties": {
                    "loadBalancer": {
                        "$ref": "#/components/schemas/KubernetesLoadBalancerStatusViewModel"
                    }
                }
            },
            "KubernetesLoadBalancerStatusViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ingress",
                    "ingress"
                ],
                "properties": {
                    "ingress": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesLoadBalancerIngressViewModel"
                        }
                    }
                }
            },
            "KubernetesLoadBalancerIngressViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "hostName",
                    "hostName",
                    "ip",
                    "ip"
                ],
                "properties": {
                    "hostName": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    }
                }
            },
            "KubernetesAdmissionControlPoliciesSummaryViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "admissionControlAgentPoliciesSummary",
                    "admissionControlAgentPoliciesSummary",
                    "admissionControlAgentOUPoliciesSummary",
                    "admissionControlAgentOUPoliciesSummary"
                ],
                "properties": {
                    "admissionControlAgentPoliciesSummary": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdmissionControlAgentPolicySummaryViewModel"
                        }
                    },
                    "admissionControlAgentOUPoliciesSummary": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdmissionControlAgentPolicySummaryViewModel"
                        }
                    }
                }
            },
            "AdmissionControlAgentPolicySummaryViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "action",
                    "action",
                    "rules",
                    "rules",
                    "notifications",
                    "notifications",
                    "exclusions",
                    "exclusions",
                    "policyId",
                    "policyId",
                    "bundleName",
                    "bundleName"
                ],
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuleObject"
                        }
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotificationObject"
                        }
                    },
                    "exclusions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssessmentExclusionEntity"
                        }
                    },
                    "policyId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "bundleName": {
                        "type": "string"
                    }
                }
            },
            "RuleObject": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "severity",
                    "severity",
                    "logic",
                    "logic",
                    "logicHash",
                    "logicHash",
                    "description",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "severity": {
                        "$ref": "#/components/schemas/RuleSeverity"
                    },
                    "logic": {
                        "type": "string",
                        "nullable": true
                    },
                    "logicHash": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "RuleSeverity": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Informational",
                    "Low",
                    "Medium",
                    "High",
                    "Critical"
                ],
                "enum": [
                    "Informational",
                    "Low",
                    "Medium",
                    "High",
                    "Critical"
                ]
            },
            "NotificationObject": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "AssessmentExclusionEntity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RootEntityBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "id",
                            "exclusion",
                            "exclusion"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "guid"
                            },
                            "exclusion": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/AssessmentExclusion"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "AssessmentExclusion": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rlmIds",
                    "rlmIds",
                    "ruleLogicHashes",
                    "ruleLogicHashes",
                    "logicExpressions",
                    "logicExpressions",
                    "severities",
                    "severities",
                    "bundleId",
                    "bundleId",
                    "cloudAccountIds",
                    "cloudAccountIds",
                    "organizationalUnitIds",
                    "organizationalUnitIds",
                    "regions",
                    "regions",
                    "comment",
                    "comment",
                    "cloudAccountType",
                    "cloudAccountType",
                    "dateTimeRange",
                    "dateTimeRange",
                    "createdBy",
                    "createdBy",
                    "platform",
                    "platform"
                ],
                "properties": {
                    "rlmIds": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "ruleLogicHashes": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "logicExpressions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "severities": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RuleSeverity"
                        }
                    },
                    "bundleId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cloudAccountIds": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "organizationalUnitIds": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "regions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "cloudAccountType": {
                        "$ref": "#/components/schemas/AssessmentCloudAccountType"
                    },
                    "dateTimeRange": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeRange"
                            }
                        ]
                    },
                    "createdBy": {
                        "type": "string",
                        "nullable": true
                    },
                    "platform": {
                        "$ref": "#/components/schemas/AssessmentCloudAccountType"
                    }
                }
            },
            "AssessmentCloudAccountType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Aws",
                    "Azure",
                    "Google",
                    "Kubernetes",
                    "Terraform",
                    "Generic",
                    "KubernetesRuntimeAssurance",
                    "ShiftLeft",
                    "SourceCodeAssurance",
                    "ImageAssurance",
                    "Alibaba",
                    "Cft",
                    "ContainerRegistry",
                    "Ers",
                    "Oci",
                    "CIEM"
                ],
                "enum": [
                    "Aws",
                    "Azure",
                    "Google",
                    "Kubernetes",
                    "Terraform",
                    "Generic",
                    "KubernetesRuntimeAssurance",
                    "ShiftLeft",
                    "SourceCodeAssurance",
                    "ImageAssurance",
                    "Alibaba",
                    "Cft",
                    "ContainerRegistry",
                    "Ers",
                    "Oci",
                    "CIEM"
                ]
            },
            "DateTimeRange": {
                "type": "object",
                "deprecated": true,
                "x-deprecatedMessage": "This class was duplicated to new Domain (as part of DDD refactoring effort), please refer to the new Project: CGN.RuleEngine.Common.Infra.DateTimeRange",
                "additionalProperties": false,
                "required": [
                    "from",
                    "from",
                    "to",
                    "to"
                ],
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "From date time",
                        "format": "date-time",
                        "nullable": true
                    },
                    "to": {
                        "type": "string",
                        "description": "To date time",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "RootEntityBase": {
                "type": "object",
                "x-abstract": true,
                "additionalProperties": false,
                "required": [
                    "accountId",
                    "accountId",
                    "_created",
                    "_created",
                    "_updated",
                    "_updated"
                ],
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "_created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "_updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "KubernetesRoleViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/KubernetesBaseViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "rules",
                            "rules",
                            "roleBindings",
                            "roleBindings"
                        ],
                        "properties": {
                            "rules": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/KubernetesPolicyRuleViewModel"
                                }
                            },
                            "roleBindings": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/KubernetesRoleBindingViewModel"
                                }
                            }
                        }
                    }
                ]
            },
            "KubernetesPolicyRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "apiGroups",
                    "apiGroups",
                    "nonResourceURLs",
                    "nonResourceURLs",
                    "resourceNames",
                    "resourceNames",
                    "resources",
                    "resources",
                    "verbs",
                    "verbs"
                ],
                "properties": {
                    "apiGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nonResourceURLs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "resourceNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "verbs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "KubernetesRoleBindingViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "subjects",
                    "subjects"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "subjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesSubjectViewModel"
                        }
                    }
                }
            },
            "KubernetesSubjectViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "apiGroup",
                    "apiGroup",
                    "kind",
                    "kind",
                    "name",
                    "name",
                    "namespace",
                    "namespace"
                ],
                "properties": {
                    "apiGroup": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodSecurityPolicyViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/KubernetesBaseViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "spec",
                            "spec",
                            "status",
                            "status"
                        ],
                        "properties": {
                            "spec": {
                                "$ref": "#/components/schemas/KubernetesPodSecurityPolicySpecViewModel"
                            },
                            "status": {
                                "$ref": "#/components/schemas/KubernetesPodSecurityPolicyStatusViewModel"
                            }
                        }
                    }
                ]
            },
            "KubernetesPodSecurityPolicySpecViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "allowPrivilegeEscalation",
                    "allowPrivilegeEscalation",
                    "allowedCSIDrivers",
                    "allowedCSIDrivers",
                    "allowedCapabilities",
                    "allowedCapabilities",
                    "allowedFlexVolumes",
                    "allowedFlexVolumes",
                    "allowedHostPaths",
                    "allowedHostPaths",
                    "allowedProcMountTypes",
                    "allowedProcMountTypes",
                    "allowedUnsafeSysctls",
                    "allowedUnsafeSysctls",
                    "defaultAddCapabilities",
                    "defaultAddCapabilities",
                    "defaultAllowPrivilegeEscalation",
                    "defaultAllowPrivilegeEscalation",
                    "forbiddenSysctls",
                    "forbiddenSysctls",
                    "fsGroup",
                    "fsGroup",
                    "hostIPC",
                    "hostIPC",
                    "hostNetwork",
                    "hostNetwork",
                    "hostPID",
                    "hostPID",
                    "hostPorts",
                    "hostPorts",
                    "privileged",
                    "privileged",
                    "readOnlyRootFilesystem",
                    "readOnlyRootFilesystem",
                    "requiredDropCapabilities",
                    "requiredDropCapabilities",
                    "runAsGroup",
                    "runAsGroup",
                    "runAsUser",
                    "runAsUser",
                    "runtimeClass",
                    "runtimeClass",
                    "seLinux",
                    "seLinux",
                    "supplementalGroups",
                    "supplementalGroups",
                    "volumes",
                    "volumes"
                ],
                "properties": {
                    "allowPrivilegeEscalation": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "allowedCSIDrivers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodSecurityPolicyAllowedCSIDriverViewModel"
                        }
                    },
                    "allowedCapabilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowedFlexVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodSecurityPolicyAllowedFlexVolumeViewModel"
                        }
                    },
                    "allowedHostPaths": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodSecurityPolicyAllowedHostPathViewModel"
                        }
                    },
                    "allowedProcMountTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowedUnsafeSysctls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultAddCapabilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultAllowPrivilegeEscalation": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "forbiddenSysctls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "fsGroup": {
                        "$ref": "#/components/schemas/KubernetesPodSecurityPolicyFSGroupStrategyOptionsViewModel"
                    },
                    "hostIPC": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "hostNetwork": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "hostPID": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "hostPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodSecurityPolicyHostPortRangeViewModel"
                        }
                    },
                    "privileged": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "readOnlyRootFilesystem": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "requiredDropCapabilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "runAsGroup": {
                        "$ref": "#/components/schemas/KubernetesPodSecurityPolicyRunAsGroupStrategyOptionsViewModel"
                    },
                    "runAsUser": {
                        "$ref": "#/components/schemas/KubernetesPodSecurityPolicyRunAsUserStrategyOptionsViewModel"
                    },
                    "runtimeClass": {
                        "$ref": "#/components/schemas/KubernetesPodSecurityPolicyRuntimeClassStrategyOptionsViewModel"
                    },
                    "seLinux": {
                        "$ref": "#/components/schemas/KubernetesPodSecurityPolicySELinuxStrategyOptionsViewModel"
                    },
                    "supplementalGroups": {
                        "$ref": "#/components/schemas/KubernetesPodSecurityPolicySupplementalGroupsStrategyOptionsViewModel"
                    },
                    "volumes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "KubernetesPodSecurityPolicyAllowedCSIDriverViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodSecurityPolicyAllowedFlexVolumeViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "driver",
                    "driver"
                ],
                "properties": {
                    "driver": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodSecurityPolicyAllowedHostPathViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "pathPrefix",
                    "pathPrefix",
                    "readOnly",
                    "readOnly"
                ],
                "properties": {
                    "pathPrefix": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "KubernetesPodSecurityPolicyFSGroupStrategyOptionsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ranges",
                    "ranges",
                    "rule",
                    "rule"
                ],
                "properties": {
                    "ranges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodSecurityPolicyIDRangeViewModel"
                        }
                    },
                    "rule": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodSecurityPolicyIDRangeViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "max",
                    "max",
                    "min",
                    "min"
                ],
                "properties": {
                    "max": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "min": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                }
            },
            "KubernetesPodSecurityPolicyHostPortRangeViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "max",
                    "max",
                    "min",
                    "min"
                ],
                "properties": {
                    "max": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "min": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                }
            },
            "KubernetesPodSecurityPolicyRunAsGroupStrategyOptionsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ranges",
                    "ranges",
                    "rule",
                    "rule"
                ],
                "properties": {
                    "ranges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodSecurityPolicyIDRangeViewModel"
                        }
                    },
                    "rule": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodSecurityPolicyRunAsUserStrategyOptionsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ranges",
                    "ranges",
                    "rule",
                    "rule"
                ],
                "properties": {
                    "ranges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodSecurityPolicyIDRangeViewModel"
                        }
                    },
                    "rule": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodSecurityPolicyRuntimeClassStrategyOptionsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "allowedRuntimeClassNames",
                    "allowedRuntimeClassNames",
                    "defaultRuntimeClassName",
                    "defaultRuntimeClassName"
                ],
                "properties": {
                    "allowedRuntimeClassNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultRuntimeClassName": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodSecurityPolicySELinuxStrategyOptionsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rule",
                    "rule",
                    "seLinuxOptions",
                    "seLinuxOptions"
                ],
                "properties": {
                    "rule": {
                        "type": "string"
                    },
                    "seLinuxOptions": {
                        "$ref": "#/components/schemas/KubernetesPodSELinuxOptionsViewModel"
                    }
                }
            },
            "KubernetesPodSELinuxOptionsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "level",
                    "level",
                    "role",
                    "role",
                    "type",
                    "type",
                    "user",
                    "user"
                ],
                "properties": {
                    "level": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodSecurityPolicySupplementalGroupsStrategyOptionsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ranges",
                    "ranges",
                    "rule",
                    "rule"
                ],
                "properties": {
                    "ranges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodSecurityPolicyIDRangeViewModel"
                        }
                    },
                    "rule": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodSecurityPolicyStatusViewModel": {
                "type": "object",
                "additionalProperties": false
            },
            "KubernetesPodGroupOwnerViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "kind",
                    "kind",
                    "uid",
                    "uid"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "uid": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodGroupGeneralViewModel": {
                "type": "object",
                "x-abstract": true,
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "clusterAccountId",
                    "clusterAccountId",
                    "externalId",
                    "externalId",
                    "pods",
                    "pods",
                    "images",
                    "images",
                    "creationTime",
                    "creationTime",
                    "serviceAccount",
                    "serviceAccount",
                    "labels",
                    "labels",
                    "annotations",
                    "annotations",
                    "namespace",
                    "namespace",
                    "name",
                    "name",
                    "workloads",
                    "workloads",
                    "riskScore",
                    "riskScore",
                    "imagesTotals",
                    "imagesTotals"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "clusterAccountId": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "pods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodGroupPodViewModel"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodGroupImageViewModel"
                        }
                    },
                    "creationTime": {
                        "type": "string"
                    },
                    "serviceAccount": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workloads": {
                        "type": "string"
                    },
                    "riskScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "imagesTotals": {
                        "$ref": "#/components/schemas/KubernetesImageScanTotalsViewModel"
                    }
                }
            },
            "KubernetesPodGroupPodViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodGroupImageViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "riskScore",
                    "riskScore",
                    "scanStatus",
                    "scanStatus",
                    "scanStatusDetails",
                    "scanStatusDetails",
                    "name",
                    "name",
                    "totals",
                    "totals"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "riskScore": {
                        "type": "string"
                    },
                    "scanStatus": {
                        "type": "string"
                    },
                    "scanStatusDetails": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "totals": {
                        "$ref": "#/components/schemas/KubernetesImageScanTotalsViewModel"
                    }
                }
            },
            "KubernetesImageScanTotalsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "critical",
                    "critical",
                    "high",
                    "high",
                    "medium",
                    "medium",
                    "low",
                    "low",
                    "unknown",
                    "unknown",
                    "maliciousFile",
                    "maliciousFile",
                    "sensitiveContent",
                    "sensitiveContent",
                    "maliciousUrl",
                    "maliciousUrl",
                    "maliciousIp",
                    "maliciousIp",
                    "cve",
                    "cve"
                ],
                "properties": {
                    "critical": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "high": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "medium": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "low": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unknown": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maliciousFile": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sensitiveContent": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maliciousUrl": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maliciousIp": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cve": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "KubernetesPodViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/KubernetesBaseViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "spec",
                            "spec",
                            "status",
                            "status"
                        ],
                        "properties": {
                            "spec": {
                                "$ref": "#/components/schemas/KubernetesPodSpecViewModel"
                            },
                            "status": {
                                "$ref": "#/components/schemas/KubernetesPodStatusViewModel"
                            }
                        }
                    }
                ]
            },
            "KubernetesPodSpecViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "dnsConfig",
                    "dnsConfig",
                    "volumes",
                    "volumes",
                    "containers",
                    "containers",
                    "nodeName",
                    "nodeName",
                    "priority",
                    "priority",
                    "priorityClassName",
                    "priorityClassName",
                    "tolerations",
                    "tolerations",
                    "securityContext",
                    "securityContext"
                ],
                "properties": {
                    "dnsConfig": {
                        "$ref": "#/components/schemas/KubernetesPodDNSConfigViewModel"
                    },
                    "volumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodVolumeViewModel"
                        }
                    },
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodContainersViewModel"
                        }
                    },
                    "nodeName": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "priorityClassName": {
                        "type": "string"
                    },
                    "tolerations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodTolerationsViewModel"
                        }
                    },
                    "securityContext": {
                        "$ref": "#/components/schemas/KubernetesPodPodSecurityContextViewModel"
                    }
                }
            },
            "KubernetesPodDNSConfigViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "nameservers",
                    "nameservers",
                    "options",
                    "options",
                    "searches",
                    "searches"
                ],
                "properties": {
                    "nameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodDNSConfigOptionViewModel"
                        }
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "KubernetesPodDNSConfigOptionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "value",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodVolumeViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "hostPath",
                    "hostPath",
                    "persistentVolumeClaim",
                    "persistentVolumeClaim"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "hostPath": {
                        "$ref": "#/components/schemas/KubernetesVoulmeHostPathViewModel"
                    },
                    "persistentVolumeClaim": {
                        "$ref": "#/components/schemas/KubernetesPersistentVolumeClaimVolumeSourceViewModel"
                    }
                }
            },
            "KubernetesVoulmeHostPathViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "path",
                    "path",
                    "type",
                    "type"
                ],
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPersistentVolumeClaimVolumeSourceViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "claimName",
                    "claimName",
                    "readOnly",
                    "readOnly"
                ],
                "properties": {
                    "claimName": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "KubernetesPodContainersViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "image",
                    "image",
                    "resources",
                    "resources",
                    "securityContext",
                    "securityContext",
                    "args",
                    "args",
                    "command",
                    "command"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "resources": {
                        "$ref": "#/components/schemas/KubernetesResourceRequirementsViewModel"
                    },
                    "securityContext": {
                        "$ref": "#/components/schemas/KubernetesPodSecurityContextViewModel"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "command": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "KubernetesResourceRequirementsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "limits",
                    "limits",
                    "requests",
                    "requests"
                ],
                "properties": {
                    "limits": {
                        "$ref": "#/components/schemas/KubernetesPodResourceObjectViewModel"
                    },
                    "requests": {
                        "$ref": "#/components/schemas/KubernetesPodResourceObjectViewModel"
                    }
                }
            },
            "KubernetesPodResourceObjectViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "memory",
                    "memory",
                    "cpu",
                    "cpu"
                ],
                "properties": {
                    "memory": {
                        "type": "string"
                    },
                    "cpu": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodSecurityContextViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "allowPrivilegeEscalation",
                    "allowPrivilegeEscalation",
                    "capabilities",
                    "capabilities",
                    "privileged",
                    "privileged",
                    "procMount",
                    "procMount",
                    "readOnlyRootFilesystem",
                    "readOnlyRootFilesystem",
                    "runAsGroup",
                    "runAsGroup",
                    "runAsNonRoot",
                    "runAsNonRoot",
                    "runAsUser",
                    "runAsUser",
                    "seLinuxOptions",
                    "seLinuxOptions",
                    "windowsOptions",
                    "windowsOptions"
                ],
                "properties": {
                    "allowPrivilegeEscalation": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "capabilities": {
                        "$ref": "#/components/schemas/KubernetesPodCapabilitiesViewModel"
                    },
                    "privileged": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "procMount": {
                        "type": "string"
                    },
                    "readOnlyRootFilesystem": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "runAsGroup": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "runAsNonRoot": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "runAsUser": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "seLinuxOptions": {
                        "$ref": "#/components/schemas/KubernetesPodSELinuxOptionsViewModel"
                    },
                    "windowsOptions": {
                        "$ref": "#/components/schemas/KubernetesPodWindowsSecurityContextOptionsViewModel"
                    }
                }
            },
            "KubernetesPodCapabilitiesViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "add",
                    "add",
                    "drop",
                    "drop"
                ],
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "drop": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "KubernetesPodWindowsSecurityContextOptionsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "gmsaCredentialSpec",
                    "gmsaCredentialSpec",
                    "gmsaCredentialSpecName",
                    "gmsaCredentialSpecName"
                ],
                "properties": {
                    "gmsaCredentialSpec": {
                        "type": "string"
                    },
                    "gmsaCredentialSpecName": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodTolerationsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "operator",
                    "operator",
                    "effect",
                    "effect"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "effect": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodPodSecurityContextViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "fsGroup",
                    "fsGroup",
                    "runAsGroup",
                    "runAsGroup",
                    "runAsNonRoot",
                    "runAsNonRoot",
                    "runAsUser",
                    "runAsUser",
                    "seLinuxOptions",
                    "seLinuxOptions",
                    "supplementalGroups",
                    "supplementalGroups",
                    "sysctls",
                    "sysctls",
                    "windowsOptions",
                    "windowsOptions"
                ],
                "properties": {
                    "fsGroup": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "runAsGroup": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "runAsNonRoot": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "runAsUser": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "seLinuxOptions": {
                        "$ref": "#/components/schemas/KubernetesPodSELinuxOptionsViewModel"
                    },
                    "supplementalGroups": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "sysctls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesPodSysctlViewModel"
                        }
                    },
                    "windowsOptions": {
                        "$ref": "#/components/schemas/KubernetesPodWindowsSecurityContextOptionsViewModel"
                    }
                }
            },
            "KubernetesPodSysctlViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "value",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "KubernetesPodStatusViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "phase",
                    "phase",
                    "podIP",
                    "podIP"
                ],
                "properties": {
                    "phase": {
                        "type": "string"
                    },
                    "podIP": {
                        "type": "string"
                    }
                }
            },
            "KubernetesNodeViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/KubernetesBaseViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "spec",
                            "spec",
                            "status",
                            "status",
                            "kubeletData",
                            "kubeletData"
                        ],
                        "properties": {
                            "spec": {
                                "$ref": "#/components/schemas/KubernetesNodeSpecViewModel"
                            },
                            "status": {
                                "$ref": "#/components/schemas/KubernetesNodeStatusViewModel"
                            },
                            "kubeletData": {}
                        }
                    }
                ]
            },
            "KubernetesNodeSpecViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "taints",
                    "taints"
                ],
                "properties": {
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesNodeTaintViewModel"
                        }
                    }
                }
            },
            "KubernetesNodeTaintViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "value",
                    "value",
                    "effect",
                    "effect"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "effect": {
                        "type": "string"
                    }
                }
            },
            "KubernetesNodeStatusViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "addresses",
                    "addresses",
                    "conditions",
                    "conditions",
                    "nodeInfo",
                    "nodeInfo",
                    "daemonEndpoints",
                    "daemonEndpoints",
                    "images",
                    "images"
                ],
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesNodeAddressesViewModel"
                        }
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KuberbetesNodeConditionViewModel"
                        }
                    },
                    "nodeInfo": {
                        "$ref": "#/components/schemas/KubernetesNodeInfoViewModel"
                    },
                    "daemonEndpoints": {
                        "$ref": "#/components/schemas/KuberbetesNodeDaemonEndpointsViewModel"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesNodeContainerImageViewModel"
                        }
                    }
                }
            },
            "KubernetesNodeAddressesViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type",
                    "address",
                    "address"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    }
                }
            },
            "KuberbetesNodeConditionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "message",
                    "message",
                    "reason",
                    "reason",
                    "status",
                    "status",
                    "type",
                    "type"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "KubernetesNodeInfoViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kernelVersion",
                    "kernelVersion",
                    "osImage",
                    "osImage",
                    "containerRuntimeVersion",
                    "containerRuntimeVersion",
                    "kubeletVersion",
                    "kubeletVersion",
                    "kubeProxyVersion",
                    "kubeProxyVersion",
                    "operatingSystem",
                    "operatingSystem",
                    "architecture",
                    "architecture"
                ],
                "properties": {
                    "kernelVersion": {
                        "type": "string"
                    },
                    "osImage": {
                        "type": "string"
                    },
                    "containerRuntimeVersion": {
                        "type": "string"
                    },
                    "kubeletVersion": {
                        "type": "string"
                    },
                    "kubeProxyVersion": {
                        "type": "string"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "architecture": {
                        "type": "string"
                    }
                }
            },
            "KuberbetesNodeDaemonEndpointsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kubeletEndpoint",
                    "kubeletEndpoint"
                ],
                "properties": {
                    "kubeletEndpoint": {
                        "$ref": "#/components/schemas/KuberbetesNodeDaemonEndpointViewModel"
                    }
                }
            },
            "KuberbetesNodeDaemonEndpointViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "port",
                    "port"
                ],
                "properties": {
                    "port": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                }
            },
            "KubernetesNodeContainerImageViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "names",
                    "names",
                    "sizeBytes",
                    "sizeBytes"
                ],
                "properties": {
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sizeBytes": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    }
                }
            },
            "KubernetesNetworkPolicyViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/KubernetesBaseViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "spec",
                            "spec",
                            "status",
                            "status"
                        ],
                        "properties": {
                            "spec": {
                                "$ref": "#/components/schemas/KubernetesNetworkPolicySpecViewModel"
                            },
                            "status": {
                                "$ref": "#/components/schemas/KubernetesNetworkPolicyStatusViewModel"
                            }
                        }
                    }
                ]
            },
            "KubernetesNetworkPolicySpecViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "policyTypes",
                    "policyTypes",
                    "podSelector",
                    "podSelector",
                    "ingress",
                    "ingress",
                    "egress",
                    "egress"
                ],
                "properties": {
                    "policyTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "podSelector": {
                        "$ref": "#/components/schemas/KubernetesLabelSelectorViewModel"
                    },
                    "ingress": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesNetworkPolicyIngressRuleViewModel"
                        }
                    },
                    "egress": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesNetworkPolicyEgressRuleViewModel"
                        }
                    }
                }
            },
            "KubernetesLabelSelectorViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "matchLabels",
                    "matchLabels",
                    "matchExpressions",
                    "matchExpressions"
                ],
                "properties": {
                    "matchLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "matchExpressions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesLabelSelectorRequirementViewModel"
                        }
                    }
                }
            },
            "KubernetesLabelSelectorRequirementViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "operator",
                    "operator",
                    "values",
                    "values"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "KubernetesNetworkPolicyIngressRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ports",
                    "ports",
                    "from",
                    "from"
                ],
                "properties": {
                    "ports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesNetworkPolicyPortViewModel"
                        }
                    },
                    "from": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesNetworkPolicyPeerViewModel"
                        }
                    }
                }
            },
            "KubernetesNetworkPolicyPortViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "port",
                    "port",
                    "protocol",
                    "protocol"
                ],
                "properties": {
                    "port": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    }
                }
            },
            "KubernetesNetworkPolicyPeerViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ipBlock",
                    "ipBlock",
                    "namespaceSelector",
                    "namespaceSelector",
                    "podSelector",
                    "podSelector"
                ],
                "properties": {
                    "ipBlock": {
                        "$ref": "#/components/schemas/KubernetesNetworkPolicyIPBlockViewModel"
                    },
                    "namespaceSelector": {
                        "$ref": "#/components/schemas/KubernetesLabelSelectorViewModel"
                    },
                    "podSelector": {
                        "$ref": "#/components/schemas/KubernetesLabelSelectorViewModel"
                    }
                }
            },
            "KubernetesNetworkPolicyIPBlockViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "cidr",
                    "cidr",
                    "except",
                    "except"
                ],
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "except": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "KubernetesNetworkPolicyEgressRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ports",
                    "ports",
                    "to",
                    "to"
                ],
                "properties": {
                    "ports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesNetworkPolicyPortViewModel"
                        }
                    },
                    "to": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesNetworkPolicyPeerViewModel"
                        }
                    }
                }
            },
            "KubernetesNetworkPolicyStatusViewModel": {
                "type": "object",
                "additionalProperties": false
            },
            "KubernetesImageViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "labels",
                    "labels",
                    "name",
                    "name",
                    "id",
                    "id",
                    "size",
                    "size",
                    "registry",
                    "registry",
                    "repository",
                    "repository",
                    "tag",
                    "tag",
                    "scanDetails",
                    "scanDetails",
                    "lastRunningDate",
                    "lastRunningDate",
                    "isRunning",
                    "isRunning",
                    "ecsClusterName",
                    "ecsClusterName",
                    "isScannable",
                    "isScannable"
                ],
                "properties": {
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "registry": {
                        "type": "string"
                    },
                    "repository": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "scanDetails": {
                        "$ref": "#/components/schemas/KubernetesImageScanDetailsViewModel"
                    },
                    "lastRunningDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isRunning": {
                        "type": "boolean"
                    },
                    "ecsClusterName": {
                        "type": "string"
                    },
                    "isScannable": {
                        "type": "boolean"
                    }
                }
            },
            "KubernetesImageScanDetailsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "riskScore",
                    "riskScore",
                    "scanStatus",
                    "scanStatus",
                    "scanStatusDetails",
                    "scanStatusDetails",
                    "scanEngineVersion",
                    "scanEngineVersion",
                    "totals",
                    "totals"
                ],
                "properties": {
                    "riskScore": {
                        "type": "string"
                    },
                    "scanStatus": {
                        "type": "string"
                    },
                    "scanStatusDetails": {
                        "type": "string"
                    },
                    "scanEngineVersion": {
                        "type": "string"
                    },
                    "totals": {
                        "$ref": "#/components/schemas/KubernetesImageScanTotalsViewModel"
                    }
                }
            },
            "KubernetesImageScanVulnerabilitiesViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "vulnerabilities",
                    "vulnerabilities"
                ],
                "properties": {
                    "vulnerabilities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesImageScanVulnerabilityViewModel"
                        }
                    }
                }
            },
            "KubernetesImageScanVulnerabilityViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type",
                    "sourceGuardAction",
                    "sourceGuardAction",
                    "remediation",
                    "remediation",
                    "severity",
                    "severity",
                    "description",
                    "description",
                    "source",
                    "source",
                    "lines",
                    "lines",
                    "cveList",
                    "cveList",
                    "payload",
                    "payload"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "sourceGuardAction": {
                        "type": "string"
                    },
                    "remediation": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "cveList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CveFindingOnPackage"
                        }
                    },
                    "payload": {
                        "type": "string"
                    }
                }
            },
            "CveFindingOnPackage": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "severity",
                    "severity",
                    "description",
                    "description",
                    "lastModified",
                    "lastModified",
                    "cvssInfo",
                    "cvssInfo"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "cvssInfo": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CvssData"
                            }
                        ]
                    }
                }
            },
            "CvssData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "version",
                    "version",
                    "metrics",
                    "metrics",
                    "source",
                    "source"
                ],
                "properties": {
                    "base-score": {
                        "type": "number",
                        "format": "float"
                    },
                    "impact-score": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "exploitability-score": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "vector-string": {
                        "type": "string",
                        "nullable": true
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "metrics": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CvssMetrics"
                            }
                        ]
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "CvssMetrics": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scope",
                    "scope"
                ],
                "properties": {
                    "attack-vector": {
                        "type": "string",
                        "nullable": true
                    },
                    "attack-complexity": {
                        "type": "string",
                        "nullable": true
                    },
                    "privileges-required": {
                        "type": "string",
                        "nullable": true
                    },
                    "user-interaction": {
                        "type": "string",
                        "nullable": true
                    },
                    "scope": {
                        "type": "string",
                        "nullable": true
                    },
                    "confidentiality-impact": {
                        "type": "string",
                        "nullable": true
                    },
                    "integrity-impact": {
                        "type": "string",
                        "nullable": true
                    },
                    "availability-impact": {
                        "type": "string",
                        "nullable": true
                    },
                    "exploit-code_maturity": {
                        "type": "string",
                        "nullable": true
                    },
                    "remediation-level": {
                        "type": "string",
                        "nullable": true
                    },
                    "report-confidence": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "KubernetesImagePodGroupsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type",
                    "podGroups",
                    "podGroups"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "podGroups": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/KubernetesImagePodGroupDetailsViewModel"
                        }
                    }
                }
            },
            "KubernetesImagePodGroupDetailsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "externalId",
                    "externalId",
                    "name",
                    "name",
                    "namespace",
                    "namespace",
                    "labels",
                    "labels",
                    "annotations",
                    "annotations",
                    "desiredPodsNumber",
                    "desiredPodsNumber",
                    "readyPodsNumber",
                    "readyPodsNumber",
                    "environmentId",
                    "environmentId"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "desiredPodsNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "readyPodsNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            },
            "KubernetesImageGeneralViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "cloudAccountId",
                    "cloudAccountId",
                    "externalId",
                    "externalId",
                    "image",
                    "image",
                    "podGroups",
                    "podGroups"
                ],
                "properties": {
                    "cloudAccountId": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "image": {
                        "$ref": "#/components/schemas/KubernetesImageViewModel"
                    },
                    "podGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesImagePodGroupsViewModel"
                        }
                    }
                }
            },
            "ImageAssurancePolicyRequestModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ImageAssurancePolicyRequestModelOld"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "admissionControllerAction",
                            "admissionControllerAction",
                            "admissionControlUnScannedAction",
                            "admissionControlUnScannedAction"
                        ],
                        "properties": {
                            "admissionControllerAction": {
                                "type": "string",
                                "description": "[Preview feature - Image Admission] Image Admission action to block non-compliant images according to the relevant ruleset.\nOptions: 'Prevention', 'Detection', or null.",
                                "nullable": true
                            },
                            "admissionControlUnScannedAction": {
                                "type": "string",
                                "description": "[Preview feature - Image Admission] Image Admission unScanned action of Detection or Prevention to alert on or block images that have not been scanned.\nOptions: 'Prevention', 'Detection', or null.",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "KubernetesImageViewModel2": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "kubernetesAccountId",
                    "kubernetesAccountId",
                    "name",
                    "name",
                    "imageSha",
                    "imageSha"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "kubernetesAccountId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "imageSha": {
                        "type": "string"
                    }
                }
            },
            "KubernetesImageWorkloadsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type",
                    "workloads",
                    "workloads"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "workloads": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/KubernetesImageWorkloadDetailsViewModel"
                        }
                    }
                }
            },
            "KubernetesImageWorkloadDetailsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name",
                    "namespace",
                    "namespace",
                    "labels",
                    "labels",
                    "createdAt",
                    "createdAt",
                    "desiredPodsNumber",
                    "desiredPodsNumber",
                    "readyPodsNumber",
                    "readyPodsNumber"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "desiredPodsNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "readyPodsNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "KubernetesIngressViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/KubernetesBaseViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "spec",
                            "spec",
                            "status",
                            "status"
                        ],
                        "properties": {
                            "spec": {
                                "$ref": "#/components/schemas/KubernetesIngressSpecViewModel"
                            },
                            "status": {
                                "$ref": "#/components/schemas/KubernetesIngressStatusViewModel"
                            }
                        }
                    }
                ]
            },
            "KubernetesIngressSpecViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "backend",
                    "backend",
                    "rules",
                    "rules",
                    "tls",
                    "tls"
                ],
                "properties": {
                    "backend": {
                        "$ref": "#/components/schemas/KubernetesIngressBackendViewModel"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesIngressRuleViewModel"
                        }
                    },
                    "tls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesIngressTLSViewModel"
                        }
                    }
                }
            },
            "KubernetesIngressBackendViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "serviceName",
                    "serviceName",
                    "servicePort",
                    "servicePort"
                ],
                "properties": {
                    "serviceName": {
                        "type": "string"
                    },
                    "servicePort": {
                        "type": "string"
                    }
                }
            },
            "KubernetesIngressRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "host",
                    "host",
                    "http",
                    "http"
                ],
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "http": {
                        "$ref": "#/components/schemas/KubernetesHTTPIngressRuleValueViewModel"
                    }
                }
            },
            "KubernetesHTTPIngressRuleValueViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "paths",
                    "paths"
                ],
                "properties": {
                    "paths": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesHTTPIngressPathViewModel"
                        }
                    }
                }
            },
            "KubernetesHTTPIngressPathViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "backend",
                    "backend",
                    "path",
                    "path"
                ],
                "properties": {
                    "backend": {
                        "$ref": "#/components/schemas/KubernetesIngressBackendViewModel"
                    },
                    "path": {
                        "type": "string"
                    }
                }
            },
            "KubernetesIngressTLSViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "hosts",
                    "hosts",
                    "secretName",
                    "secretName"
                ],
                "properties": {
                    "hosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "secretName": {
                        "type": "string"
                    }
                }
            },
            "KubernetesIngressStatusViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "loadBalancer",
                    "loadBalancer"
                ],
                "properties": {
                    "loadBalancer": {
                        "$ref": "#/components/schemas/KubernetesLoadBalancerStatusViewModel"
                    }
                }
            },
            "KubernetesClusterRoleViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/KubernetesBaseViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "rules",
                            "rules",
                            "aggregationRule",
                            "aggregationRule",
                            "roleBindings",
                            "roleBindings",
                            "clusterRoleBindings",
                            "clusterRoleBindings"
                        ],
                        "properties": {
                            "rules": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/KubernetesPolicyRuleViewModel"
                                }
                            },
                            "aggregationRule": {
                                "$ref": "#/components/schemas/KubernetesAggregationRuleViewModel"
                            },
                            "roleBindings": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/KubernetesRoleBindingViewModel"
                                }
                            },
                            "clusterRoleBindings": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/KubernetesRoleBindingViewModel"
                                }
                            }
                        }
                    }
                ]
            },
            "KubernetesAggregationRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "clusterRoleSelectors",
                    "clusterRoleSelectors"
                ],
                "properties": {
                    "clusterRoleSelectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesLabelSelectorViewModel"
                        }
                    }
                }
            },
            "KubernetesAccountViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "externalAccountNumber",
                    "externalAccountNumber",
                    "threatIntelligenceEnabled",
                    "threatIntelligenceEnabled",
                    "imageAssuranceEnabled",
                    "imageAssuranceEnabled",
                    "imageAccessRuntimeMonitorEnabled",
                    "imageAccessRuntimeMonitorEnabled",
                    "runtimeProtectionEnabled",
                    "runtimeProtectionEnabled",
                    "runtimeProtectionNetwork",
                    "runtimeProtectionNetwork",
                    "runtimeProtectionProfiling",
                    "runtimeProtectionProfiling",
                    "runtimeProtectionFileReputation",
                    "runtimeProtectionFileReputation",
                    "admissionControlEnabled",
                    "admissionControlEnabled",
                    "admissionControlFailOpen",
                    "admissionControlFailOpen",
                    "name",
                    "name",
                    "creationDate",
                    "creationDate",
                    "vendor",
                    "vendor",
                    "organizationalUnitId",
                    "organizationalUnitId",
                    "organizationalUnitPath",
                    "organizationalUnitPath",
                    "organizationalUnitName",
                    "organizationalUnitName",
                    "clusterVersion",
                    "clusterVersion",
                    "clusterVersionStatus",
                    "clusterVersionStatus",
                    "clusterVersionStatusDescription",
                    "clusterVersionStatusDescription",
                    "description",
                    "description",
                    "platform",
                    "platform",
                    "type",
                    "type"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Kubernetes id",
                        "format": "guid"
                    },
                    "externalAccountNumber": {
                        "type": "string",
                        "description": "Kubernetes id"
                    },
                    "threatIntelligenceEnabled": {
                        "type": "boolean",
                        "description": "Flag to determine if Threat Intelligence is enabled/disabled for the account"
                    },
                    "imageAssuranceEnabled": {
                        "type": "boolean",
                        "description": "Flag to determine if Image Assurance is enabled/disabled for the account"
                    },
                    "imageAccessRuntimeMonitorEnabled": {
                        "type": "boolean",
                        "description": "Flag to determine if Image Access Runtime Monitor is enabled/disabled for the account"
                    },
                    "runtimeProtectionEnabled": {
                        "type": "boolean",
                        "description": "Flag to determine if Runtime Protection is enabled/disabled for the account"
                    },
                    "runtimeProtectionNetwork": {
                        "type": "boolean",
                        "description": "Flag to determine if Runtime Protection Network protection is enabled/disabled for the account"
                    },
                    "runtimeProtectionProfiling": {
                        "type": "boolean"
                    },
                    "runtimeProtectionFileReputation": {
                        "type": "boolean"
                    },
                    "admissionControlEnabled": {
                        "type": "boolean",
                        "description": "Flag to determine if Admission Control is enabled/disabled for the account"
                    },
                    "admissionControlFailOpen": {
                        "type": "boolean",
                        "description": "Flag to determine if Admission control FailOpen is true/false for the account"
                    },
                    "name": {
                        "type": "string",
                        "description": "Kubernetes account name in "
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "creation date for project in Kubernetes",
                        "format": "date-time"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/CloudVendor"
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "organizationalUnitName": {
                        "type": "string"
                    },
                    "clusterVersion": {
                        "type": "string"
                    },
                    "clusterVersionStatus": {
                        "type": "string"
                    },
                    "clusterVersionStatusDescription": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "platform": {
                        "$ref": "#/components/schemas/CloudVendor"
                    },
                    "type": {
                        "$ref": "#/components/schemas/KubernetesPlatformType"
                    }
                }
            },
            "CloudVendor": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "aws",
                    "hp",
                    "mellanox",
                    "awsgov",
                    "azure",
                    "google",
                    "awschina",
                    "azuregov",
                    "kubernetes",
                    "azurechina",
                    "terraform",
                    "generic",
                    "kubernetesruntimeassurance",
                    "shiftleft",
                    "sourcecodeassurance",
                    "imageassurance",
                    "alibaba",
                    "cft",
                    "containerregistry",
                    "ers",
                    "oci",
                    "ocigov",
                    "ocigovuk",
                    "CIEM"
                ],
                "enum": [
                    "aws",
                    "hp",
                    "mellanox",
                    "awsgov",
                    "azure",
                    "google",
                    "awschina",
                    "azuregov",
                    "kubernetes",
                    "azurechina",
                    "terraform",
                    "generic",
                    "kubernetesruntimeassurance",
                    "shiftleft",
                    "sourcecodeassurance",
                    "imageassurance",
                    "alibaba",
                    "cft",
                    "containerregistry",
                    "ers",
                    "oci",
                    "ocigov",
                    "ocigovuk",
                    "CIEM"
                ]
            },
            "KubernetesPlatformType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "NA",
                    "GKE",
                    "EKS",
                    "AKS",
                    "Openshift"
                ],
                "enum": [
                    "NA",
                    "GKE",
                    "EKS",
                    "AKS",
                    "Openshift"
                ]
            },
            "KubernetesPostViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "organizationalUnitId",
                    "organizationalUnitId",
                    "description",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Kubernetes account name in ",
                        "maxLength": 500,
                        "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$"
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "description": "Kubernetes account name in ",
                        "format": "guid",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Kubernetes account description in CloudGuard",
                        "maxLength": 1000,
                        "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$",
                        "nullable": true
                    }
                }
            },
            "CloudAccountDeleteResponseViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "cloudAccountId",
                    "cloudAccountId",
                    "deleted",
                    "deleted",
                    "failureReason",
                    "failureReason"
                ],
                "properties": {
                    "cloudAccountId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "failureReason": {
                        "type": "string"
                    }
                }
            },
            "AdmissionControlFailOpenModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "failOpen",
                    "failOpen"
                ],
                "properties": {
                    "failOpen": {
                        "type": "boolean"
                    }
                }
            },
            "KubernetesAccountSummaryViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name",
                    "numberOfNodes",
                    "numberOfNodes",
                    "numberOfPods",
                    "numberOfPods",
                    "numberOfServices",
                    "numberOfServices",
                    "clusterVersion",
                    "clusterVersion",
                    "agentsStatus",
                    "agentsStatus",
                    "agentsStatusDescription",
                    "agentsStatusDescription",
                    "agentsStatusSuportUrl",
                    "agentsStatusSuportUrl",
                    "featureStatuses",
                    "featureStatuses",
                    "isAutoUpgradeActive",
                    "isAutoUpgradeActive",
                    "description",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Kubernetes id",
                        "format": "guid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Kubernetes account name in "
                    },
                    "numberOfNodes": {
                        "type": "integer",
                        "description": "Total Number of Nodes in the Kubernetes account",
                        "format": "int32"
                    },
                    "numberOfPods": {
                        "type": "integer",
                        "description": "Total Number of Pods in the Kubernetes account",
                        "format": "int32"
                    },
                    "numberOfServices": {
                        "type": "integer",
                        "description": "Total Number of Services in the Kubernetes account",
                        "format": "int32"
                    },
                    "clusterVersion": {
                        "type": "string",
                        "description": "Kubernetes cluster server version"
                    },
                    "agentsStatus": {
                        "type": "string",
                        "description": "Kubernetes cluster agent version"
                    },
                    "agentsStatusDescription": {
                        "type": "string",
                        "description": "Kubernetes cluster agents status description"
                    },
                    "agentsStatusSuportUrl": {
                        "type": "string",
                        "description": "Kubernetes cluster agents status support URL"
                    },
                    "featureStatuses": {
                        "type": "array",
                        "description": "Kubernetes cluster agent feature status list",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesAccountFeatureAgentStatusViewModel"
                        }
                    },
                    "isAutoUpgradeActive": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "Kubernetes cluster description"
                    }
                }
            },
            "KubernetesAccountFeatureAgentStatusViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kubernetesFeature",
                    "kubernetesFeature",
                    "statusOk",
                    "statusOk",
                    "statusError",
                    "statusError",
                    "statusInit",
                    "statusInit",
                    "statusPending",
                    "statusPending"
                ],
                "properties": {
                    "kubernetesFeature": {
                        "type": "string",
                        "description": "Feature"
                    },
                    "statusOk": {
                        "type": "integer",
                        "description": "Status Ok",
                        "format": "int32"
                    },
                    "statusError": {
                        "type": "integer",
                        "description": "Status Error",
                        "format": "int32"
                    },
                    "statusInit": {
                        "type": "integer",
                        "description": "Status Init",
                        "format": "int32"
                    },
                    "statusPending": {
                        "type": "integer",
                        "description": "Status Pending",
                        "format": "int32"
                    }
                }
            },
            "KubernetesAccountAgentStatusViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "agentsStatus",
                    "agentsStatus",
                    "agentsStatusDescription",
                    "agentsStatusDescription",
                    "agentsStatusSupportUrl",
                    "agentsStatusSupportUrl",
                    "admissionControlEnabled",
                    "admissionControlEnabled",
                    "imageAssuranceEnabled",
                    "imageAssuranceEnabled",
                    "runtimeProtectionEnabled",
                    "runtimeProtectionEnabled",
                    "threatIntelligenceEnabled",
                    "threatIntelligenceEnabled",
                    "features",
                    "features"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Kubernetes account id",
                        "format": "guid"
                    },
                    "agentsStatus": {
                        "type": "string",
                        "description": "Kubernetes cluster agent status"
                    },
                    "agentsStatusDescription": {
                        "type": "string",
                        "description": "Kubernetes cluster agent status description"
                    },
                    "agentsStatusSupportUrl": {
                        "type": "string",
                        "description": "Kubernetes cluster agent status support URL"
                    },
                    "admissionControlEnabled": {
                        "type": "boolean",
                        "description": "Kubernetes AdmissionControl Enabled"
                    },
                    "imageAssuranceEnabled": {
                        "type": "boolean",
                        "description": "Kubernetes ImageAssurance Enabled"
                    },
                    "runtimeProtectionEnabled": {
                        "type": "boolean",
                        "description": "Kubernetes RuntimeProtection Enabled"
                    },
                    "threatIntelligenceEnabled": {
                        "type": "boolean",
                        "description": "Kubernetes ThreatIntelligence Enabled"
                    },
                    "features": {
                        "type": "array",
                        "description": "Kubernetes account features status",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesAccountFeatureSummaryViewModel"
                        }
                    }
                }
            },
            "KubernetesAccountFeatureSummaryViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "status",
                    "status",
                    "statusDescription",
                    "statusDescription"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/KubernetesAgentStatusOptions"
                    },
                    "statusDescription": {
                        "type": "string"
                    }
                }
            },
            "KubernetesAgentStatusOptions": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "OK",
                    "INITIALIZING",
                    "PENDING_CLEANUP",
                    "PENDING",
                    "WARNING",
                    "ERROR",
                    "DISABLED"
                ],
                "enum": [
                    "OK",
                    "INITIALIZING",
                    "PENDING_CLEANUP",
                    "PENDING",
                    "WARNING",
                    "ERROR",
                    "DISABLED"
                ]
            },
            "KubernetesAccountAgentStatusFiltersViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "statuses",
                    "statuses",
                    "isAgentUpToDate",
                    "isAgentUpToDate",
                    "organizationalUnitIds",
                    "organizationalUnitIds"
                ],
                "properties": {
                    "statuses": {
                        "type": "array",
                        "description": "Filter agents by status (OK/WARNING/ERROR/PENDING/PENDING_CLEANUP/INITIALIZING/DISABLED).",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/KubernetesAgentStatusOptions"
                        }
                    },
                    "isAgentUpToDate": {
                        "type": "boolean",
                        "description": "Filter agents that are up to date or not. Set to 'null' to include all.",
                        "nullable": true
                    },
                    "organizationalUnitIds": {
                        "type": "array",
                        "description": "Filter agents by the organizational unit.",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                }
            },
            "KubernetesAgentsSummaryViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "agentType",
                    "agentType",
                    "agentSummary",
                    "agentSummary"
                ],
                "properties": {
                    "agentType": {
                        "type": "string"
                    },
                    "agentSummary": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesAgentSummaryViewModel"
                        }
                    }
                }
            },
            "KubernetesAgentSummaryViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "version",
                    "version",
                    "isAgentUpToDate",
                    "isAgentUpToDate",
                    "lastCommunication",
                    "lastCommunication",
                    "lastCommunicationDate",
                    "lastCommunicationDate",
                    "status",
                    "status",
                    "description",
                    "description",
                    "supportUrl",
                    "supportUrl",
                    "nodeName",
                    "nodeName",
                    "creationTime",
                    "creationTime",
                    "creationDate",
                    "creationDate",
                    "agentIdentifier",
                    "agentIdentifier",
                    "components",
                    "components"
                ],
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "isAgentUpToDate": {
                        "type": "boolean"
                    },
                    "lastCommunication": {
                        "type": "string",
                        "deprecated": true,
                        "x-deprecatedMessage": "use LastCommunicationDate"
                    },
                    "lastCommunicationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "supportUrl": {
                        "type": "string"
                    },
                    "nodeName": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string",
                        "deprecated": true,
                        "x-deprecatedMessage": "use CreationDate"
                    },
                    "creationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "agentIdentifier": {
                        "type": "string"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesAgentComponentViewModel"
                        }
                    }
                }
            },
            "KubernetesAgentComponentViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "lastOkTime",
                    "lastOkTime",
                    "lastOkDate",
                    "lastOkDate",
                    "id",
                    "id",
                    "name",
                    "name",
                    "status",
                    "status",
                    "description",
                    "description",
                    "supportUrl",
                    "supportUrl",
                    "activationTime",
                    "activationTime",
                    "activationDate",
                    "activationDate"
                ],
                "properties": {
                    "lastOkTime": {
                        "type": "string",
                        "deprecated": true,
                        "x-deprecatedMessage": "use LastOkDate"
                    },
                    "lastOkDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "supportUrl": {
                        "type": "string"
                    },
                    "activationTime": {
                        "type": "string",
                        "deprecated": true,
                        "x-deprecatedMessage": "use ActivationDate"
                    },
                    "activationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "UpdateIdViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "organizationalUnitId",
                    "organizationalUnitId"
                ],
                "properties": {
                    "organizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    }
                }
            },
            "MoveOrganizationalUnitViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "sourceOrganizationalUnitId",
                    "sourceOrganizationalUnitId",
                    "targetOrganizationalUnitId",
                    "targetOrganizationalUnitId"
                ],
                "properties": {
                    "sourceOrganizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "targetOrganizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    }
                }
            },
            "AttachCloudAccountsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "entries",
                    "entries",
                    "organizationalUnitId",
                    "organizationalUnitId"
                ],
                "properties": {
                    "entries": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    }
                }
            },
            "KubernetesAccountOldViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "externalAccountNumber",
                    "externalAccountNumber",
                    "magellan",
                    "magellan",
                    "vulnerabilityAssessment",
                    "vulnerabilityAssessment",
                    "runtimeProtection",
                    "runtimeProtection",
                    "runtimeProtectionNetwork",
                    "runtimeProtectionNetwork",
                    "admissionControl",
                    "admissionControl",
                    "admissionControlFailOpen",
                    "admissionControlFailOpen",
                    "name",
                    "name",
                    "creationDate",
                    "creationDate",
                    "vendor",
                    "vendor",
                    "organizationalUnitId",
                    "organizationalUnitId",
                    "organizationalUnitPath",
                    "organizationalUnitPath",
                    "organizationalUnitName",
                    "organizationalUnitName",
                    "clusterVersion",
                    "clusterVersion"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Kubernetes id",
                        "format": "guid"
                    },
                    "externalAccountNumber": {
                        "type": "string",
                        "description": "Kubernetes id"
                    },
                    "magellan": {
                        "type": "boolean",
                        "description": "Flag to determine if Magellan is enabled/disabled for the account"
                    },
                    "vulnerabilityAssessment": {
                        "type": "boolean",
                        "description": "Flag to determine if Vulnerability Assessment is enabled/disabled for the account"
                    },
                    "runtimeProtection": {
                        "type": "boolean",
                        "description": "Flag to determine if Runtime Protection is enabled/disabled for the account"
                    },
                    "runtimeProtectionNetwork": {
                        "type": "boolean",
                        "description": "Flag to determine if Runtime Protection Network protection is enabled/disabled for the account"
                    },
                    "admissionControl": {
                        "type": "boolean",
                        "description": "Flag to determine if Admission Control is enabled/disabled for the account"
                    },
                    "admissionControlFailOpen": {
                        "type": "boolean",
                        "description": "Flag to determine if Admission control FailOpen is true/false for the account"
                    },
                    "name": {
                        "type": "string",
                        "description": "Kubernetes account name in "
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "creation date for project in Kubernetes",
                        "format": "date-time"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/CloudVendor"
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "organizationalUnitName": {
                        "type": "string"
                    },
                    "clusterVersion": {
                        "type": "string"
                    }
                }
            },
            "EnableImageScanViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "cloudAccountId",
                    "enabled",
                    "cloudAccountId",
                    "enabled"
                ],
                "properties": {
                    "cloudAccountId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "MagellanK8sOnboardingModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "k8sAccountId",
                    "enabled",
                    "k8sAccountId",
                    "enabled"
                ],
                "properties": {
                    "k8sAccountId": {
                        "type": "string",
                        "description": "K8S account id",
                        "format": "guid",
                        "minLength": 1
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "RuntimeProtectionOnboardingModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "k8sAccountId",
                    "enabled",
                    "k8sAccountId",
                    "enabled"
                ],
                "properties": {
                    "k8sAccountId": {
                        "type": "string",
                        "description": "Kubernetes cloud account id",
                        "format": "guid",
                        "minLength": 1
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "AdmissionControlOnboardingModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "k8sAccountId",
                    "enabled",
                    "k8sAccountId",
                    "enabled"
                ],
                "properties": {
                    "k8sAccountId": {
                        "type": "string",
                        "description": "Kubernetes cloud account id",
                        "format": "guid",
                        "minLength": 1
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "AdmissionControlFailOpenOldModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "k8sAccountId",
                    "failOpen",
                    "k8sAccountId",
                    "failOpen"
                ],
                "properties": {
                    "k8sAccountId": {
                        "type": "string",
                        "description": "Kubernetes cloud account id",
                        "format": "guid",
                        "minLength": 1
                    },
                    "failOpen": {
                        "type": "boolean"
                    }
                }
            },
            "ContainerRegistryAccountViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "creationDate",
                    "creationDate",
                    "organizationalUnitPath",
                    "organizationalUnitPath",
                    "organizationalUnitName",
                    "organizationalUnitName",
                    "name",
                    "name",
                    "registryUrl",
                    "registryUrl",
                    "organizationalUnitId",
                    "organizationalUnitId",
                    "linkedKubernetesEnvironments",
                    "linkedKubernetesEnvironments",
                    "linkedScanningEnvironments",
                    "linkedScanningEnvironments",
                    "description",
                    "description",
                    "platform",
                    "platform",
                    "type",
                    "type"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "creationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "organizationalUnitName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "registryUrl": {
                        "type": "string"
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "linkedKubernetesEnvironments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerRegistryLinkedEnvironmentViewModel"
                        }
                    },
                    "linkedScanningEnvironments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerRegistryLinkedEnvironmentViewModel"
                        }
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "platform": {
                        "$ref": "#/components/schemas/CloudVendor"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ContainerRegistryType"
                    }
                }
            },
            "ContainerRegistryLinkedEnvironmentViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "environmentId",
                    "environmentId",
                    "pullSecretName",
                    "pullSecretName",
                    "tenantId",
                    "tenantId",
                    "applicationClientId",
                    "applicationClientId",
                    "scanningEnvironmentType",
                    "scanningEnvironmentType",
                    "registryAuthType",
                    "registryAuthType",
                    "roleArn",
                    "roleArn"
                ],
                "properties": {
                    "environmentId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "pullSecretName": {
                        "type": "string",
                        "pattern": "^(?=.{1,253}$)[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                        "nullable": true
                    },
                    "tenantId": {
                        "type": "string",
                        "nullable": true
                    },
                    "applicationClientId": {
                        "type": "string",
                        "nullable": true
                    },
                    "scanningEnvironmentType": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ContainerRegistryScanningEnvironmentType"
                            }
                        ]
                    },
                    "registryAuthType": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ContainerRegistryAuthType"
                            }
                        ]
                    },
                    "roleArn": {
                        "type": "string",
                        "pattern": "^arn:aws:iam::\\d{12}:role/[\\w+=,.@-]+",
                        "nullable": true
                    }
                }
            },
            "ContainerRegistryScanningEnvironmentType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "AWS",
                    "Kubernetes"
                ],
                "enum": [
                    "AWS",
                    "Kubernetes"
                ]
            },
            "ContainerRegistryAuthType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "AcrServicePrincipal",
                    "AcrManagedId",
                    "EcrUserAccessKeys",
                    "EcrNodeGroupRole",
                    "GcpServiceAccountKey",
                    "GcpGkeInternalAuth",
                    "ArtifactoryUserPassword",
                    "ArtifactoryToken",
                    "HarborUserPassword",
                    "EcrCustomRole",
                    "NexusUserPassword",
                    "EcrEcsTaskRole",
                    "GithubToken"
                ],
                "enum": [
                    "AcrServicePrincipal",
                    "AcrManagedId",
                    "EcrUserAccessKeys",
                    "EcrNodeGroupRole",
                    "GcpServiceAccountKey",
                    "GcpGkeInternalAuth",
                    "ArtifactoryUserPassword",
                    "ArtifactoryToken",
                    "HarborUserPassword",
                    "EcrCustomRole",
                    "NexusUserPassword",
                    "EcrEcsTaskRole",
                    "GithubToken"
                ]
            },
            "ContainerRegistryType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "ACR",
                    "ECR",
                    "GCR",
                    "GAR",
                    "Artifactory",
                    "Harbor",
                    "Nexus",
                    "GitHub"
                ],
                "enum": [
                    "ACR",
                    "ECR",
                    "GCR",
                    "GAR",
                    "Artifactory",
                    "Harbor",
                    "Nexus",
                    "GitHub"
                ]
            },
            "ContainerRegistryAccountPostModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "registryType",
                    "registryUrl",
                    "name",
                    "description",
                    "description",
                    "organizationalUnitId",
                    "organizationalUnitId",
                    "registryType",
                    "registryUrl",
                    "linkedKubernetesEnvironments",
                    "linkedKubernetesEnvironments",
                    "linkedScanningEnvironments",
                    "linkedScanningEnvironments"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 500,
                        "minLength": 1,
                        "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$"
                    },
                    "description": {
                        "type": "string",
                        "description": "            Container Registry environment description in CloudGuard\t\n            ",
                        "maxLength": 1000,
                        "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$",
                        "nullable": true
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "registryType": {
                        "$ref": "#/components/schemas/ContainerRegistryType"
                    },
                    "registryUrl": {
                        "type": "string",
                        "format": "uri",
                        "minLength": 1
                    },
                    "linkedKubernetesEnvironments": {
                        "type": "array",
                        "description": "Deprecated - please use 'LinkedScanningEnvironments'",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/ContainerRegistryLinkedEnvironmentViewModel"
                        }
                    },
                    "linkedScanningEnvironments": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/ContainerRegistryLinkedEnvironmentViewModel"
                        }
                    }
                }
            },
            "ContainerRegistryUserConfigurationsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "imageListIntervalSeconds",
                    "imageListIntervalSeconds",
                    "maxImagesPerRepo",
                    "maxImagesPerRepo"
                ],
                "properties": {
                    "imageListIntervalSeconds": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "maxImagesPerRepo": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                }
            },
            "ContainerRegistryAgentSummaryViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "version",
                    "version",
                    "isAgentUpToDate",
                    "isAgentUpToDate",
                    "lastCommunication",
                    "lastCommunication",
                    "lastCommunicationDate",
                    "lastCommunicationDate",
                    "status",
                    "status",
                    "description",
                    "description",
                    "supportUrl",
                    "supportUrl",
                    "creationTime",
                    "creationTime",
                    "creationDate",
                    "creationDate",
                    "kubernetesAccountId",
                    "kubernetesAccountId",
                    "kubernetesAccountName",
                    "kubernetesAccountName"
                ],
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "isAgentUpToDate": {
                        "type": "boolean"
                    },
                    "lastCommunication": {
                        "type": "string",
                        "deprecated": true,
                        "x-deprecatedMessage": "use LastCommunicationDate"
                    },
                    "lastCommunicationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "supportUrl": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string",
                        "deprecated": true,
                        "x-deprecatedMessage": "use CreationDate"
                    },
                    "creationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "kubernetesAccountId": {
                        "type": "string"
                    },
                    "kubernetesAccountName": {
                        "type": "string"
                    }
                }
            },
            "ContainerRegistryAccountAgentSummaryViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name",
                    "agentsStatus",
                    "agentsStatus",
                    "agentsStatusDescription",
                    "agentsStatusDescription"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "agentsStatus": {
                        "type": "string"
                    },
                    "agentsStatusDescription": {
                        "type": "string"
                    }
                }
            },
            "ContainerRegistryAccountSummaryViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name",
                    "agentsStatus",
                    "agentsStatus",
                    "agentsStatusDescription",
                    "agentsStatusDescription",
                    "registryType",
                    "registryType",
                    "registryUrl",
                    "registryUrl",
                    "numberOfImages",
                    "numberOfImages",
                    "numberOfRepositories",
                    "numberOfRepositories",
                    "linkedAgentsStatuses",
                    "linkedAgentsStatuses"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "agentsStatus": {
                        "type": "string"
                    },
                    "agentsStatusDescription": {
                        "type": "string"
                    },
                    "registryType": {
                        "type": "string"
                    },
                    "registryUrl": {
                        "type": "string"
                    },
                    "numberOfImages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfRepositories": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "linkedAgentsStatuses": {
                        "$ref": "#/components/schemas/ContainerRegistryLinkedAgentsStatusesViewModel"
                    }
                }
            },
            "ContainerRegistryLinkedAgentsStatusesViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "statusOk",
                    "statusOk",
                    "statusError",
                    "statusError",
                    "statusPending",
                    "statusPending"
                ],
                "properties": {
                    "statusOk": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "statusError": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "statusPending": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "KubernetesWorkloadViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "entityId",
                    "entityId",
                    "entityName",
                    "entityName",
                    "entityType",
                    "entityType",
                    "externalId",
                    "externalId",
                    "environmentId",
                    "environmentId",
                    "platform",
                    "platform",
                    "namespace",
                    "namespace",
                    "imageIds",
                    "imageIds",
                    "podIds",
                    "podIds"
                ],
                "properties": {
                    "entityId": {
                        "type": "string"
                    },
                    "entityName": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "imageIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "podIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "WorkloadImageViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "imageId",
                    "imageId",
                    "externalId",
                    "externalId",
                    "name",
                    "name",
                    "registry",
                    "registry",
                    "repository",
                    "repository",
                    "tag",
                    "tag",
                    "type",
                    "type",
                    "digest",
                    "digest",
                    "riskScore",
                    "riskScore",
                    "scanStatus",
                    "scanStatus"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "registry": {
                        "type": "string"
                    },
                    "repository": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ImageType"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "riskScore": {
                        "type": "string",
                        "nullable": true
                    },
                    "scanStatus": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ImageStatus"
                            }
                        ]
                    }
                }
            },
            "ImageType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "EcsImage",
                    "KubernetesImage"
                ],
                "enum": [
                    "EcsImage",
                    "KubernetesImage"
                ]
            },
            "ImageStatus": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Pending",
                    "Requested",
                    "InternalError",
                    "Scanned",
                    "PartialResult",
                    "UnsupportedOS",
                    "Unmatched",
                    "UnsupportedArtifactType",
                    "NetworkError",
                    "Unauthorized",
                    "NewImage",
                    "InsufficientResources",
                    "Timeout"
                ],
                "enum": [
                    "Pending",
                    "Requested",
                    "InternalError",
                    "Scanned",
                    "PartialResult",
                    "UnsupportedOS",
                    "Unmatched",
                    "UnsupportedArtifactType",
                    "NetworkError",
                    "Unauthorized",
                    "NewImage",
                    "InsufficientResources",
                    "Timeout"
                ]
            },
            "ImageWorkloadsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kubernetesImageWorkloads",
                    "kubernetesImageWorkloads",
                    "ecsImageWorkloads",
                    "ecsImageWorkloads"
                ],
                "properties": {
                    "kubernetesImageWorkloads": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/KubernetesImageWorkloadViewModel"
                        }
                    },
                    "ecsImageWorkloads": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/EcsImageWorkloadViewModel"
                        }
                    }
                }
            },
            "KubernetesImageWorkloadViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "externalId",
                    "externalId",
                    "name",
                    "name",
                    "namespace",
                    "namespace",
                    "labels",
                    "labels",
                    "annotations",
                    "annotations",
                    "desiredPodsNumber",
                    "desiredPodsNumber",
                    "readyPodsNumber",
                    "readyPodsNumber",
                    "environmentId",
                    "environmentId",
                    "createdAt",
                    "createdAt",
                    "kind",
                    "kind"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "desiredPodsNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "readyPodsNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "EcsImageWorkloadViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "externalId",
                    "externalId",
                    "type",
                    "type",
                    "awsAccount",
                    "awsAccount",
                    "region",
                    "region",
                    "cluster",
                    "cluster",
                    "name",
                    "name",
                    "tags",
                    "tags",
                    "environmentId",
                    "environmentId",
                    "desiredTasksNumber",
                    "desiredTasksNumber",
                    "createdAt",
                    "createdAt"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "awsAccount": {
                        "type": "string"
                    },
                    "region": {
                        "$ref": "#/components/schemas/CloudRegion"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "desiredTasksNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CloudRegion": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "us_east_1",
                    "us_west_1",
                    "eu_west_1",
                    "ap_southeast_1",
                    "ap_northeast_1",
                    "us_west_2",
                    "sa_east_1",
                    "az_1_region_a_geo_1",
                    "az_2_region_a_geo_1",
                    "az_3_region_a_geo_1",
                    "ap_southeast_2",
                    "mellanox_region",
                    "us_gov_west_1",
                    "eu_central_1",
                    "ap_northeast_2",
                    "ap_south_1",
                    "us_east_2",
                    "ca_central_1",
                    "eu_west_2",
                    "eu_west_3",
                    "eu_north_1",
                    "cn_north_1",
                    "cn_northwest_1",
                    "us_gov_east_1",
                    "ap_east_1",
                    "me_south_1",
                    "af_south_1",
                    "eu_south_1",
                    "ap_northeast_3",
                    "me_central_1",
                    "ap_south_2",
                    "ap_southeast_3",
                    "ap_southeast_4",
                    "eu_central_2",
                    "eu_south_2",
                    "il_central_1",
                    "westus",
                    "eastus",
                    "eastus2",
                    "northcentralus",
                    "westus2",
                    "southcentralus",
                    "centralus",
                    "usgovlowa",
                    "usgovvirginia",
                    "northeurope",
                    "westeurope",
                    "eastasia",
                    "southeastasia",
                    "japaneast",
                    "japanwest",
                    "brazilsouth",
                    "australiaeast",
                    "australiasoutheast",
                    "centralindia",
                    "southindia",
                    "westindia",
                    "canadaeast",
                    "westcentralus",
                    "chinaeast",
                    "chinanorth",
                    "canadacentral",
                    "germanycentral",
                    "germanynortheast",
                    "koreacentral",
                    "uksouth",
                    "ukwest",
                    "koreasouth",
                    "francecentral",
                    "francesouth",
                    "germanywestcentral",
                    "usdodcentral",
                    "usdodeast",
                    "usgovarizona",
                    "usgovtexas",
                    "australiacentral",
                    "australiacentral2",
                    "chinaeast2",
                    "chinanorth2",
                    "southafricanorth",
                    "southafricawest",
                    "uaecentral",
                    "uaenorth",
                    "ussecwest",
                    "usseceast",
                    "germanynorth",
                    "switzerlandwest",
                    "norwaywest",
                    "norwayeast",
                    "switzerlandnorth",
                    "westus3",
                    "swedencentral",
                    "chinanorth3",
                    "brazilsoutheast",
                    "eastus2euap",
                    "jioindiawest",
                    "jioindiacentral",
                    "qatarcentral",
                    "asia",
                    "asia_east1",
                    "asia_northeast1",
                    "asia_south1",
                    "asia_southeast1",
                    "australia_southeast1",
                    "europe",
                    "europe_north1",
                    "europe_west1",
                    "europe_west2",
                    "europe_west3",
                    "europe_west4",
                    "northamerica_northeast1",
                    "southamerica_east1",
                    "us",
                    "us_central1",
                    "us_east1",
                    "us_east4",
                    "us_west1",
                    "us_west2",
                    "global",
                    "asia_east2",
                    "eur4",
                    "nam4",
                    "europe_west6",
                    "japan_west",
                    "asia_northeast2",
                    "asia_northeast3",
                    "us_west3",
                    "us_west4",
                    "asia_southeast2",
                    "nam3",
                    "nam5",
                    "nam6",
                    "nam7",
                    "nam10",
                    "nam_eur_asia1",
                    "eur3",
                    "eur5",
                    "asia1",
                    "nam11",
                    "eu",
                    "northamerica_northeast2",
                    "southamerica_west1",
                    "us_east5",
                    "us_south1",
                    "europe_central2",
                    "europe_southwest1",
                    "europe_west8",
                    "europe_west9",
                    "europe_west10",
                    "europe_west12",
                    "asia_south2",
                    "australia_southeast2",
                    "me_central1",
                    "me_central2",
                    "me_west1",
                    "ap_sydney_1",
                    "ap_melbourne_1",
                    "sa_saopaulo_1",
                    "sa_vinhedo_1",
                    "ca_montreal_1",
                    "ca_toronto_1",
                    "sa_santiago_1",
                    "eu_paris_1",
                    "eu_marseille_1",
                    "eu_frankfurt_1",
                    "ap_hyderabad_1",
                    "ap_mumbai_1",
                    "il_jerusalem_1",
                    "eu_milan_1",
                    "ap_osaka_1",
                    "ap_tokyo_1",
                    "mx_queretaro_1",
                    "eu_amsterdam_1",
                    "me_jeddah_1",
                    "ap_singapore_1",
                    "af_johannesburg_1",
                    "ap_seoul_1",
                    "ap_chuncheon_1",
                    "eu_madrid_1",
                    "eu_stockholm_1",
                    "eu_zurich_1",
                    "me_abudhabi_1",
                    "me_dubai_1",
                    "uk_london_1",
                    "uk_cardiff_1",
                    "us_ashburn_1",
                    "us_phoenix_1",
                    "us_sanjose_1",
                    "us_gov_ashburn_1",
                    "us_gov_chicago_1",
                    "us_gov_phoenix_1",
                    "us_langley_1",
                    "us_luke_1",
                    "uk_gov_london_1",
                    "uk_gov_cardiff_1"
                ],
                "enum": [
                    "us_east_1",
                    "us_west_1",
                    "eu_west_1",
                    "ap_southeast_1",
                    "ap_northeast_1",
                    "us_west_2",
                    "sa_east_1",
                    "az_1_region_a_geo_1",
                    "az_2_region_a_geo_1",
                    "az_3_region_a_geo_1",
                    "ap_southeast_2",
                    "mellanox_region",
                    "us_gov_west_1",
                    "eu_central_1",
                    "ap_northeast_2",
                    "ap_south_1",
                    "us_east_2",
                    "ca_central_1",
                    "eu_west_2",
                    "eu_west_3",
                    "eu_north_1",
                    "cn_north_1",
                    "cn_northwest_1",
                    "us_gov_east_1",
                    "ap_east_1",
                    "me_south_1",
                    "af_south_1",
                    "eu_south_1",
                    "ap_northeast_3",
                    "me_central_1",
                    "ap_south_2",
                    "ap_southeast_3",
                    "ap_southeast_4",
                    "eu_central_2",
                    "eu_south_2",
                    "il_central_1",
                    "westus",
                    "eastus",
                    "eastus2",
                    "northcentralus",
                    "westus2",
                    "southcentralus",
                    "centralus",
                    "usgovlowa",
                    "usgovvirginia",
                    "northeurope",
                    "westeurope",
                    "eastasia",
                    "southeastasia",
                    "japaneast",
                    "japanwest",
                    "brazilsouth",
                    "australiaeast",
                    "australiasoutheast",
                    "centralindia",
                    "southindia",
                    "westindia",
                    "canadaeast",
                    "westcentralus",
                    "chinaeast",
                    "chinanorth",
                    "canadacentral",
                    "germanycentral",
                    "germanynortheast",
                    "koreacentral",
                    "uksouth",
                    "ukwest",
                    "koreasouth",
                    "francecentral",
                    "francesouth",
                    "germanywestcentral",
                    "usdodcentral",
                    "usdodeast",
                    "usgovarizona",
                    "usgovtexas",
                    "australiacentral",
                    "australiacentral2",
                    "chinaeast2",
                    "chinanorth2",
                    "southafricanorth",
                    "southafricawest",
                    "uaecentral",
                    "uaenorth",
                    "ussecwest",
                    "usseceast",
                    "germanynorth",
                    "switzerlandwest",
                    "norwaywest",
                    "norwayeast",
                    "switzerlandnorth",
                    "westus3",
                    "swedencentral",
                    "chinanorth3",
                    "brazilsoutheast",
                    "eastus2euap",
                    "jioindiawest",
                    "jioindiacentral",
                    "qatarcentral",
                    "asia",
                    "asia_east1",
                    "asia_northeast1",
                    "asia_south1",
                    "asia_southeast1",
                    "australia_southeast1",
                    "europe",
                    "europe_north1",
                    "europe_west1",
                    "europe_west2",
                    "europe_west3",
                    "europe_west4",
                    "northamerica_northeast1",
                    "southamerica_east1",
                    "us",
                    "us_central1",
                    "us_east1",
                    "us_east4",
                    "us_west1",
                    "us_west2",
                    "global",
                    "asia_east2",
                    "eur4",
                    "nam4",
                    "europe_west6",
                    "japan_west",
                    "asia_northeast2",
                    "asia_northeast3",
                    "us_west3",
                    "us_west4",
                    "asia_southeast2",
                    "nam3",
                    "nam5",
                    "nam6",
                    "nam7",
                    "nam10",
                    "nam_eur_asia1",
                    "eur3",
                    "eur5",
                    "asia1",
                    "nam11",
                    "eu",
                    "northamerica_northeast2",
                    "southamerica_west1",
                    "us_east5",
                    "us_south1",
                    "europe_central2",
                    "europe_southwest1",
                    "europe_west8",
                    "europe_west9",
                    "europe_west10",
                    "europe_west12",
                    "asia_south2",
                    "australia_southeast2",
                    "me_central1",
                    "me_central2",
                    "me_west1",
                    "ap_sydney_1",
                    "ap_melbourne_1",
                    "sa_saopaulo_1",
                    "sa_vinhedo_1",
                    "ca_montreal_1",
                    "ca_toronto_1",
                    "sa_santiago_1",
                    "eu_paris_1",
                    "eu_marseille_1",
                    "eu_frankfurt_1",
                    "ap_hyderabad_1",
                    "ap_mumbai_1",
                    "il_jerusalem_1",
                    "eu_milan_1",
                    "ap_osaka_1",
                    "ap_tokyo_1",
                    "mx_queretaro_1",
                    "eu_amsterdam_1",
                    "me_jeddah_1",
                    "ap_singapore_1",
                    "af_johannesburg_1",
                    "ap_seoul_1",
                    "ap_chuncheon_1",
                    "eu_madrid_1",
                    "eu_stockholm_1",
                    "eu_zurich_1",
                    "me_abudhabi_1",
                    "me_dubai_1",
                    "uk_london_1",
                    "uk_cardiff_1",
                    "us_ashburn_1",
                    "us_phoenix_1",
                    "us_sanjose_1",
                    "us_gov_ashburn_1",
                    "us_gov_chicago_1",
                    "us_gov_phoenix_1",
                    "us_langley_1",
                    "us_luke_1",
                    "uk_gov_london_1",
                    "uk_gov_cardiff_1"
                ]
            },
            "ImageScanRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "environmentId",
                    "environmentId",
                    "imageIdOrDigest",
                    "imageIdOrDigest"
                ],
                "properties": {
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "imageIdOrDigest": {
                        "type": "string"
                    }
                }
            },
            "ImageScanRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "imagesToScanCount",
                    "imagesToScanCount"
                ],
                "properties": {
                    "imagesToScanCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "MonitorAccountsDetailsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kubernetesAccounts",
                    "kubernetesAccounts",
                    "containerRegistryAccounts",
                    "containerRegistryAccounts"
                ],
                "properties": {
                    "kubernetesAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesAccountMonitoredViewModel"
                        }
                    },
                    "containerRegistryAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegistriesAccountMonitoredViewModel"
                        }
                    }
                }
            },
            "KubernetesAccountMonitoredViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "managedKubernetesAccountDetails",
                    "managedKubernetesAccountDetails",
                    "onBoardedKubernetesAccountDetails",
                    "onBoardedKubernetesAccountDetails"
                ],
                "properties": {
                    "managedKubernetesAccountDetails": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ManagedKubernetesAccountDetailsViewModel"
                            }
                        ]
                    },
                    "onBoardedKubernetesAccountDetails": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/OnBoardedKubernetesAccountDetailsViewModel"
                            }
                        ]
                    }
                }
            },
            "ManagedKubernetesAccountDetailsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "providerAccountId",
                    "providerAccountId",
                    "cloudAccountId",
                    "cloudAccountId",
                    "managedClusterEntityId",
                    "managedClusterEntityId",
                    "EntityId",
                    "EntityId",
                    "type",
                    "type",
                    "cloudAccountName",
                    "cloudAccountName",
                    "organizationalUnitId",
                    "organizationalUnitId",
                    "organizationalUnitPath",
                    "organizationalUnitPath",
                    "organizationalUnitName",
                    "organizationalUnitName",
                    "platform",
                    "platform"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "providerAccountId": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "managedClusterEntityId": {
                        "type": "string"
                    },
                    "EntityId": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/KubernetesPlatformType"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "organizationalUnitName": {
                        "type": "string"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/CloudVendor"
                    }
                }
            },
            "OnBoardedKubernetesAccountDetailsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "id",
                    "id",
                    "kubernetesAccountId",
                    "kubernetesAccountId",
                    "status",
                    "status",
                    "statusDescription",
                    "statusDescription",
                    "description",
                    "description",
                    "clusterVersion",
                    "clusterVersion",
                    "clusterVersionStatus",
                    "clusterVersionStatus",
                    "clusterVersionStatusDescription",
                    "clusterVersionStatusDescription",
                    "features",
                    "features",
                    "type",
                    "type"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "kubernetesAccountId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusDescription": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "clusterVersion": {
                        "type": "string"
                    },
                    "clusterVersionStatus": {
                        "type": "string"
                    },
                    "clusterVersionStatusDescription": {
                        "type": "string"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KubernetesAccountFeatureSummaryViewModel"
                        }
                    },
                    "type": {
                        "$ref": "#/components/schemas/KubernetesPlatformType"
                    }
                }
            },
            "RegistriesAccountMonitoredViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "managedRegistriesAccountDetails",
                    "managedRegistriesAccountDetails",
                    "onBoardedRegistriesAccountDetails",
                    "onBoardedRegistriesAccountDetails"
                ],
                "properties": {
                    "managedRegistriesAccountDetails": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ManagedRegistriesAccountDetailsViewModel"
                            }
                        ]
                    },
                    "onBoardedRegistriesAccountDetails": {
                        "$ref": "#/components/schemas/OnBoardedRegistriesAccountDetailsViewModel"
                    }
                }
            },
            "ManagedRegistriesAccountDetailsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "providerAccountId",
                    "providerAccountId",
                    "cloudAccountId",
                    "cloudAccountId",
                    "cloudAccountName",
                    "cloudAccountName",
                    "EntityId",
                    "EntityId",
                    "type",
                    "type",
                    "organizationalUnitId",
                    "organizationalUnitId",
                    "organizationalUnitPath",
                    "organizationalUnitPath",
                    "organizationalUnitName",
                    "organizationalUnitName",
                    "platform",
                    "platform"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "providerAccountId": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "EntityId": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ContainerRegistryType"
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "organizationalUnitName": {
                        "type": "string"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/CloudVendor"
                    }
                }
            },
            "OnBoardedRegistriesAccountDetailsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "id",
                    "id",
                    "status",
                    "status",
                    "statusDescription",
                    "statusDescription",
                    "description",
                    "description",
                    "type",
                    "type",
                    "registryUri",
                    "registryUri"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "status": {
                        "$ref": "#/components/schemas/KubernetesAgentStatusOptions"
                    },
                    "statusDescription": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ContainerRegistryType"
                    },
                    "registryUri": {
                        "type": "string"
                    }
                }
            },
            "WorkloadDashboardLastAssessmentResultViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ruleSetId",
                    "ruleSetId",
                    "result",
                    "result"
                ],
                "properties": {
                    "ruleSetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "result": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "WorkloadDashboardAssessmentTrendViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "assessmentDate",
                    "assessmentDate",
                    "result",
                    "result"
                ],
                "properties": {
                    "assessmentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "result": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "WorkloadChangeMonitoringPolicyViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "targetId",
                    "targetId",
                    "notificationIds",
                    "notificationIds",
                    "errorMessage",
                    "errorMessage"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "errorMessage": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "WorkloadChangeMonitoringPolicyRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "targetId",
                    "notificationIds",
                    "targetId",
                    "notificationIds"
                ],
                "properties": {
                    "targetId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                }
            },
            "ShiftLeftAccountViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name",
                    "description",
                    "description",
                    "creationDate",
                    "creationDate",
                    "vendor",
                    "vendor",
                    "organizationalUnitId",
                    "organizationalUnitId",
                    "organizationalUnitPath",
                    "organizationalUnitPath",
                    "organizationalUnitName",
                    "organizationalUnitName"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ShiftLeft id",
                        "format": "guid"
                    },
                    "name": {
                        "type": "string",
                        "description": "ShiftLeft account name in "
                    },
                    "description": {
                        "type": "string",
                        "description": "ShiftLeft environment description in ",
                        "nullable": true
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "creation date for project in ShiftLeft",
                        "format": "date-time"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/CloudVendor"
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "description": "ShiftLeft account organizational unit ID",
                        "format": "guid",
                        "nullable": true
                    },
                    "organizationalUnitPath": {
                        "type": "string"
                    },
                    "organizationalUnitName": {
                        "type": "string"
                    }
                }
            },
            "ShiftLeftPostViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "description",
                    "description",
                    "organizationalUnitId",
                    "organizationalUnitId"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "ShiftLeft account name in ",
                        "maxLength": 500,
                        "minLength": 1,
                        "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$"
                    },
                    "description": {
                        "type": "string",
                        "description": "ShiftLeft environment description in ",
                        "maxLength": 1000,
                        "pattern": "^[\\p{L}\\p{M}0-9\\s\\-_'.,#/@;:!=]*$",
                        "nullable": true
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "description": "ShiftLeft account organizational unit ID",
                        "format": "guid",
                        "nullable": true
                    }
                }
            },
            "ShiftleftImagePostModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "environmentId",
                    "imageId",
                    "size",
                    "repoTags",
                    "environmentId",
                    "imageId",
                    "size",
                    "repoTags"
                ],
                "properties": {
                    "environmentId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "imageId": {
                        "type": "string",
                        "minLength": 1
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "repoTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ShiftLeftPolicyViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "targetType",
                    "targetType",
                    "targetId",
                    "targetId",
                    "accountExternalId",
                    "accountExternalId",
                    "rulesetId",
                    "rulesetId",
                    "notificationIds",
                    "notificationIds",
                    "errorMessage",
                    "errorMessage",
                    "admissionControllerAction",
                    "admissionControllerAction",
                    "admissionControlUnScannedAction",
                    "admissionControlUnScannedAction"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetType": {
                        "$ref": "#/components/schemas/ContinuousCompliancePolicyTargetType"
                    },
                    "targetId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "accountExternalId": {
                        "type": "string"
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "errorMessage": {
                        "type": "string",
                        "nullable": true
                    },
                    "admissionControllerAction": {
                        "type": "string",
                        "description": "[Preview feature - Image Admission] Image Admission action to block non-compliant images according to the relevant ruleset.\nOptions: 'Prevention', 'Detection', or null.",
                        "nullable": true
                    },
                    "admissionControlUnScannedAction": {
                        "type": "string",
                        "description": "[Preview feature - Image Admission] Image Admission unScanned action of Detection or Prevention to alert on or block images that have not been scanned.\nOptions: 'Prevention', 'Detection', or null.",
                        "nullable": true
                    }
                }
            },
            "ShiftLeftPolicyRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "targetId",
                    "targetType",
                    "notificationIds",
                    "rulesetId",
                    "id",
                    "id",
                    "targetId",
                    "targetType",
                    "notificationIds",
                    "rulesetId",
                    "externalAccountId",
                    "externalAccountId",
                    "admissionControllerAction",
                    "admissionControllerAction",
                    "admissionControlUnScannedAction",
                    "admissionControlUnScannedAction"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "targetType": {
                        "$ref": "#/components/schemas/ContinuousCompliancePolicyTargetType"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "externalAccountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "admissionControllerAction": {
                        "type": "string",
                        "description": "[Preview feature - Image Admission] Image Admission action to block non-compliant images according to the relevant ruleset.\nOptions: 'Prevention', 'Detection', or null.",
                        "nullable": true
                    },
                    "admissionControlUnScannedAction": {
                        "type": "string",
                        "description": "[Preview feature - Image Admission] Image Admission unScanned action of Detection or Prevention to alert on or block images that have not been scanned.\nOptions: 'Prevention', 'Detection', or null.",
                        "nullable": true
                    }
                }
            },
            "AdmissionControlPolicyViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "targetId",
                    "targetId",
                    "targetType",
                    "targetType",
                    "rulesetId",
                    "rulesetId",
                    "action",
                    "action",
                    "notificationIds",
                    "notificationIds",
                    "errorMessage",
                    "errorMessage"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetType": {
                        "$ref": "#/components/schemas/KubernetesAdmissionControlPolicyType"
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "action": {
                        "$ref": "#/components/schemas/KubernetesRuntimeAssuranceAction"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                }
            },
            "KubernetesAdmissionControlPolicyType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Environment",
                    "OrganizationalUnit"
                ],
                "enum": [
                    "Environment",
                    "OrganizationalUnit"
                ]
            },
            "AdmissionControlPolicyRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "targetId",
                    "targetType",
                    "notificationIds",
                    "action",
                    "rulesetId",
                    "id",
                    "id",
                    "targetId",
                    "targetType",
                    "notificationIds",
                    "action",
                    "rulesetId"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "targetType": {
                        "default": 1,
                        "$ref": "#/components/schemas/KubernetesAdmissionControlPolicyType"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "action": {
                        "$ref": "#/components/schemas/KubernetesRuntimeAssuranceAction"
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "AdmissionControlPoliciesSummaryViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "admissionControlAgentPoliciesSummary",
                    "admissionControlAgentPoliciesSummary",
                    "admissionControlAgentOUPoliciesSummary",
                    "admissionControlAgentOUPoliciesSummary"
                ],
                "properties": {
                    "admissionControlAgentPoliciesSummary": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdmissionControlAgentPolicySummaryViewModel2"
                        }
                    },
                    "admissionControlAgentOUPoliciesSummary": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdmissionControlAgentPolicySummaryViewModel2"
                        }
                    }
                }
            },
            "AdmissionControlAgentPolicySummaryViewModel2": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "action",
                    "action",
                    "rules",
                    "rules",
                    "notifications",
                    "notifications",
                    "exclusions",
                    "exclusions",
                    "policyId",
                    "policyId",
                    "bundleName",
                    "bundleName"
                ],
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuleObject"
                        }
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotificationObject"
                        }
                    },
                    "exclusions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssessmentExclusionEntity"
                        }
                    },
                    "policyId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "bundleName": {
                        "type": "string"
                    }
                }
            },
            "KubernetesAdmissionControlVerifyResult": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "syntaxResults",
                    "syntaxResults",
                    "assesmentResults",
                    "assesmentResults"
                ],
                "properties": {
                    "syntaxResults": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/KubernetesRuntimeAssuranceVerifyResult"
                        }
                    },
                    "assesmentResults": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/MultipleCloudAccountsAssessmentResultViewModelOfAssessmentHistoryMinimizedEntity"
                            }
                        ]
                    }
                }
            },
            "KubernetesRuntimeAssuranceVerifyResult": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rule",
                    "rule",
                    "valid",
                    "valid",
                    "error",
                    "error"
                ],
                "properties": {
                    "rule": {
                        "type": "string",
                        "nullable": true
                    },
                    "valid": {
                        "type": "boolean"
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MultipleCloudAccountsAssessmentResultViewModelOfAssessmentHistoryMinimizedEntity": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "requestId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "results": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/SingleCloudAccountsAssessmentResultViewModelOfAssessmentHistoryMinimizedEntity"
                        }
                    }
                }
            },
            "SingleCloudAccountsAssessmentResultViewModelOfAssessmentHistoryMinimizedEntity": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "cloudAccount": {
                        "description": "cloud account metadata",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssessmentResultCloudAccountMetadataViewModel"
                            }
                        ]
                    },
                    "tests": {
                        "type": "array",
                        "description": "Tests results",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RuleTestResult"
                        }
                    },
                    "testEntities": {
                        "type": "object",
                        "description": "list of the cloud entities that were tested by the bundle ",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AssessmentHistoryMinimizedEntity"
                            }
                        }
                    },
                    "dataSyncStatus": {
                        "type": "array",
                        "description": "data sync status of the entities",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/AssessmentDataSyncStatusEntityViewModel"
                        }
                    },
                    "assessmentPassed": {
                        "type": "boolean",
                        "description": "assessment passed"
                    },
                    "hasTestsErrors": {
                        "type": "boolean",
                        "description": "assessment tests has errors "
                    },
                    "assessmentId": {
                        "type": "string",
                        "description": "assessment id",
                        "format": "guid"
                    },
                    "assessmentError": {
                        "type": "string",
                        "description": "assessment run error",
                        "nullable": true
                    }
                }
            },
            "AssessmentResultCloudAccountMetadataViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "id",
                    "id",
                    "externalId",
                    "externalId"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "externalId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "RuleTestResult": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "error",
                    "error",
                    "testedCount",
                    "testedCount",
                    "relevantCount",
                    "relevantCount",
                    "nonComplyingCount",
                    "nonComplyingCount",
                    "exclusionStats",
                    "exclusionStats",
                    "entityResults",
                    "entityResults",
                    "rule",
                    "rule",
                    "testPassed",
                    "testPassed"
                ],
                "properties": {
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "testedCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "relevantCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nonComplyingCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "exclusionStats": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RuleTestResultStats"
                            }
                        ]
                    },
                    "entityResults": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/ValidationResult"
                        }
                    },
                    "rule": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RuleEntity"
                            }
                        ]
                    },
                    "testPassed": {
                        "type": "boolean"
                    }
                }
            },
            "RuleTestResultStats": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "testedCount",
                    "testedCount",
                    "relevantCount",
                    "relevantCount",
                    "nonComplyingCount",
                    "nonComplyingCount"
                ],
                "properties": {
                    "testedCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "relevantCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nonComplyingCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ValidationResult": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "validationStatus",
                    "validationStatus",
                    "isRelevant",
                    "isRelevant",
                    "isValid",
                    "isValid",
                    "isExcluded",
                    "isExcluded",
                    "exclusionId",
                    "exclusionId",
                    "remediationId",
                    "remediationId",
                    "error",
                    "error",
                    "testObj",
                    "testObj"
                ],
                "properties": {
                    "validationStatus": {
                        "$ref": "#/components/schemas/ValidationStatusResult"
                    },
                    "isRelevant": {
                        "type": "boolean",
                        "description": "means if entity is relevant for this rule\nfor example rule = \"Instance where name like '%db%' should have...\", returns false in instance name = 'scheduler1'"
                    },
                    "isValid": {
                        "type": "boolean",
                        "description": "means if entity is compliant.\nfor example for rule=\"Instance should have vpc\", return true if instance i-123 is under vpc-234, and false if not"
                    },
                    "isExcluded": {
                        "type": "boolean",
                        "description": "means if entity is excluded.\nfor example for rule=\"Instance should have vpc exclude name='test'\", return true if instance name is test, and false if not"
                    },
                    "exclusionId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "remediationId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "error": {
                        "type": "string",
                        "description": "note that the lambda is not aware of this field",
                        "default": "",
                        "nullable": true
                    },
                    "testObj": {
                        "description": "note that the lambda is not aware of this field",
                        "nullable": true
                    }
                }
            },
            "ValidationStatusResult": {
                "type": "string",
                "description": "",
                "x-enumFlags": true,
                "x-enumNames": [
                    "Relevant",
                    "Valid",
                    "Excluded"
                ],
                "enum": [
                    "Relevant",
                    "Valid",
                    "Excluded"
                ]
            },
            "RuleEntity": {
                "type": "object",
                "deprecated": true,
                "x-deprecatedMessage": "This class was duplicated to new Domain (as part of DDD refactoring effort), please refer to the new Project: CGN.Common.Model.RuleEngine.RuleEntity",
                "additionalProperties": false,
                "required": [
                    "rlmId",
                    "rlmId",
                    "name",
                    "name",
                    "severity",
                    "severity",
                    "logic",
                    "logic",
                    "description",
                    "description",
                    "remediation",
                    "remediation",
                    "cloudbots",
                    "cloudbots",
                    "complianceTag",
                    "complianceTag",
                    "domain",
                    "domain",
                    "priority",
                    "priority",
                    "controlTitle",
                    "controlTitle",
                    "ruleId",
                    "ruleId",
                    "category",
                    "category",
                    "labels",
                    "labels",
                    "logicHash",
                    "logicHash",
                    "isDefault",
                    "isDefault"
                ],
                "properties": {
                    "rlmId": {
                        "type": "string",
                        "description": "rlm rule id, do not expose this on API for now",
                        "format": "guid",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "rule name",
                        "default": "",
                        "nullable": true
                    },
                    "severity": {
                        "description": "rule severity (High/Medium/Low)",
                        "default": 1,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RuleSeverity"
                            }
                        ]
                    },
                    "logic": {
                        "type": "string",
                        "description": "the GSL statement for the rule (text string)",
                        "default": "",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "description of the rule (text)",
                        "default": "",
                        "nullable": true
                    },
                    "remediation": {
                        "type": "string",
                        "description": "remediation text for the rule (text)",
                        "default": "",
                        "nullable": true
                    },
                    "cloudbots": {
                        "type": "string",
                        "description": "the Cloudbots section for the rule (optional)",
                        "default": "",
                        "nullable": true
                    },
                    "complianceTag": {
                        "type": "string",
                        "description": "the compliance section for the rule (optional)",
                        "default": "",
                        "nullable": true
                    },
                    "domain": {
                        "type": "string",
                        "description": "this field is not used",
                        "default": "",
                        "nullable": true
                    },
                    "priority": {
                        "type": "string",
                        "description": "this field is not used",
                        "default": "",
                        "nullable": true
                    },
                    "controlTitle": {
                        "type": "string",
                        "description": "this field is not used",
                        "default": "",
                        "nullable": true
                    },
                    "ruleId": {
                        "type": "string",
                        "description": "this field is not used",
                        "default": "",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "description": "Rule Category",
                        "default": "",
                        "nullable": true
                    },
                    "labels": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "logicHash": {
                        "type": "string",
                        "description": "MD5 hash of the rule logic (serves as a unique ID for the rule), returned in response",
                        "default": "1B2M2Y8AsgTpgAmY7PhCfg",
                        "nullable": true
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "The property represents default rule"
                    }
                }
            },
            "AssessmentHistoryMinimizedEntity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AssessmentHistoryMinimizedEntityBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Id",
                            "Id",
                            "name",
                            "name",
                            "category",
                            "category",
                            "region",
                            "region",
                            "vpc",
                            "vpc",
                            "network",
                            "network",
                            "virtualNetwork",
                            "virtualNetwork",
                            "tags",
                            "tags",
                            "accountNumber",
                            "accountNumber",
                            "vendorIdentifier",
                            "vendorIdentifier"
                        ],
                        "properties": {
                            "Id": {
                                "type": "string",
                                "nullable": true
                            },
                            "name": {
                                "type": "string",
                                "nullable": true
                            },
                            "category": {
                                "type": "string",
                                "nullable": true
                            },
                            "region": {
                                "type": "string",
                                "nullable": true
                            },
                            "vpc": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VpcMinimizedEntity"
                                    }
                                ]
                            },
                            "network": {
                                "type": "string",
                                "nullable": true
                            },
                            "virtualNetwork": {
                                "type": "string",
                                "nullable": true
                            },
                            "tags": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/TagRuleEntity"
                                }
                            },
                            "accountNumber": {
                                "type": "string",
                                "nullable": true
                            },
                            "vendorIdentifier": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "VpcMinimizedEntity": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "TagRuleEntity": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "value",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "AssessmentHistoryMinimizedEntityBase": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "type",
                    "type"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "AssessmentDataSyncStatusEntityViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "entityType",
                    "entityType",
                    "recentlySuccessfulSync",
                    "recentlySuccessfulSync",
                    "generalFetchPermissionIssues",
                    "generalFetchPermissionIssues",
                    "entitiesWithPermissionIssues",
                    "entitiesWithPermissionIssues"
                ],
                "properties": {
                    "entityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "recentlySuccessfulSync": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "generalFetchPermissionIssues": {
                        "type": "boolean"
                    },
                    "entitiesWithPermissionIssues": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/EntityWithPermissionIssueViewModel"
                        }
                    }
                }
            },
            "EntityWithPermissionIssueViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "externalId",
                    "externalId",
                    "name",
                    "name",
                    "cloudVendorIdentifier",
                    "cloudVendorIdentifier"
                ],
                "properties": {
                    "externalId": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "cloudVendorIdentifier": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "AdmissionControlVerifyRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "cloudAccountId",
                    "rules",
                    "cloudAccountId",
                    "rules",
                    "gslVersion",
                    "gslVersion"
                ],
                "properties": {
                    "cloudAccountId": {
                        "type": "string",
                        "minLength": 1
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "gslVersion": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "AdmissionControlVerifyResultViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rule",
                    "rule",
                    "valid",
                    "valid",
                    "error",
                    "error"
                ],
                "properties": {
                    "rule": {
                        "type": "string"
                    },
                    "valid": {
                        "type": "boolean"
                    },
                    "error": {
                        "type": "string"
                    }
                }
            },
            "AdmissionControlEvalResultViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "violatedRules",
                    "violatedRules",
                    "result",
                    "result",
                    "error",
                    "error",
                    "object",
                    "object"
                ],
                "properties": {
                    "violatedRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdmissionControlGSLRule"
                        }
                    },
                    "result": {
                        "type": "boolean"
                    },
                    "error": {
                        "type": "string"
                    },
                    "object": {}
                }
            },
            "AdmissionControlGSLRule": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rule",
                    "rule"
                ],
                "properties": {
                    "rule": {
                        "type": "string"
                    }
                }
            },
            "AdmissionControlExclusionPutRequestViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AdmissionControlExclusionPostRequestModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "[Required] Exclusion ID",
                                "format": "guid"
                            }
                        }
                    }
                ]
            },
            "AdmissionControlExclusionPostRequestModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExclusionPostRequestBaseModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "rulesetId",
                            "rulesetId"
                        ],
                        "properties": {
                            "rulesetId": {
                                "type": "integer",
                                "description": "Ruleset ID to apply exclusion on. Use '0' to apply on all rulesets.",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "ExclusionPostRequestBaseModel": {
                "type": "object",
                "x-abstract": true,
                "additionalProperties": false,
                "required": [
                    "rules",
                    "rules",
                    "logicExpressions",
                    "logicExpressions",
                    "severities",
                    "severities",
                    "cloudAccountIds",
                    "cloudAccountIds",
                    "organizationalUnitIds",
                    "organizationalUnitIds",
                    "comment",
                    "comment",
                    "dateRange",
                    "dateRange"
                ],
                "properties": {
                    "rules": {
                        "type": "array",
                        "description": "[Optional] List of rules to apply the exclusion on.",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RuleViewModel"
                        }
                    },
                    "logicExpressions": {
                        "type": "array",
                        "description": "[Optional] The GSL logic expressions of the exclusion.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])|(eventInfo\\.userInfo\\.username like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|('[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' in\\(eventInfo\\.userInfo\\.roles\\))|(namespace like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(rootOwner\\.kind like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and rootOwner\\.name like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(labels contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(labels contain-any [ value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(labels contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])|(annotations contain-any [ key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' ])",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "severities": {
                        "type": "array",
                        "description": "[Optional] List of severities to exclude. Valid values: ['Informational', 'Low', 'Medium', 'High', 'Critical']",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RuleSeverity"
                        }
                    },
                    "cloudAccountIds": {
                        "type": "array",
                        "description": "[Optional] List of cloud account IDs to apply exclusion on.\nIf neither cloud account IDs nor organizational unit IDs are supplied, exclusion will apply on all cloud accounts.\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "organizationalUnitIds": {
                        "type": "array",
                        "description": "[Optional] List of organizational unit IDs to apply exclusion on.\nIf neither organizational unit IDs nor cloud account IDs are supplied, exclusion will apply on all cloud accounts.\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment text (free text)",
                        "nullable": true
                    },
                    "dateRange": {
                        "description": "[Optional] Date range for the exclusion to take effect.\nThe exclusion will take effect permanently unless a specific date range is specified.\nLeaving 'From' null will take only 'To' into account.\nLeaving 'To' null will take only 'From' into account.\nDateRange with both 'From' and 'To' null will be disregarded.",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeRange"
                            }
                        ]
                    }
                }
            },
            "RuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "logic",
                    "name",
                    "severity",
                    "severity",
                    "rlmId",
                    "rlmId",
                    "logic",
                    "description",
                    "description",
                    "remediation",
                    "remediation",
                    "cloudbots",
                    "cloudbots",
                    "complianceTag",
                    "complianceTag",
                    "domain",
                    "domain",
                    "priority",
                    "priority",
                    "controlTitle",
                    "controlTitle",
                    "ruleId",
                    "ruleId",
                    "category",
                    "category",
                    "labels",
                    "labels",
                    "logicHash",
                    "logicHash",
                    "isDefault",
                    "isDefault"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "rule name",
                        "default": "",
                        "minLength": 1
                    },
                    "severity": {
                        "description": "rule severity (High/Medium/Low)",
                        "default": 1,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RuleSeverity"
                            }
                        ]
                    },
                    "rlmId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "logic": {
                        "type": "string",
                        "description": "the GSL statement for the rule (text string)",
                        "default": "",
                        "minLength": 1
                    },
                    "description": {
                        "type": "string",
                        "description": "description of the rule (text)",
                        "default": "",
                        "nullable": true
                    },
                    "remediation": {
                        "type": "string",
                        "description": "remediation text for the rule (text)",
                        "default": "",
                        "nullable": true
                    },
                    "cloudbots": {
                        "type": "string",
                        "description": "the Cloudbots section for the rule (optional)",
                        "default": "",
                        "nullable": true
                    },
                    "complianceTag": {
                        "type": "string",
                        "description": "the compliance section for the rule (optional)",
                        "default": "",
                        "nullable": true
                    },
                    "domain": {
                        "type": "string",
                        "description": "this field is not used",
                        "default": "",
                        "nullable": true
                    },
                    "priority": {
                        "type": "string",
                        "description": "this field is not used",
                        "default": "",
                        "nullable": true
                    },
                    "controlTitle": {
                        "type": "string",
                        "description": "this field is not used",
                        "default": "",
                        "nullable": true
                    },
                    "ruleId": {
                        "type": "string",
                        "description": "this field is not used",
                        "default": "",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "description": "Rule Category",
                        "default": "",
                        "nullable": true
                    },
                    "labels": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "logicHash": {
                        "type": "string",
                        "description": "MD5 hash of the rule logic (serves as a unique ID for the rule), returned in response",
                        "nullable": true
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "The property represents default rule"
                    }
                }
            },
            "KubernetesImageAdmissionExclusionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rulesetId",
                    "rulesetId",
                    "exclusions",
                    "exclusions"
                ],
                "properties": {
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "exclusions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageAdmissionExclusionModel"
                        }
                    }
                }
            },
            "ImageAdmissionExclusionModel": {
                "type": "object",
                "description": "Use exclusions to bypass specific registries, specific images, usernames, roles, groups, or namespaces; Use \"%\" as a wildcard.",
                "additionalProperties": false,
                "required": [
                    "imageNameExclusion",
                    "imageNameExclusion",
                    "usernameExclusion",
                    "usernameExclusion",
                    "roleExclusion",
                    "roleExclusion",
                    "namespaceExclusion",
                    "namespaceExclusion",
                    "groupExclusion",
                    "groupExclusion"
                ],
                "properties": {
                    "imageNameExclusion": {
                        "type": "string"
                    },
                    "usernameExclusion": {
                        "type": "string"
                    },
                    "roleExclusion": {
                        "type": "string"
                    },
                    "namespaceExclusion": {
                        "type": "string"
                    },
                    "groupExclusion": {
                        "type": "string"
                    }
                }
            },
            "VulnerabilitesDashboardViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "items",
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilitesDashboardViewItem"
                        }
                    }
                }
            },
            "VulnerabilitesDashboardViewItem": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "severityOrder",
                    "severityOrder",
                    "severity",
                    "severity",
                    "total",
                    "total",
                    "fixable",
                    "fixable"
                ],
                "properties": {
                    "severityOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "fixable": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "VulnerabilitesDashboardReq": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "organizationUnits",
                    "organizationUnits",
                    "platforms",
                    "platforms",
                    "environments",
                    "environments",
                    "minDate",
                    "minDate",
                    "maxDate",
                    "maxDate"
                ],
                "properties": {
                    "organizationUnits": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "platforms": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "minDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "maxDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "CveReportResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "version",
                    "version",
                    "vulnerabilityReportItems",
                    "vulnerabilityReportItems",
                    "environments",
                    "environments"
                ],
                "properties": {
                    "version": {
                        "type": "string",
                        "default": "0.1"
                    },
                    "vulnerabilityReportItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityScanResultWithPodGroups"
                        }
                    },
                    "environments": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "VulnerabilityScanResultWithPodGroups": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/VulnerabilityScanResult"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "imageId",
                            "imageId",
                            "sha256",
                            "sha256",
                            "affectedKubernetesPodGroups",
                            "affectedKubernetesPodGroups",
                            "affectedImages",
                            "affectedImages",
                            "imageAdded",
                            "imageAdded"
                        ],
                        "properties": {
                            "imageId": {
                                "type": "string"
                            },
                            "sha256": {
                                "type": "string"
                            },
                            "affectedKubernetesPodGroups": {
                                "type": "array",
                                "default": [],
                                "items": {
                                    "$ref": "#/components/schemas/KubernetesImageWorkload"
                                }
                            },
                            "affectedImages": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AffectedImage"
                                }
                            },
                            "imageAdded": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "KubernetesImageWorkload": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "Id",
                    "Id",
                    "name",
                    "name",
                    "namespace",
                    "namespace",
                    "environmentId",
                    "environmentId",
                    "labels",
                    "labels",
                    "annotations",
                    "annotations",
                    "createdAt",
                    "createdAt",
                    "desiredPodsNumber",
                    "desiredPodsNumber",
                    "readyPodsNumber",
                    "readyPodsNumber",
                    "kind",
                    "kind",
                    "nodeName",
                    "nodeName",
                    "containersNames",
                    "containersNames"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "desiredPodsNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "readyPodsNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "nodeName": {
                        "type": "string"
                    },
                    "containersNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AffectedImage": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Id",
                    "Id",
                    "environmentId",
                    "environmentId",
                    "entityType",
                    "entityType"
                ],
                "properties": {
                    "Id": {
                        "type": "string"
                    },
                    "environmentId": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    }
                }
            },
            "VulnerabilityScanResult": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "entityDetails",
                    "timestamp",
                    "vulnerabilityScanFindings",
                    "vulnerablePackages",
                    "entityDetails",
                    "riskScore",
                    "riskScore",
                    "timestamp",
                    "vulnerabilityScanFindings",
                    "vulnerablePackages",
                    "remediationSummary",
                    "remediationSummary",
                    "vulnerabilityStats",
                    "vulnerabilityStats",
                    "scanEngineVersion",
                    "scanEngineVersion"
                ],
                "properties": {
                    "entityDetails": {
                        "$ref": "#/components/schemas/EntityDetails"
                    },
                    "riskScore": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "vulnerabilityScanFindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityScanFinding"
                        }
                    },
                    "vulnerablePackages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerablePackage"
                        }
                    },
                    "remediationSummary": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RemediationSummaryEntry"
                        }
                    },
                    "vulnerabilityStats": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VulnerabilityStats"
                            }
                        ]
                    },
                    "scanEngineVersion": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EntityDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "name",
                    "type",
                    "id",
                    "name",
                    "type",
                    "size",
                    "size",
                    "hash",
                    "hash",
                    "imageDetails",
                    "imageDetails"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "hash": {
                        "type": "string",
                        "nullable": true
                    },
                    "imageDetails": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ImageDetails"
                            }
                        ]
                    }
                }
            },
            "ImageDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "repoUrl",
                    "repoUrl",
                    "repoTag",
                    "repoTag"
                ],
                "properties": {
                    "repoUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "repoTag": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "VulnerabilityScanFinding": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "name",
                    "severity",
                    "type",
                    "id",
                    "name",
                    "description",
                    "description",
                    "severity",
                    "type",
                    "cveDetails",
                    "cveDetails",
                    "threatDetails",
                    "threatDetails",
                    "secretDetails",
                    "secretDetails",
                    "remediation",
                    "remediation",
                    "firstObservedAt",
                    "firstObservedAt",
                    "lastObservedAt",
                    "lastObservedAt",
                    "updatedAt",
                    "updatedAt"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "cveDetails": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CveDetails"
                            }
                        ]
                    },
                    "threatDetails": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ThreatDetails"
                            }
                        ]
                    },
                    "secretDetails": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SecretDetails"
                            }
                        ]
                    },
                    "remediation": {
                        "$ref": "#/components/schemas/Remediation"
                    },
                    "firstObservedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastObservedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "CveDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "packageIds",
                    "id",
                    "source",
                    "source",
                    "cvssInfo",
                    "cvssInfo",
                    "publishDate",
                    "publishDate",
                    "lastModified",
                    "lastModified",
                    "packageIds",
                    "relatedIds",
                    "relatedIds"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "cvssInfo": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CvssInfo"
                            }
                        ]
                    },
                    "publishDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "packageIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "relatedIds": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CvssInfo": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "baseScore",
                    "baseScoreVector",
                    "baseScore",
                    "baseScoreVector",
                    "version",
                    "version",
                    "source",
                    "source",
                    "impactScore",
                    "impactScore",
                    "exploitabilityScore",
                    "exploitabilityScore"
                ],
                "properties": {
                    "baseScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "baseScoreVector": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "impactScore": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "exploitabilityScore": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    }
                }
            },
            "ThreatDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "files",
                    "type",
                    "classification",
                    "classification",
                    "files"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "classification": {
                        "type": "string",
                        "nullable": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FindingFile"
                        }
                    }
                }
            },
            "FindingFile": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "filePath",
                    "filePath",
                    "hash",
                    "hash",
                    "contents",
                    "contents"
                ],
                "properties": {
                    "filePath": {
                        "type": "string"
                    },
                    "hash": {
                        "type": "string"
                    },
                    "contents": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/FindingFileContent"
                        }
                    }
                }
            },
            "FindingFileContent": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "payload",
                    "payload",
                    "hash",
                    "hash",
                    "lines",
                    "lines"
                ],
                "properties": {
                    "payload": {
                        "type": "string"
                    },
                    "hash": {
                        "type": "string"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "SecretDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "files",
                    "files"
                ],
                "properties": {
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FindingFile"
                        }
                    }
                }
            },
            "Remediation": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "recommendation",
                    "recommendation"
                ],
                "properties": {
                    "recommendation": {
                        "type": "string"
                    }
                }
            },
            "VulnerablePackage": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "name",
                    "severity",
                    "cves",
                    "id",
                    "name",
                    "version",
                    "version",
                    "severity",
                    "os",
                    "os",
                    "filePath",
                    "filePath",
                    "isOsPackage",
                    "isOsPackage",
                    "packageManager",
                    "packageManager",
                    "cves",
                    "remediation",
                    "remediation",
                    "parents",
                    "parents"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "severity": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string",
                        "nullable": true
                    },
                    "filePath": {
                        "type": "string",
                        "nullable": true
                    },
                    "isOsPackage": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "packageManager": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PackageManager"
                            }
                        ]
                    },
                    "cves": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PackageCve"
                        }
                    },
                    "remediation": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Remediation"
                            }
                        ]
                    },
                    "parents": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PackageParent"
                        }
                    }
                }
            },
            "PackageManager": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "filePath",
                    "filePath"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "filePath": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PackageCve": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "cveId",
                    "cveId",
                    "remediation",
                    "remediation",
                    "isFixedByPackageRemediation",
                    "isFixedByPackageRemediation",
                    "source",
                    "source",
                    "cvssInfo",
                    "cvssInfo",
                    "description",
                    "description",
                    "severity",
                    "severity",
                    "relatedIds",
                    "relatedIds"
                ],
                "properties": {
                    "cveId": {
                        "type": "string"
                    },
                    "remediation": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Remediation"
                            }
                        ]
                    },
                    "isFixedByPackageRemediation": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "source": {
                        "type": "string"
                    },
                    "cvssInfo": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CvssInfo"
                            }
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "relatedIds": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PackageParent": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "version",
                    "version",
                    "line",
                    "line"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "line": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "RemediationSummaryEntry": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "finding",
                    "remediation",
                    "type",
                    "filePath",
                    "filePath",
                    "finding",
                    "severity",
                    "severity",
                    "remediation",
                    "lines",
                    "lines"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "filePath": {
                        "type": "string",
                        "nullable": true
                    },
                    "finding": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true
                    },
                    "remediation": {
                        "$ref": "#/components/schemas/Remediation"
                    },
                    "lines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "VulnerabilityStats": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "cve",
                    "cve",
                    "cveFixable",
                    "cveFixable",
                    "threat",
                    "threat",
                    "secret",
                    "secret"
                ],
                "properties": {
                    "cve": {
                        "default": {
                            "All": 0,
                            "Critical": 0,
                            "High": 0,
                            "Medium": 0,
                            "Low": 0,
                            "Informational": 0,
                            "Unknown": 0
                        },
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VulnerabilitySeverityStats"
                            }
                        ]
                    },
                    "cveFixable": {
                        "default": {
                            "All": 0,
                            "Critical": 0,
                            "High": 0,
                            "Medium": 0,
                            "Low": 0,
                            "Informational": 0,
                            "Unknown": 0
                        },
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VulnerabilitySeverityStats"
                            }
                        ]
                    },
                    "threat": {
                        "default": {
                            "All": 0,
                            "Critical": 0,
                            "High": 0,
                            "Medium": 0,
                            "Low": 0,
                            "Informational": 0,
                            "Unknown": 0
                        },
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VulnerabilitySeverityStats"
                            }
                        ]
                    },
                    "secret": {
                        "default": {
                            "All": 0,
                            "Critical": 0,
                            "High": 0,
                            "Medium": 0,
                            "Low": 0,
                            "Informational": 0,
                            "Unknown": 0
                        },
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VulnerabilitySeverityStats"
                            }
                        ]
                    }
                }
            },
            "VulnerabilitySeverityStats": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "all",
                    "all",
                    "critical",
                    "critical",
                    "high",
                    "high",
                    "medium",
                    "medium",
                    "low",
                    "low",
                    "informational",
                    "informational",
                    "unknown",
                    "unknown"
                ],
                "properties": {
                    "all": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "critical": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "high": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "medium": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "low": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "informational": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unknown": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CveGenerateReportRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "environmentIds",
                    "environmentIds",
                    "bundleId",
                    "bundleId"
                ],
                "properties": {
                    "environmentIds": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "bundleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                }
            },
            "AlertsCiemFindingsResponseModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "meta",
                    "meta",
                    "data",
                    "data"
                ],
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/AlertsCiemFindingsCountModel"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlertsGslResponse"
                        }
                    }
                }
            },
            "AlertsCiemFindingsCountModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "selfUriPageIndex",
                    "selfUriPageIndex",
                    "nextUriPageIndex",
                    "nextUriPageIndex",
                    "lastUriPageIndex",
                    "lastUriPageIndex",
                    "total_count",
                    "total_count"
                ],
                "properties": {
                    "selfUriPageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nextUriPageIndex": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "lastUriPageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "AlertsGslResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "general",
                    "general",
                    "finding",
                    "finding",
                    "account",
                    "account",
                    "bundle",
                    "bundle",
                    "env",
                    "env",
                    "assessment",
                    "assessment",
                    "rule",
                    "rule",
                    "entity",
                    "entity",
                    "excluded",
                    "excluded"
                ],
                "properties": {
                    "general": {
                        "$ref": "#/components/schemas/AlertsGeneralModel"
                    },
                    "finding": {
                        "$ref": "#/components/schemas/AlertsFindingModel"
                    },
                    "account": {
                        "$ref": "#/components/schemas/AlertsAccountModel"
                    },
                    "bundle": {
                        "$ref": "#/components/schemas/AlertsBundleModel"
                    },
                    "env": {
                        "$ref": "#/components/schemas/AlertsEnvModel"
                    },
                    "assessment": {
                        "$ref": "#/components/schemas/AlertsAssessmentModel"
                    },
                    "rule": {
                        "$ref": "#/components/schemas/AlertsRuleModel"
                    },
                    "entity": {
                        "$ref": "#/components/schemas/AlertsEntityModel"
                    },
                    "excluded": {
                        "type": "boolean"
                    }
                }
            },
            "AlertsGeneralModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "origin",
                    "origin",
                    "lastUpdated",
                    "lastUpdated",
                    "firstSeen",
                    "firstSeen",
                    "originName",
                    "originName",
                    "labels",
                    "labels"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "origin": {
                        "type": "string"
                    },
                    "lastUpdated": {
                        "type": "string"
                    },
                    "firstSeen": {
                        "type": "string"
                    },
                    "originName": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "string"
                    }
                }
            },
            "AlertsFindingModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "status",
                    "status",
                    "statusReason",
                    "statusReason",
                    "statusReasonName",
                    "statusReasonName",
                    "statusName",
                    "statusName"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusReason": {
                        "type": "string"
                    },
                    "statusReasonName": {
                        "type": "string"
                    },
                    "statusName": {
                        "type": "string"
                    }
                }
            },
            "AlertsAccountModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "AlertsBundleModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "AlertsEnvModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "cloudAccountName",
                    "cloudAccountName",
                    "cloudAccountId",
                    "cloudAccountId",
                    "cloudAccountVendorName",
                    "cloudAccountVendorName",
                    "organizationalUnitId",
                    "organizationalUnitId",
                    "externalAccountId",
                    "externalAccountId",
                    "cloudAccountType",
                    "cloudAccountType"
                ],
                "properties": {
                    "cloudAccountName": {
                        "type": "string"
                    },
                    "cloudAccountId": {
                        "type": "string"
                    },
                    "cloudAccountVendorName": {
                        "type": "string"
                    },
                    "organizationalUnitId": {
                        "type": "string"
                    },
                    "externalAccountId": {
                        "type": "string"
                    },
                    "cloudAccountType": {
                        "type": "string"
                    }
                }
            },
            "AlertsAssessmentModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "runTime",
                    "runTime",
                    "historyId",
                    "historyId"
                ],
                "properties": {
                    "runTime": {
                        "type": "string"
                    },
                    "historyId": {
                        "type": "string"
                    }
                }
            },
            "AlertsRuleModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "logicHash",
                    "logicHash",
                    "description",
                    "description",
                    "remediation",
                    "remediation",
                    "severity",
                    "severity",
                    "severityName",
                    "severityName",
                    "action",
                    "action"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "logicHash": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "remediation": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "severityName": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    }
                }
            },
            "AlertsEntityModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type",
                    "name",
                    "name",
                    "region",
                    "region",
                    "Id",
                    "Id"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    }
                }
            },
            "AlertsCiemFindingsInputModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "pageIndex",
                    "pageIndex",
                    "pageSize",
                    "pageSize"
                ],
                "properties": {
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "HttpStatusCode": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Continue",
                    "SwitchingProtocols",
                    "Processing",
                    "EarlyHints",
                    "OK",
                    "Created",
                    "Accepted",
                    "NonAuthoritativeInformation",
                    "NoContent",
                    "ResetContent",
                    "PartialContent",
                    "MultiStatus",
                    "AlreadyReported",
                    "IMUsed",
                    "MultipleChoices",
                    "Ambiguous",
                    "MovedPermanently",
                    "Moved",
                    "Found",
                    "Redirect",
                    "SeeOther",
                    "RedirectMethod",
                    "NotModified",
                    "UseProxy",
                    "Unused",
                    "TemporaryRedirect",
                    "RedirectKeepVerb",
                    "PermanentRedirect",
                    "BadRequest",
                    "Unauthorized",
                    "PaymentRequired",
                    "Forbidden",
                    "NotFound",
                    "MethodNotAllowed",
                    "NotAcceptable",
                    "ProxyAuthenticationRequired",
                    "RequestTimeout",
                    "Conflict",
                    "Gone",
                    "LengthRequired",
                    "PreconditionFailed",
                    "RequestEntityTooLarge",
                    "RequestUriTooLong",
                    "UnsupportedMediaType",
                    "RequestedRangeNotSatisfiable",
                    "ExpectationFailed",
                    "MisdirectedRequest",
                    "UnprocessableEntity",
                    "Locked",
                    "FailedDependency",
                    "UpgradeRequired",
                    "PreconditionRequired",
                    "TooManyRequests",
                    "RequestHeaderFieldsTooLarge",
                    "UnavailableForLegalReasons",
                    "InternalServerError",
                    "NotImplemented",
                    "BadGateway",
                    "ServiceUnavailable",
                    "GatewayTimeout",
                    "HttpVersionNotSupported",
                    "VariantAlsoNegotiates",
                    "InsufficientStorage",
                    "LoopDetected",
                    "NotExtended",
                    "NetworkAuthenticationRequired"
                ],
                "enum": [
                    "Continue",
                    "SwitchingProtocols",
                    "Processing",
                    "EarlyHints",
                    "OK",
                    "Created",
                    "Accepted",
                    "NonAuthoritativeInformation",
                    "NoContent",
                    "ResetContent",
                    "PartialContent",
                    "MultiStatus",
                    "AlreadyReported",
                    "IMUsed",
                    "Ambiguous",
                    "Ambiguous",
                    "Moved",
                    "Moved",
                    "Redirect",
                    "Redirect",
                    "RedirectMethod",
                    "RedirectMethod",
                    "NotModified",
                    "UseProxy",
                    "Unused",
                    "TemporaryRedirect",
                    "TemporaryRedirect",
                    "PermanentRedirect",
                    "BadRequest",
                    "Unauthorized",
                    "PaymentRequired",
                    "Forbidden",
                    "NotFound",
                    "MethodNotAllowed",
                    "NotAcceptable",
                    "ProxyAuthenticationRequired",
                    "RequestTimeout",
                    "Conflict",
                    "Gone",
                    "LengthRequired",
                    "PreconditionFailed",
                    "RequestEntityTooLarge",
                    "RequestUriTooLong",
                    "UnsupportedMediaType",
                    "RequestedRangeNotSatisfiable",
                    "ExpectationFailed",
                    "MisdirectedRequest",
                    "UnprocessableEntity",
                    "Locked",
                    "FailedDependency",
                    "UpgradeRequired",
                    "PreconditionRequired",
                    "TooManyRequests",
                    "RequestHeaderFieldsTooLarge",
                    "UnavailableForLegalReasons",
                    "InternalServerError",
                    "NotImplemented",
                    "BadGateway",
                    "ServiceUnavailable",
                    "GatewayTimeout",
                    "HttpVersionNotSupported",
                    "VariantAlsoNegotiates",
                    "InsufficientStorage",
                    "LoopDetected",
                    "NotExtended",
                    "NetworkAuthenticationRequired"
                ]
            },
            "MagellanAzureProvideAzureDetailsRequestOfAzureAccountActivityStorageDetailsApi": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AzureOnboardingAccountsDetails"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "storages": {
                                "type": "array",
                                "description": "List of Storage Accounts to be onboarded to Intelligence",
                                "items": {
                                    "$ref": "#/components/schemas/AzureAccountActivityStorageDetailsApi"
                                }
                            }
                        }
                    }
                ]
            },
            "AzureAccountActivityStorageDetailsApi": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "storageKey",
                    "storageKey",
                    "storageName",
                    "storageName",
                    "resourceGroup",
                    "resourceGroup",
                    "logTypes",
                    "logTypes",
                    "isAutoDiscoveryEnabled",
                    "isAutoDiscoveryEnabled"
                ],
                "properties": {
                    "storageKey": {
                        "type": "string",
                        "description": "leave empty (CloudGuard uses your app registration, and this field is not required.) ",
                        "nullable": true
                    },
                    "storageName": {
                        "type": "string",
                        "description": "Storage Account Name"
                    },
                    "resourceGroup": {
                        "type": "string",
                        "description": "resource group of the storage account"
                    },
                    "logTypes": {
                        "type": "array",
                        "description": "List of log types to be onboarded to Intelligence Account Activity",
                        "items": {
                            "$ref": "#/components/schemas/CdrAzureActivityLogTypeEnum"
                        }
                    },
                    "isAutoDiscoveryEnabled": {
                        "type": "boolean",
                        "description": "used for the centralized storage. If you want to onboard and monitor all the \"child\" subscriptions that send data to the storage account, set the value to true. "
                    }
                }
            },
            "CdrAzureActivityLogTypeEnum": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "ActivityLogs",
                    "SignIns",
                    "AuditLogs",
                    "StorageAccounts"
                ],
                "enum": [
                    "ActivityLogs",
                    "SignIns",
                    "AuditLogs",
                    "StorageAccounts"
                ]
            },
            "AzureOnboardingAccountsDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "reportingSubscriptions",
                    "reportingSubscriptions",
                    "accountId",
                    "accountId",
                    "subscriptionId",
                    "subscriptionId"
                ],
                "properties": {
                    "reportingSubscriptions": {
                        "type": "array",
                        "description": "[Optional] a property used in case of a centralized storage account, to onboard additional subscriptions that store logs in the storage. Specify such subscriptions in a list or just leave it empty if there are none.\n            ",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "accountId": {
                        "type": "integer",
                        "description": "CloudGuard account ID is located in the CloudGuard portal on the SETTINGS > ACCOUNT > ACCOUNT INFO page under PLAN DETAILS > Account ID. ",
                        "format": "int64",
                        "nullable": true
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "the Azure subscription that stores the centralized storage account."
                    }
                }
            },
            "MagellanAzureProvideAzureDetailsRequestOfAzureNetworkTrafficCentralizedStorageDetails": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AzureOnboardingAccountsDetails"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "storages": {
                                "type": "array",
                                "description": "List of Storage Accounts to be onboarded to Intelligence",
                                "items": {
                                    "$ref": "#/components/schemas/AzureNetworkTrafficCentralizedStorageDetails"
                                }
                            }
                        }
                    }
                ]
            },
            "AzureNetworkTrafficCentralizedStorageDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "storageName",
                    "storageName",
                    "isAutoDiscoveryEnabled",
                    "isAutoDiscoveryEnabled"
                ],
                "properties": {
                    "storageName": {
                        "type": "string",
                        "description": "[Required] Storage Account Name"
                    },
                    "isAutoDiscoveryEnabled": {
                        "type": "boolean",
                        "description": "[Optional] If Auto-Discovery is enabled, CloudGuard automatically onboards to Intelligence all environments sending logs to this storage. The default value is false."
                    }
                }
            },
            "AzureReportingSubscriptionsResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "reportingSubscriptionsPerStorage",
                    "reportingSubscriptionsPerStorage",
                    "reportingSubscriptionsListCompleted",
                    "reportingSubscriptionsListCompleted"
                ],
                "properties": {
                    "reportingSubscriptionsPerStorage": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "reportingSubscriptionsListCompleted": {
                        "type": "boolean"
                    }
                }
            },
            "AzureReportingSubscriptionsRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "subscriptionId",
                    "subscriptionId",
                    "storages",
                    "storages"
                ],
                "properties": {
                    "subscriptionId": {
                        "type": "string",
                        "description": "[Required] Azure Subscription ID of the Storage Accounts"
                    },
                    "storages": {
                        "type": "array",
                        "description": "[Required] List of Storage Accounts",
                        "items": {
                            "$ref": "#/components/schemas/AzureReportingSubscriptionsStorageDetails"
                        }
                    }
                }
            },
            "AzureReportingSubscriptionsStorageDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "storageName",
                    "storageName",
                    "logsType",
                    "logsType"
                ],
                "properties": {
                    "storageName": {
                        "type": "string",
                        "description": "[Required] Storage Account Name"
                    },
                    "logsType": {
                        "description": "[Required] List of log types",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CdrAzureLogTypeEnum"
                            }
                        ]
                    }
                }
            },
            "CdrAzureLogTypeEnum": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "FlowLogs",
                    "ActivityLogs",
                    "SignIns",
                    "AuditLogs",
                    "StorageAccounts"
                ],
                "enum": [
                    "FlowLogs",
                    "ActivityLogs",
                    "SignIns",
                    "AuditLogs",
                    "StorageAccounts"
                ]
            },
            "ArmApiResponseDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "arm",
                    "arm",
                    "warnings",
                    "warnings"
                ],
                "properties": {
                    "arm": {
                        "type": "string"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArmApiWarning"
                        }
                    }
                }
            },
            "ArmApiWarning": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "warning",
                    "warning",
                    "storagesNames",
                    "storagesNames"
                ],
                "properties": {
                    "warning": {
                        "type": "string"
                    },
                    "storagesNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CentralizedNetworkTrafficArmApiRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "subscriptionId",
                    "subscriptionId",
                    "storagesNames",
                    "storagesNames",
                    "returnJsonUrl",
                    "returnJsonUrl"
                ],
                "properties": {
                    "subscriptionId": {
                        "type": "string",
                        "description": "Azure Subscription ID of the Storage Accounts"
                    },
                    "storagesNames": {
                        "type": "array",
                        "description": "List of storages to be onboarded to Intelligence Network Traffic",
                        "items": {
                            "type": "string"
                        }
                    },
                    "returnJsonUrl": {
                        "type": "boolean",
                        "description": "Indicates if to return json or full ARM template URL. Deault value is true, so the API will return a json URL.",
                        "default": true
                    }
                }
            },
            "AccountActivityArmApiRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "subscriptionId",
                    "subscriptionId",
                    "storagesDetails",
                    "storagesDetails",
                    "returnJsonUrl",
                    "returnJsonUrl"
                ],
                "properties": {
                    "subscriptionId": {
                        "type": "string",
                        "description": "Azure Subscription ID of the Storage Accounts"
                    },
                    "storagesDetails": {
                        "type": "array",
                        "description": "List of storages to be onboarded to Intelligence Account Activity",
                        "items": {
                            "$ref": "#/components/schemas/AccountActivityStorageDetails"
                        }
                    },
                    "returnJsonUrl": {
                        "type": "boolean",
                        "description": "Indicates whether to return json or full ARM template URL. The deault value is true, meaning the API will return a json URL.",
                        "default": true
                    }
                }
            },
            "AccountActivityStorageDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "logTypes",
                    "logTypes",
                    "storageName",
                    "storageName"
                ],
                "properties": {
                    "logTypes": {
                        "type": "array",
                        "description": "[Required] List of log types to be onboarded to Intelligence Account Activity",
                        "items": {
                            "$ref": "#/components/schemas/CdrAzureActivityLogTypeEnum"
                        }
                    },
                    "storageName": {
                        "type": "string",
                        "description": "[Required] Storage Account Name"
                    }
                }
            },
            "AzureCheckOnboardingConfigurationStorageStatusResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "storageAccountName",
                    "storageAccountName",
                    "systemTopicConfiguredProperly",
                    "systemTopicConfiguredProperly",
                    "logTypesMissingEventSubscriptions",
                    "logTypesMissingEventSubscriptions",
                    "missingStorageRoleAssignmentId",
                    "missingStorageRoleAssignmentId",
                    "missingEventGridRoleAssignmentId",
                    "missingEventGridRoleAssignmentId",
                    "isCompleted",
                    "isCompleted"
                ],
                "properties": {
                    "storageAccountName": {
                        "type": "string"
                    },
                    "systemTopicConfiguredProperly": {
                        "type": "boolean"
                    },
                    "logTypesMissingEventSubscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CdrAzureLogTypeEnum"
                        }
                    },
                    "missingStorageRoleAssignmentId": {
                        "type": "string"
                    },
                    "missingEventGridRoleAssignmentId": {
                        "type": "string"
                    },
                    "isCompleted": {
                        "type": "boolean"
                    }
                }
            },
            "AzureCheckOnboardingConfigurationStatusRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "storageAccountsForSubscriptions",
                    "storageAccountsForSubscriptions",
                    "stopOnFirstIncompleteConfiguration",
                    "stopOnFirstIncompleteConfiguration"
                ],
                "properties": {
                    "storageAccountsForSubscriptions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AzureCheckOnboardingConfigurationStatusStorageRequest"
                            }
                        }
                    },
                    "stopOnFirstIncompleteConfiguration": {
                        "type": "boolean",
                        "default": true
                    }
                }
            },
            "AzureCheckOnboardingConfigurationStatusStorageRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "storageAccountName",
                    "storageAccountName",
                    "storageAccountResourceGroup",
                    "storageAccountResourceGroup",
                    "logTypes",
                    "logTypes",
                    "storageRoleAssignmentId",
                    "storageRoleAssignmentId",
                    "eventGridRoleAssignmentId",
                    "eventGridRoleAssignmentId"
                ],
                "properties": {
                    "storageAccountName": {
                        "type": "string"
                    },
                    "storageAccountResourceGroup": {
                        "type": "string"
                    },
                    "logTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CdrAzureLogTypeEnum"
                        }
                    },
                    "storageRoleAssignmentId": {
                        "type": "string",
                        "default": ""
                    },
                    "eventGridRoleAssignmentId": {
                        "type": "string",
                        "default": ""
                    }
                }
            },
            "AzureDiscoverStorage": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "resourceGroupName",
                    "resourceGroupName",
                    "region",
                    "region",
                    "systemTopicName",
                    "systemTopicName",
                    "logTypesFound",
                    "logTypesFound"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "resourceGroupName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "systemTopicName": {
                        "type": "string"
                    },
                    "logTypesFound": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureDiscoverStorageLogType"
                        }
                    }
                }
            },
            "AzureDiscoverStorageLogType": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "logType",
                    "logType",
                    "containerName",
                    "containerName",
                    "eventSubscriptionNames",
                    "eventSubscriptionNames"
                ],
                "properties": {
                    "logType": {
                        "$ref": "#/components/schemas/CdrAzureLogTypeEnum"
                    },
                    "containerName": {
                        "type": "string",
                        "default": "insights-logs-networksecuritygroupflowevent"
                    },
                    "eventSubscriptionNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AzureDiscoverStoragesRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "subscriptionId",
                    "logTypes",
                    "subscriptionId",
                    "logTypes"
                ],
                "properties": {
                    "subscriptionId": {
                        "type": "string",
                        "description": "[Required] Azure Subscription ID",
                        "minLength": 1
                    },
                    "logTypes": {
                        "type": "array",
                        "description": "[Required] Azure Log Types (Supported By Intelligence) TO Search For",
                        "items": {
                            "$ref": "#/components/schemas/CdrAzureLogTypeEnum"
                        }
                    }
                }
            },
            "AzureCheckStorageNetworkFirewallResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AzureCheckStorageNetworkFirewallRequest"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "storageNotFound",
                            "storageNotFound"
                        ],
                        "properties": {
                            "storageNotFound": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "AzureCheckStorageNetworkFirewallRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "storageAccountName",
                    "resourceGroup",
                    "subscriptionId",
                    "storageAccountName",
                    "resourceGroup",
                    "subscriptionId"
                ],
                "properties": {
                    "storageAccountName": {
                        "type": "string",
                        "minLength": 1
                    },
                    "resourceGroup": {
                        "type": "string",
                        "minLength": 1
                    },
                    "subscriptionId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    }
                }
            },
            "AzureEventHubsOnboardingRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "subscriptionId",
                    "eventHubs",
                    "reportingSubscriptions",
                    "reportingSubscriptions",
                    "accountId",
                    "accountId",
                    "subscriptionId",
                    "eventHubs"
                ],
                "properties": {
                    "reportingSubscriptions": {
                        "type": "array",
                        "description": "[Optional] List of Azure subscriptions that send logs to the given Event Hub and should be onboarded to Intelligence",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "accountId": {
                        "type": "integer",
                        "description": "[Optional] User CG Account Id (used for auto discovery)",
                        "format": "int64",
                        "nullable": true
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "[Required] Azure Subscription ID of the Storage Accounts",
                        "format": "guid",
                        "minLength": 1
                    },
                    "eventHubs": {
                        "type": "array",
                        "description": "[Required] List of Azure Even Hubs to be onboarded to Intelligence",
                        "items": {
                            "$ref": "#/components/schemas/AzureEventHubOnboardingRequest"
                        }
                    }
                }
            },
            "AzureEventHubOnboardingRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "eventHubNamespace",
                    "eventHubName",
                    "checkpointStorageAccountName",
                    "eventHubNamespace",
                    "eventHubName",
                    "checkpointStorageAccountName",
                    "isAutoDiscoveryEnabled",
                    "isAutoDiscoveryEnabled"
                ],
                "properties": {
                    "eventHubNamespace": {
                        "type": "string",
                        "minLength": 1
                    },
                    "eventHubName": {
                        "type": "string",
                        "minLength": 1
                    },
                    "checkpointStorageAccountName": {
                        "type": "string",
                        "minLength": 1
                    },
                    "isAutoDiscoveryEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "AzureNsgViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "nsgDetails",
                    "nsgDetails"
                ],
                "properties": {
                    "nsgDetails": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MagellanAzureNsgData"
                        }
                    }
                }
            },
            "MagellanAzureNsgData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "resourceGroup",
                    "resourceGroup",
                    "networkSecurityGroup",
                    "networkSecurityGroup",
                    "nsgLocation",
                    "nsgLocation",
                    "nsgExternalId",
                    "nsgExternalId",
                    "flowLogExist",
                    "flowLogExist",
                    "flowLogsFullStorageAddress",
                    "flowLogsFullStorageAddress",
                    "storageName",
                    "storageName",
                    "storageExist",
                    "storageExist",
                    "eventTopicName",
                    "eventTopicName",
                    "eventTopicExist",
                    "eventTopicExist",
                    "eventSubscriptionExist",
                    "eventSubscriptionExist",
                    "containerExist",
                    "containerExist",
                    "isConnected",
                    "isConnected",
                    "storageLocation",
                    "storageLocation",
                    "storageRg",
                    "storageRg",
                    "networkWatcherName",
                    "networkWatcherName",
                    "networkWatcherRg",
                    "networkWatcherRg",
                    "networkWatcherLocation",
                    "networkWatcherLocation",
                    "isStorageManaged",
                    "isStorageManaged"
                ],
                "properties": {
                    "resourceGroup": {
                        "type": "string"
                    },
                    "networkSecurityGroup": {
                        "type": "string"
                    },
                    "nsgLocation": {
                        "type": "string"
                    },
                    "nsgExternalId": {
                        "type": "string"
                    },
                    "flowLogExist": {
                        "type": "boolean"
                    },
                    "flowLogsFullStorageAddress": {
                        "type": "string"
                    },
                    "storageName": {
                        "type": "string"
                    },
                    "storageExist": {
                        "type": "boolean"
                    },
                    "eventTopicName": {
                        "type": "string"
                    },
                    "eventTopicExist": {
                        "type": "boolean"
                    },
                    "eventSubscriptionExist": {
                        "type": "boolean"
                    },
                    "containerExist": {
                        "type": "boolean"
                    },
                    "isConnected": {
                        "type": "boolean"
                    },
                    "storageLocation": {
                        "type": "string"
                    },
                    "storageRg": {
                        "type": "string"
                    },
                    "networkWatcherName": {
                        "type": "string"
                    },
                    "networkWatcherRg": {
                        "type": "string"
                    },
                    "networkWatcherLocation": {
                        "type": "string"
                    },
                    "isStorageManaged": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AzureGetMagellanOnboardingViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "subscriptionId",
                    "subscriptionId",
                    "error",
                    "error",
                    "rgsFromMagellan",
                    "rgsFromMagellan"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "rgsFromMagellan": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureMagellanOnboardedData"
                        }
                    }
                }
            },
            "AzureMagellanOnboardedData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rgAndNsg",
                    "rgAndNsg",
                    "status",
                    "status",
                    "storageName",
                    "storageName",
                    "isStorageManaged",
                    "isStorageManaged"
                ],
                "properties": {
                    "rgAndNsg": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "storageName": {
                        "type": "string"
                    },
                    "isStorageManaged": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "DryRunResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status",
                    "status",
                    "tests",
                    "tests"
                ],
                "properties": {
                    "status": {
                        "default": 4,
                        "$ref": "#/components/schemas/DryRunResultEnum"
                    },
                    "tests": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/DryRunTestResponse"
                        }
                    }
                }
            },
            "DryRunResultEnum": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Success",
                    "Warning",
                    "SuccessWithWarnings",
                    "Failed",
                    "Undefined"
                ],
                "enum": [
                    "Success",
                    "Warning",
                    "SuccessWithWarnings",
                    "Failed",
                    "Undefined"
                ]
            },
            "DryRunTestResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "status",
                    "status",
                    "description",
                    "description",
                    "error",
                    "error"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/DryRunResultEnum"
                    },
                    "description": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    }
                }
            },
            "AzureDryRunRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "subscriptionId",
                    "subscriptionId",
                    "onboardedStorages",
                    "onboardedStorages"
                ],
                "properties": {
                    "subscriptionId": {
                        "type": "string"
                    },
                    "onboardedStorages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MagellanAzureNetworkActivityOnboardingArmModelForApi": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "subscriptionId",
                    "subscriptionId",
                    "nsgsDetails",
                    "nsgsDetails"
                ],
                "properties": {
                    "subscriptionId": {
                        "type": "string"
                    },
                    "nsgsDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MagellanAzureFlowLogsParamsFromCliForApi"
                        }
                    }
                }
            },
            "MagellanAzureFlowLogsParamsFromCliForApi": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rgName",
                    "rgName",
                    "nsgsNames",
                    "nsgsNames"
                ],
                "properties": {
                    "rgName": {
                        "type": "string"
                    },
                    "nsgsNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "FindingOrchestrationExportPresignedUrlRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "operationId",
                    "operationId"
                ],
                "properties": {
                    "operationId": {
                        "type": "string"
                    }
                }
            },
            "FindingOrchestrationExportGslRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "dateRange",
                    "filter",
                    "filter",
                    "dateRange"
                ],
                "properties": {
                    "filter": {
                        "type": "string",
                        "default": ""
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/FindingOrchestrationExportGslDateRangeRequestModel"
                    }
                }
            },
            "FindingOrchestrationExportGslDateRangeRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "from",
                    "to",
                    "from",
                    "to"
                ],
                "properties": {
                    "from": {},
                    "to": {}
                }
            },
            "FindingOrchestrationExportPresignedUrlResponseModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "urls",
                    "urls"
                ],
                "properties": {
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "FindingOrchestrationExportStatusUrlResponseModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "operationId",
                    "operationId",
                    "state",
                    "state",
                    "message",
                    "message"
                ],
                "properties": {
                    "operationId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "GcpPubSubTopicsResponseModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "topicName",
                    "topicName",
                    "subscriptionName",
                    "subscriptionName",
                    "logType",
                    "logType",
                    "isConnectedToIntelligence",
                    "isConnectedToIntelligence",
                    "isAutoDiscoveryEnabled",
                    "isAutoDiscoveryEnabled",
                    "isIntelligenceManagedTopic",
                    "isIntelligenceManagedTopic"
                ],
                "properties": {
                    "topicName": {
                        "type": "string"
                    },
                    "subscriptionName": {
                        "type": "string"
                    },
                    "logType": {
                        "type": "string"
                    },
                    "isConnectedToIntelligence": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isAutoDiscoveryEnabled": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isIntelligenceManagedTopic": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "GcpPubsubTopicsRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "projectId",
                    "projectId",
                    "logType",
                    "logType"
                ],
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "logType": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GcpOnboardingTypeEnum"
                            }
                        ]
                    }
                }
            },
            "GcpOnboardingTypeEnum": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "GcpActivity",
                    "GcpFlowLogs",
                    "Both"
                ],
                "enum": [
                    "GcpActivity",
                    "GcpFlowLogs",
                    "Both"
                ]
            },
            "IntelligenceSinksResponseModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "sinks",
                    "sinks"
                ],
                "properties": {
                    "sinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GcpSinksModel"
                        }
                    }
                }
            },
            "GcpSinksModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "projectId",
                    "projectId",
                    "sinkName",
                    "sinkName",
                    "topicName",
                    "topicName"
                ],
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "sinkName": {
                        "type": "string"
                    },
                    "topicName": {
                        "type": "string"
                    }
                }
            },
            "IntelligenceTopicsResponseModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "topics",
                    "topics"
                ],
                "properties": {
                    "topics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IntelligenceTopicModel"
                        }
                    }
                }
            },
            "IntelligenceTopicModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "projectId",
                    "projectId",
                    "topicName",
                    "topicName",
                    "subscriptionName",
                    "subscriptionName",
                    "logType",
                    "logType",
                    "isAutoDiscoveryEnabled",
                    "isAutoDiscoveryEnabled",
                    "isIntelligenceManagedTopic",
                    "isIntelligenceManagedTopic",
                    "connectedSinks",
                    "connectedSinks"
                ],
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "topicName": {
                        "type": "string"
                    },
                    "subscriptionName": {
                        "type": "string"
                    },
                    "logType": {
                        "type": "string"
                    },
                    "isAutoDiscoveryEnabled": {
                        "type": "boolean"
                    },
                    "isIntelligenceManagedTopic": {
                        "type": "boolean"
                    },
                    "connectedSinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GcpSinksModel"
                        }
                    }
                }
            },
            "GcpOnboardingStatusRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "projectId",
                    "projectId",
                    "topicName",
                    "topicName",
                    "subscriptionName",
                    "subscriptionName"
                ],
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "topicName": {
                        "type": "string"
                    },
                    "subscriptionName": {
                        "type": "string"
                    }
                }
            },
            "GcpShellScrpirtResponseModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "shellCommand",
                    "shellCommand",
                    "topicSubscriptionName",
                    "topicSubscriptionName",
                    "topicName",
                    "topicName",
                    "connectedSinks",
                    "connectedSinks"
                ],
                "properties": {
                    "shellCommand": {
                        "type": "string"
                    },
                    "topicSubscriptionName": {
                        "type": "string"
                    },
                    "topicName": {
                        "type": "string"
                    },
                    "connectedSinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GcpSinksModel"
                        }
                    }
                }
            },
            "GcpShellScriptRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "region",
                    "region",
                    "logType",
                    "logType",
                    "centralizedProject",
                    "centralizedProject",
                    "projectsToOnboard",
                    "projectsToOnboard",
                    "topicName",
                    "topicName",
                    "subscriptionName",
                    "subscriptionName",
                    "setupType",
                    "setupType",
                    "isIntelligenceManagedTopic",
                    "isIntelligenceManagedTopic"
                ],
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "logType": {
                        "$ref": "#/components/schemas/MagellanGcpOnboardingTypeEnum"
                    },
                    "centralizedProject": {
                        "type": "string"
                    },
                    "projectsToOnboard": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "topicName": {
                        "type": "string"
                    },
                    "subscriptionName": {
                        "type": "string"
                    },
                    "setupType": {
                        "$ref": "#/components/schemas/GcpSetupTypeEnum"
                    },
                    "isIntelligenceManagedTopic": {
                        "type": "boolean"
                    }
                }
            },
            "MagellanGcpOnboardingTypeEnum": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "NetworkTraffic",
                    "AccountActivity",
                    "Both"
                ],
                "enum": [
                    "NetworkTraffic",
                    "AccountActivity",
                    "Both"
                ]
            },
            "GcpSetupTypeEnum": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "newCentralizedPubSubSetup",
                    "existingCentralizedPubSubSetup",
                    "newStandardPubSubSetup"
                ],
                "enum": [
                    "newCentralizedPubSubSetup",
                    "existingCentralizedPubSubSetup",
                    "newStandardPubSubSetup"
                ]
            },
            "GcpOnboardedProjectsResponseModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "projectId",
                    "projectId",
                    "isEventActivityOnboarded",
                    "isEventActivityOnboarded",
                    "isTrafficActivityOnboarded",
                    "isTrafficActivityOnboarded"
                ],
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "isEventActivityOnboarded": {
                        "type": "boolean"
                    },
                    "isTrafficActivityOnboarded": {
                        "type": "boolean"
                    }
                }
            },
            "CentralizedOnboardingRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "logType",
                    "logType",
                    "setupType",
                    "setupType",
                    "centralizedProject",
                    "centralizedProject",
                    "projectsToOnboard",
                    "projectsToOnboard",
                    "topicName",
                    "topicName",
                    "subscriptionName",
                    "subscriptionName",
                    "connectedSinks",
                    "connectedSinks",
                    "isAutoDiscoveryEnabled",
                    "isAutoDiscoveryEnabled",
                    "isIntelligenceManagedTopic",
                    "isIntelligenceManagedTopic"
                ],
                "properties": {
                    "logType": {
                        "$ref": "#/components/schemas/GcpOnboardingTypeEnum"
                    },
                    "setupType": {
                        "$ref": "#/components/schemas/GcpSetupTypeEnum"
                    },
                    "centralizedProject": {
                        "type": "string"
                    },
                    "projectsToOnboard": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "topicName": {
                        "type": "string"
                    },
                    "subscriptionName": {
                        "type": "string"
                    },
                    "connectedSinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GcpSinksModel"
                        }
                    },
                    "isAutoDiscoveryEnabled": {
                        "type": "boolean"
                    },
                    "isIntelligenceManagedTopic": {
                        "type": "boolean"
                    }
                }
            },
            "RemediationExecuteResponseModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "workItemsTriggerStatuses",
                    "workItemsTriggerStatuses"
                ],
                "properties": {
                    "workItemsTriggerStatuses": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/WorkItemsTriggerStatus"
                        }
                    }
                }
            },
            "WorkItemsTriggerStatus": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "errorMessage",
                    "errorMessage",
                    "isTriggered",
                    "isTriggered",
                    "workItemExecutionId",
                    "workItemExecutionId",
                    "workItemFindingKey",
                    "workItemFindingKey"
                ],
                "properties": {
                    "errorMessage": {
                        "type": "string",
                        "nullable": true
                    },
                    "isTriggered": {
                        "type": "boolean"
                    },
                    "workItemExecutionId": {
                        "type": "string"
                    },
                    "workItemFindingKey": {
                        "type": "string"
                    }
                }
            },
            "RemediationExecuteRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "triggerEndpoint",
                    "triggerEndpoint",
                    "cloudbots",
                    "cloudbots",
                    "findings",
                    "findings"
                ],
                "properties": {
                    "triggerEndpoint": {
                        "type": "string"
                    },
                    "cloudbots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudBot"
                        }
                    },
                    "findings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Finding"
                        }
                    }
                }
            },
            "CloudBot": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "params",
                    "params"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "params": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Finding": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    }
                }
            },
            "StatusGeneralDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "eventTime",
                    "eventTime",
                    "status",
                    "status",
                    "remediation",
                    "remediation",
                    "findingKey",
                    "findingKey",
                    "botMessage",
                    "botMessage"
                ],
                "properties": {
                    "eventTime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "remediation": {
                        "type": "string"
                    },
                    "findingKey": {
                        "type": "string"
                    },
                    "botMessage": {
                        "type": "string"
                    }
                }
            },
            "FullReportResponseModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseReportModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "scheduleId",
                            "scheduleId",
                            "accountId",
                            "accountId",
                            "scheduledCron",
                            "scheduledCron",
                            "lastRun",
                            "lastRun",
                            "nextRun",
                            "nextRun"
                        ],
                        "properties": {
                            "scheduleId": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "accountId": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "scheduledCron": {
                                "type": "string"
                            },
                            "lastRun": {
                                "type": "string"
                            },
                            "nextRun": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "BaseReportModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "reportName",
                    "reportName",
                    "reportType",
                    "reportType",
                    "filters",
                    "filters",
                    "notifications",
                    "notifications",
                    "scheduleDetails",
                    "scheduleDetails"
                ],
                "properties": {
                    "reportName": {
                        "type": "string"
                    },
                    "reportType": {
                        "type": "string"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportFiltersItem"
                        }
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportNotificationItem"
                        }
                    },
                    "scheduleDetails": {
                        "$ref": "#/components/schemas/ReportScheduleDetails"
                    }
                }
            },
            "ReportFiltersItem": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "value",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {}
                }
            },
            "ReportNotificationItem": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type",
                    "value",
                    "value"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "ReportScheduleDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "minuteOfHour",
                    "minuteOfHour",
                    "hourOfDay",
                    "hourOfDay",
                    "dayOfWeek",
                    "dayOfWeek",
                    "dayOfMonth",
                    "dayOfMonth"
                ],
                "properties": {
                    "minuteOfHour": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "hourOfDay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dayOfWeek": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "dayOfMonth": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                }
            },
            "ReportOperationResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "message",
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "DeleteReportRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scheduleIds",
                    "scheduleIds"
                ],
                "properties": {
                    "scheduleIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "ExclusionViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExclusionPutRequestModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "platform",
                            "platform"
                        ],
                        "properties": {
                            "platform": {
                                "description": "Exclusion platform",
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/AssessmentCloudAccountType"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "ExclusionPutRequestModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExclusionPostRequestModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Exclusion ID",
                                "format": "guid"
                            }
                        }
                    }
                ]
            },
            "ExclusionPostRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "comment",
                    "rules",
                    "rules",
                    "logicExpressions",
                    "logicExpressions",
                    "regions",
                    "regions",
                    "rulesetId",
                    "rulesetId",
                    "cloudAccountIds",
                    "cloudAccountIds",
                    "organizationalUnitIds",
                    "organizationalUnitIds",
                    "comment",
                    "dateRange",
                    "dateRange"
                ],
                "properties": {
                    "rules": {
                        "type": "array",
                        "description": "[Optional] List of rules to apply the exclusion on.",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RuleViewModel2"
                        }
                    },
                    "logicExpressions": {
                        "type": "array",
                        "description": "[Optional] The GSL logic expressions of the exclusion.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(severity like '(informational|low|medium|high|critical)')|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "regions": {
                        "type": "array",
                        "description": "           [Optional] List of regions to exclude, for example 'us_east_1'.\n           ",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "rulesetId": {
                        "type": "integer",
                        "description": "Ruleset ID to apply exclusion on.",
                        "format": "int64"
                    },
                    "cloudAccountIds": {
                        "type": "array",
                        "description": "[Optional] List of cloud account IDs to apply exclusion on.\nIf neither cloud account IDs nor organizational unit IDs are supplied, exclusion will apply on all cloud accounts.\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "organizationalUnitIds": {
                        "type": "array",
                        "description": "[Optional] List of organizational unit IDs to apply exclusion on.\nIf neither organizational unit IDs nor cloud account IDs are supplied, exclusion will apply on all cloud accounts.\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment text (free text)",
                        "minLength": 1
                    },
                    "dateRange": {
                        "description": "[Optional] Effective date range for the exclusion.\nLeaving 'From' null will take only 'To' into account.\nLeaving 'To' null will take only 'From' into account.\nDateRange with both 'From' and 'To' null will be disregarded.",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeRange"
                            }
                        ]
                    }
                }
            },
            "ExclusionPostByFindingIdRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "findingId",
                    "findingId",
                    "dateRange",
                    "dateRange"
                ],
                "properties": {
                    "findingId": {
                        "type": "string",
                        "description": "[Required] Finding ID",
                        "format": "guid"
                    },
                    "dateRange": {
                        "description": "[Optional] Date range for the exclusion to take effect.\nThe exclusion will take effect permanently unless a specific date range is specified.\nLeaving 'From' null will take only 'To' into account.\nLeaving 'To' null will take only 'From' into account.\nDateRange with both 'From' and 'To' null will be disregarded.",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeRange"
                            }
                        ]
                    }
                }
            },
            "ExclusionPostByFindingKeyRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "findingKey",
                    "findingKey",
                    "dateRange",
                    "dateRange"
                ],
                "properties": {
                    "findingKey": {
                        "type": "string",
                        "description": "[Required] Finding Key",
                        "nullable": true
                    },
                    "dateRange": {
                        "description": "[Optional] Date range for the exclusion to take effect.\nThe exclusion will take effect permanently unless a specific date range is specified.\nLeaving 'From' null will take only 'To' into account.\nLeaving 'To' null will take only 'From' into account.\nDateRange with both 'From' and 'To' null will be disregarded.",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeRange"
                            }
                        ]
                    }
                }
            },
            "ExclusionMultiStatusResponseViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "exclusions",
                    "exclusions"
                ],
                "properties": {
                    "exclusions": {
                        "type": "object",
                        "default": {},
                        "nullable": true,
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "RuleBundleViewResultViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRuleBundleResultViewModelOfBaseRuleBundleEntity"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    }
                ]
            },
            "BaseRuleBundleResultViewModelOfBaseRuleBundleEntity": {
                "type": "object",
                "x-abstract": true,
                "additionalProperties": false,
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "description": " account id",
                        "format": "int64"
                    },
                    "createdTime": {
                        "type": "string",
                        "description": "bundle creation date",
                        "format": "date-time"
                    },
                    "updatedTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer",
                        "description": "bundle id",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "bundle name",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "bundle description",
                        "nullable": true
                    },
                    "isTemplate": {
                        "type": "boolean"
                    },
                    "hideInCompliance": {
                        "type": "boolean"
                    },
                    "minFeatureTier": {
                        "$ref": "#/components/schemas/FeatureTier"
                    },
                    "section": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tooltipText": {
                        "type": "string",
                        "description": "tooltip text (UI) for the bundle, when hovering over it",
                        "nullable": true
                    },
                    "showBundle": {
                        "type": "boolean"
                    },
                    "systemBundle": {
                        "type": "boolean"
                    },
                    "cloudVendor": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CloudVendor"
                            }
                        ]
                    },
                    "version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minorVersion": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "availableVersions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RuleBundleVersionViewModel"
                        }
                    },
                    "language": {
                        "type": "string",
                        "nullable": true
                    },
                    "rulesCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "common": {
                        "type": "boolean"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FeatureTier": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Trial",
                    "Basic",
                    "Advanced",
                    "Premium"
                ],
                "enum": [
                    "Trial",
                    "Basic",
                    "Advanced",
                    "Premium"
                ]
            },
            "RuleBundleVersionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "version",
                    "version",
                    "createdTime",
                    "createdTime"
                ],
                "properties": {
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdTime": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "RuleBundleResultViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRuleBundleResultViewModelOfRuleBundleEntity"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "rules",
                            "rules"
                        ],
                        "properties": {
                            "rules": {
                                "type": "array",
                                "description": "list of rules in the bundle",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/RuleViewModel2"
                                }
                            }
                        }
                    }
                ]
            },
            "RuleViewModel2": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "logicHash",
                    "logicHash",
                    "id",
                    "id",
                    "name",
                    "name",
                    "rlmId",
                    "rlmId"
                ],
                "properties": {
                    "logicHash": {
                        "type": "string",
                        "description": "Rule logic hash",
                        "pattern": "^[A-Za-z0-9+/]{22}?$",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Rule ID",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Rule name",
                        "nullable": true
                    },
                    "rlmId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BaseRuleBundleResultViewModelOfRuleBundleEntity": {
                "type": "object",
                "x-abstract": true,
                "additionalProperties": false,
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "description": " account id",
                        "format": "int64"
                    },
                    "createdTime": {
                        "type": "string",
                        "description": "bundle creation date",
                        "format": "date-time"
                    },
                    "updatedTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer",
                        "description": "bundle id",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "bundle name",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "bundle description",
                        "nullable": true
                    },
                    "isTemplate": {
                        "type": "boolean"
                    },
                    "hideInCompliance": {
                        "type": "boolean"
                    },
                    "minFeatureTier": {
                        "$ref": "#/components/schemas/FeatureTier"
                    },
                    "section": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tooltipText": {
                        "type": "string",
                        "description": "tooltip text (UI) for the bundle, when hovering over it",
                        "nullable": true
                    },
                    "showBundle": {
                        "type": "boolean"
                    },
                    "systemBundle": {
                        "type": "boolean"
                    },
                    "cloudVendor": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CloudVendor"
                            }
                        ]
                    },
                    "version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minorVersion": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "availableVersions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RuleBundleVersionViewModel"
                        }
                    },
                    "language": {
                        "type": "string",
                        "nullable": true
                    },
                    "rulesCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "common": {
                        "type": "boolean"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "RuleBundleRequestPostViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "cloudVendor",
                    "name",
                    "description",
                    "description",
                    "rules",
                    "rules",
                    "hideInCompliance",
                    "hideInCompliance",
                    "minFeatureTier",
                    "minFeatureTier",
                    "cloudVendor",
                    "language",
                    "language"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "bundle name",
                        "default": "",
                        "minLength": 1
                    },
                    "description": {
                        "type": "string",
                        "description": "description of the bundle",
                        "default": "",
                        "nullable": true
                    },
                    "rules": {
                        "type": "array",
                        "description": "list of rules in the bundle",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RuleViewModel2"
                        }
                    },
                    "hideInCompliance": {
                        "type": "boolean"
                    },
                    "minFeatureTier": {
                        "default": 30,
                        "$ref": "#/components/schemas/FeatureTier"
                    },
                    "cloudVendor": {
                        "description": "the cloud provider on which the rule will be run",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CloudVendor"
                            }
                        ]
                    },
                    "language": {
                        "type": "string",
                        "description": "the language of the text (default, 'en' - English)",
                        "default": "en",
                        "nullable": true
                    }
                }
            },
            "RuleBundleRequestViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RuleBundleRequestPostViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "id",
                            "rlmId",
                            "rlmId"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "description": "the bundle id (returned in response)",
                                "format": "int64"
                            },
                            "rlmId": {
                                "type": "string",
                                "description": "RDS database table entity (row) id\nIs null for non-RLM customers (using legacy Mongo)",
                                "format": "guid",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "NotificationTriggerType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "NA",
                    "Scheduled",
                    "Report",
                    "Single"
                ],
                "enum": [
                    "NA",
                    "Scheduled",
                    "Report",
                    "Single"
                ]
            },
            "ContinuousComplianceNotificationEntity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RootEntityBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "name",
                            "id",
                            "name",
                            "description",
                            "description",
                            "alertsConsole",
                            "alertsConsole",
                            "scheduledReport",
                            "scheduledReport",
                            "changeDetection",
                            "changeDetection",
                            "gcpSecurityCommandCenterIntegration",
                            "gcpSecurityCommandCenterIntegration",
                            "filter",
                            "filter",
                            "sendOnEachOccurrence",
                            "sendOnEachOccurrence",
                            "isAnyNotificationOptionEnabled",
                            "isAnyNotificationOptionEnabled"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "guid",
                                "minLength": 1
                            },
                            "name": {
                                "type": "string",
                                "description": "it is very importent to use username and not id here,\nIn order to support creation of policy be a provisioned or an assumed user (where there is no real db entity with id).",
                                "maxLength": 100,
                                "minLength": 0
                            },
                            "description": {
                                "type": "string",
                                "maxLength": 500,
                                "minLength": 0,
                                "nullable": true
                            },
                            "alertsConsole": {
                                "type": "boolean"
                            },
                            "scheduledReport": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduledReportNotification"
                                    }
                                ]
                            },
                            "changeDetection": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/ChangeDetectionNotification"
                                    }
                                ]
                            },
                            "gcpSecurityCommandCenterIntegration": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/GcpSecurityCommandCenterIntegrationNotification"
                                    }
                                ]
                            },
                            "filter": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/ComplianceNotificationFilter"
                                    }
                                ]
                            },
                            "sendOnEachOccurrence": {
                                "type": "boolean"
                            },
                            "isAnyNotificationOptionEnabled": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "ScheduledReportNotification": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "emailSendingState",
                    "emailSendingState",
                    "lastGenerationTime",
                    "lastGenerationTime",
                    "scheduleData",
                    "scheduleData"
                ],
                "properties": {
                    "emailSendingState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "lastGenerationTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "scheduleData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ReportScheduleData"
                            }
                        ]
                    }
                }
            },
            "NotificationState": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Disabled",
                    "Enabled"
                ],
                "enum": [
                    "Disabled",
                    "Enabled"
                ]
            },
            "ReportScheduleData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "cronExpression",
                    "recipients",
                    "cronExpression",
                    "type",
                    "type",
                    "isIntelligence",
                    "isIntelligence",
                    "recipients"
                ],
                "properties": {
                    "cronExpression": {
                        "type": "string",
                        "minLength": 1
                    },
                    "type": {
                        "$ref": "#/components/schemas/ScheduledReportType"
                    },
                    "isIntelligence": {
                        "type": "boolean"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ScheduledReportType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Detailed",
                    "Summary",
                    "FullCsv",
                    "FullCsvZip",
                    "ExecutivePlatform"
                ],
                "enum": [
                    "Detailed",
                    "Summary",
                    "FullCsv",
                    "FullCsvZip",
                    "ExecutivePlatform"
                ]
            },
            "ChangeDetectionNotification": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "emailSendingState",
                    "emailSendingState",
                    "slackIntegrationState",
                    "slackIntegrationState",
                    "slackSingleIntegrationState",
                    "slackSingleIntegrationState",
                    "teamsIntegrationState",
                    "teamsIntegrationState",
                    "teamsSingleIntegrationState",
                    "teamsSingleIntegrationState",
                    "eventarcIntegrationState",
                    "eventarcIntegrationState",
                    "emailPerFindingSendingState",
                    "emailPerFindingSendingState",
                    "snsSendingState",
                    "snsSendingState",
                    "externalTicketCreatingState",
                    "externalTicketCreatingState",
                    "webhookIntegrationState",
                    "webhookIntegrationState",
                    "awsSecurityHubIntegrationState",
                    "awsSecurityHubIntegrationState",
                    "azureSecurityCenterIntegrationState",
                    "azureSecurityCenterIntegrationState",
                    "emailData",
                    "emailData",
                    "emailPerFindingData",
                    "emailPerFindingData",
                    "snsData",
                    "snsData",
                    "ticketingSystemData",
                    "ticketingSystemData",
                    "awsSecurityHubIntegration",
                    "awsSecurityHubIntegration",
                    "azureSecurityCenterIntegration",
                    "azureSecurityCenterIntegration",
                    "webhookData",
                    "webhookData",
                    "slackData",
                    "slackData",
                    "teamsData",
                    "teamsData",
                    "eventarcData",
                    "eventarcData",
                    "teamsSingleIntegrationData",
                    "teamsSingleIntegrationData",
                    "slackSingleIntegrationData",
                    "slackSingleIntegrationData",
                    "isAnyNotificationOptionEnabled",
                    "isAnyNotificationOptionEnabled"
                ],
                "properties": {
                    "emailSendingState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "slackIntegrationState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "slackSingleIntegrationState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "teamsIntegrationState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "teamsSingleIntegrationState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "eventarcIntegrationState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "emailPerFindingSendingState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "snsSendingState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "externalTicketCreatingState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "webhookIntegrationState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "awsSecurityHubIntegrationState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "azureSecurityCenterIntegrationState": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "emailData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/EmailNotificationData"
                            }
                        ]
                    },
                    "emailPerFindingData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/EmailPerFindingNotificationData"
                            }
                        ]
                    },
                    "snsData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SnsNotificationData"
                            }
                        ]
                    },
                    "ticketingSystemData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/TicketingSystemNotificationData"
                            }
                        ]
                    },
                    "awsSecurityHubIntegration": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AwsSecurityHubIntegrationNotification"
                            }
                        ]
                    },
                    "azureSecurityCenterIntegration": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AzureSecurityCenterIntegrationNotification"
                            }
                        ]
                    },
                    "webhookData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/WebhookNotificationData"
                            }
                        ]
                    },
                    "slackData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SlackNotificationData"
                            }
                        ]
                    },
                    "teamsData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/TeamsNotificationData"
                            }
                        ]
                    },
                    "eventarcData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/EventarcNotificationData"
                            }
                        ]
                    },
                    "teamsSingleIntegrationData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ChatIntegrationImmediateNotificationData"
                            }
                        ]
                    },
                    "slackSingleIntegrationData": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ChatIntegrationImmediateNotificationData"
                            }
                        ]
                    },
                    "isAnyNotificationOptionEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "EmailNotificationData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "recipients",
                    "recipients"
                ],
                "properties": {
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "EmailPerFindingNotificationData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "recipients",
                    "recipients",
                    "notificationOutputFormat",
                    "notificationOutputFormat"
                ],
                "properties": {
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notificationOutputFormat": {
                        "$ref": "#/components/schemas/NotificationOutputFormatType"
                    }
                }
            },
            "NotificationOutputFormatType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "JsonWithFullEntity",
                    "JsonWithBasicEntity",
                    "Json",
                    "PlainText",
                    "SplunkBasic",
                    "ServiceNow",
                    "QRadar",
                    "JsonFirstLevelEntity",
                    "Jira"
                ],
                "enum": [
                    "JsonWithFullEntity",
                    "JsonWithBasicEntity",
                    "Json",
                    "PlainText",
                    "SplunkBasic",
                    "ServiceNow",
                    "QRadar",
                    "JsonFirstLevelEntity",
                    "Jira"
                ]
            },
            "SnsNotificationData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "snsTopicArn",
                    "snsTopicArn",
                    "snsOutputFormat",
                    "snsOutputFormat"
                ],
                "properties": {
                    "snsTopicArn": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ARN"
                            }
                        ]
                    },
                    "snsOutputFormat": {
                        "$ref": "#/components/schemas/NotificationOutputFormatType"
                    }
                }
            },
            "ARN": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "address",
                    "address",
                    "valid",
                    "valid",
                    "service",
                    "service",
                    "region",
                    "region",
                    "accountId",
                    "accountId",
                    "resource",
                    "resource",
                    "resourceType",
                    "resourceType",
                    "partition",
                    "partition",
                    "isGovCloud",
                    "isGovCloud"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "valid": {
                        "type": "boolean"
                    },
                    "service": {
                        "type": "string",
                        "nullable": true
                    },
                    "region": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true
                    },
                    "resourceType": {
                        "type": "string",
                        "nullable": true
                    },
                    "partition": {
                        "type": "string",
                        "nullable": true
                    },
                    "isGovCloud": {
                        "type": "boolean"
                    }
                }
            },
            "TicketingSystemNotificationData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "systemType",
                    "systemType",
                    "shouldCloseTickets",
                    "shouldCloseTickets",
                    "domain",
                    "domain",
                    "user",
                    "user",
                    "pass",
                    "pass",
                    "projectKey",
                    "projectKey",
                    "issueType",
                    "issueType"
                ],
                "properties": {
                    "systemType": {
                        "$ref": "#/components/schemas/EnumExternalTicketingSystemType"
                    },
                    "shouldCloseTickets": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true
                    },
                    "user": {
                        "type": "string",
                        "nullable": true
                    },
                    "pass": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/EncryptedValue"
                            }
                        ]
                    },
                    "projectKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "issueType": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EnumExternalTicketingSystemType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "ServiceNow",
                    "Jira",
                    "PagerDuty"
                ],
                "enum": [
                    "ServiceNow",
                    "Jira",
                    "PagerDuty"
                ]
            },
            "EncryptedValue": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "iv",
                    "iv",
                    "salt",
                    "salt",
                    "cyph",
                    "cyph",
                    "iterations",
                    "iterations",
                    "algorithm",
                    "algorithm"
                ],
                "properties": {
                    "iv": {
                        "type": "string",
                        "format": "byte",
                        "nullable": true
                    },
                    "salt": {
                        "type": "string",
                        "format": "byte",
                        "nullable": true
                    },
                    "cyph": {
                        "type": "string",
                        "format": "byte",
                        "nullable": true
                    },
                    "iterations": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "algorithm": {
                        "$ref": "#/components/schemas/CryptoAlgorithm"
                    }
                }
            },
            "CryptoAlgorithm": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "AES",
                    "PBKDF2_SHA256"
                ],
                "enum": [
                    "AES",
                    "PBKDF2_SHA256"
                ]
            },
            "AwsSecurityHubIntegrationNotification": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "externalAccountId",
                    "externalAccountId",
                    "region",
                    "region",
                    "defaultRegion",
                    "defaultRegion",
                    "includeAllAccounts",
                    "includeAllAccounts",
                    "includeAllRegions",
                    "includeAllRegions"
                ],
                "properties": {
                    "externalAccountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "region": {
                        "$ref": "#/components/schemas/CloudRegion"
                    },
                    "defaultRegion": {
                        "$ref": "#/components/schemas/CloudRegion"
                    },
                    "includeAllAccounts": {
                        "type": "boolean"
                    },
                    "includeAllRegions": {
                        "type": "boolean"
                    }
                }
            },
            "AzureSecurityCenterIntegrationNotification": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "subscription",
                    "subscription"
                ],
                "properties": {
                    "subscription": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    }
                }
            },
            "WebhookNotificationData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "url",
                    "httpMethod",
                    "authMethod",
                    "url",
                    "httpMethod",
                    "authMethod",
                    "basicAuthData",
                    "basicAuthData",
                    "webhookOutputFormat",
                    "webhookOutputFormat",
                    "webhookResponseType",
                    "webhookResponseType",
                    "payloadFormat",
                    "payloadFormat",
                    "ignoreCertificate",
                    "ignoreCertificate",
                    "advancedUrl",
                    "advancedUrl"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "minLength": 1
                    },
                    "httpMethod": {
                        "$ref": "#/components/schemas/WebhookHttpMethod"
                    },
                    "authMethod": {
                        "$ref": "#/components/schemas/WebhookAuthMethod"
                    },
                    "basicAuthData": {
                        "default": {
                            "Username": null,
                            "Password": null
                        },
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BasicAuthMethodData"
                            }
                        ]
                    },
                    "webhookOutputFormat": {
                        "$ref": "#/components/schemas/NotificationOutputFormatType"
                    },
                    "webhookResponseType": {
                        "$ref": "#/components/schemas/WebhookResponseType"
                    },
                    "payloadFormat": {
                        "type": "string",
                        "nullable": true
                    },
                    "ignoreCertificate": {
                        "type": "boolean"
                    },
                    "advancedUrl": {
                        "type": "boolean"
                    }
                }
            },
            "WebhookHttpMethod": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Post",
                    "Put",
                    "Get"
                ],
                "enum": [
                    "Post",
                    "Put",
                    "Get"
                ]
            },
            "WebhookAuthMethod": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "NoAuth",
                    "BasicAuth"
                ],
                "enum": [
                    "NoAuth",
                    "BasicAuth"
                ]
            },
            "BasicAuthMethodData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "username",
                    "username",
                    "password",
                    "password"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/EncryptedValue"
                            }
                        ]
                    }
                }
            },
            "WebhookResponseType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "None",
                    "ServiceNow",
                    "Jira"
                ],
                "enum": [
                    "None",
                    "ServiceNow",
                    "Jira"
                ]
            },
            "SlackNotificationData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "url",
                    "url"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "TeamsNotificationData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "url",
                    "url"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "EventarcNotificationData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "channelConnectionId",
                    "channelConnectionId"
                ],
                "properties": {
                    "channelConnectionId": {
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "ChatIntegrationImmediateNotificationData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "url",
                    "url",
                    "outputFormatSource",
                    "outputFormatSource",
                    "customOutputFormat",
                    "customOutputFormat"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "minLength": 1
                    },
                    "outputFormatSource": {
                        "$ref": "#/components/schemas/AssessmentFindingOrigin"
                    },
                    "customOutputFormat": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "AssessmentFindingOrigin": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "ComplianceEngine",
                    "Magellan",
                    "Serverless",
                    "ImageAssurance",
                    "SourceCodeAssurance",
                    "InfrastructureAsCode",
                    "CIEM",
                    "Incident",
                    "AwsInspector",
                    "ServerlessSecurityAnalyzer",
                    "ExternalFindingSource",
                    "Qualys",
                    "Tenable",
                    "AwsGuardDuty",
                    "KubernetesImageScanning",
                    "KubernetesRuntimeAssurance",
                    "ContainersRuntimeProtection",
                    "WorkloadChangeMonitoring",
                    "MagellanAwsGuardDuty"
                ],
                "enum": [
                    "ComplianceEngine",
                    "Magellan",
                    "Serverless",
                    "ImageAssurance",
                    "SourceCodeAssurance",
                    "InfrastructureAsCode",
                    "CIEM",
                    "Incident",
                    "AwsInspector",
                    "ServerlessSecurityAnalyzer",
                    "ExternalFindingSource",
                    "Qualys",
                    "Tenable",
                    "AwsGuardDuty",
                    "KubernetesImageScanning",
                    "KubernetesRuntimeAssurance",
                    "ContainersRuntimeProtection",
                    "WorkloadChangeMonitoring",
                    "MagellanAwsGuardDuty"
                ]
            },
            "GcpSecurityCommandCenterIntegrationNotification": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "state",
                    "state",
                    "projectId",
                    "projectId",
                    "sourceId",
                    "sourceId"
                ],
                "properties": {
                    "state": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "projectId": {
                        "type": "string",
                        "nullable": true
                    },
                    "sourceId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ComplianceNotificationFilter": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "severities",
                    "severities",
                    "ruleEntityTypes",
                    "ruleEntityTypes",
                    "entityTags",
                    "entityTags",
                    "entityNames",
                    "entityNames",
                    "entityIds",
                    "entityIds",
                    "entityCategories",
                    "entityCategories"
                ],
                "properties": {
                    "severities": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RuleSeverity"
                        }
                    },
                    "ruleEntityTypes": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "entityTags": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/TagRuleEntity"
                        }
                    },
                    "entityNames": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "entityIds": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "entityCategories": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "OciCloudAccountViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "credentials",
                    "id",
                    "id",
                    "name",
                    "name",
                    "creationDate",
                    "creationDate",
                    "tenancyId",
                    "tenancyId",
                    "homeRegion",
                    "homeRegion",
                    "credentials",
                    "organizationalUnitId",
                    "organizationalUnitId",
                    "organizationalUnitPath",
                    "organizationalUnitPath",
                    "organizationalUnitName",
                    "organizationalUnitName",
                    "vendor",
                    "vendor"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "OCI cloud account ID in CloudGuard",
                        "format": "guid"
                    },
                    "name": {
                        "type": "string",
                        "description": "OCI account name in CloudGuard",
                        "nullable": true
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date for this cloud account ID in CloudGuard",
                        "format": "date-time"
                    },
                    "tenancyId": {
                        "type": "string",
                        "description": "OCI TenancyId",
                        "nullable": true
                    },
                    "homeRegion": {
                        "type": "string",
                        "description": "OCI account HomeRegion",
                        "nullable": true
                    },
                    "credentials": {
                        "description": "OCI account Credentials details (user ocid, fingerprint, public key)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/OciAccountCredentialsViewModel"
                            }
                        ]
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "organizationalUnitPath": {
                        "type": "string",
                        "nullable": true
                    },
                    "organizationalUnitName": {
                        "type": "string",
                        "nullable": true
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/CloudVendor"
                    }
                }
            },
            "OciAccountCredentialsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "user",
                    "fingerprint",
                    "publicKey",
                    "user",
                    "fingerprint",
                    "publicKey"
                ],
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "OCI user ocid.",
                        "minLength": 1
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "Hash of the public key.",
                        "minLength": 1
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "The public key that should be used in OCI \"identity api key\".",
                        "minLength": 1
                    }
                }
            },
            "OciCloudAccountTempDataCreationModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "tenancyId",
                    "homeRegion",
                    "tenantAdministratorEmailAddress",
                    "name",
                    "tenancyId",
                    "homeRegion",
                    "tenantAdministratorEmailAddress",
                    "userName",
                    "userName",
                    "groupName",
                    "groupName",
                    "policyName",
                    "policyName"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "OCI account name in CloudGuard (The desired display name for the Tenancy)",
                        "minLength": 1
                    },
                    "tenancyId": {
                        "type": "string",
                        "description": "OCI TenancyId - that will be onboarded (found in OCI under ‘Profile’ -> ‘Tenancy’ -> ‘OCID’)",
                        "minLength": 1
                    },
                    "homeRegion": {
                        "type": "string",
                        "description": "The Tenancy’s Home Region Identifier (found in OCI by clicking the Regions dropdown at the top right corner).\nYou can find the regions identifiers here: https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm",
                        "minLength": 1
                    },
                    "tenantAdministratorEmailAddress": {
                        "type": "string",
                        "description": "OCI tenant administrator Email address, Email Address will be used to create a user that will have terraform attached policy.\nA Verification Email will be sent from OCI to the this Email address, and this user will be added to OCI account.\nFor old OCI accounts this field will not be used.",
                        "minLength": 1
                    },
                    "userName": {
                        "type": "string",
                        "description": "(*Optional) - The desired name for the User that will be created in the Tenancy (default - “CloudGuard-User”)",
                        "nullable": true
                    },
                    "groupName": {
                        "type": "string",
                        "description": "(*Optional) - The desired name for the Group that will be created in the Tenancy (default - “CloudGuard-Group”)",
                        "nullable": true
                    },
                    "policyName": {
                        "type": "string",
                        "description": "(*Optional) - The desired name for the Policy that will be created in the Tenancy (default - “CloudGuard-Policy”)",
                        "nullable": true
                    }
                }
            },
            "OciAccountCreationInput": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "userOcid",
                    "tenancyId",
                    "userOcid",
                    "tenancyId",
                    "organizationalUnitId",
                    "organizationalUnitId"
                ],
                "properties": {
                    "userOcid": {
                        "type": "string",
                        "description": "The created user’s OCID (from the terraform output)",
                        "minLength": 1
                    },
                    "tenancyId": {
                        "type": "string",
                        "description": "The tenancy’s OCID (from the previous step)",
                        "minLength": 1
                    },
                    "organizationalUnitId": {
                        "type": "string",
                        "description": "The organizationalUnitId to add this cloud account to, or an empty GUID – “00000000-0000-0000-0000-000000000000”",
                        "format": "guid",
                        "nullable": true
                    }
                }
            },
            "OciAccountNameViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "CloudAccountMissingPermissionsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accountId",
                    "accountId",
                    "actions",
                    "actions"
                ],
                "properties": {
                    "accountId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "actions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/CloudAccountExternalActionStatusViewModel"
                        }
                    }
                }
            },
            "CloudAccountExternalActionStatusViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type",
                    "subType",
                    "subType",
                    "total",
                    "total",
                    "error",
                    "error"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "subType": {
                        "type": "string",
                        "nullable": true
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "error": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CloudAccountActionFailureViewModel"
                            }
                        ]
                    }
                }
            },
            "CloudAccountActionFailureViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "code",
                    "code",
                    "message",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "CloudAccountMissingPermissionsIgnorableViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "actions",
                    "actions"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "account id",
                        "format": "guid"
                    },
                    "actions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/MissingPermissionsIgnorableViewModel"
                        }
                    }
                }
            },
            "MissingPermissionsIgnorableViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CloudAccountExternalActionStatusViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "permissionId",
                            "permissionId",
                            "isIgnored",
                            "isIgnored"
                        ],
                        "properties": {
                            "permissionId": {
                                "type": "string",
                                "format": "guid",
                                "nullable": true
                            },
                            "isIgnored": {
                                "type": "boolean",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "MissingPermissionsIgnorableUpdateViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "isIgnored",
                    "cloudAccountId",
                    "cloudAccountId",
                    "permissionId",
                    "permissionId",
                    "isIgnored",
                    "type",
                    "type",
                    "subType",
                    "subType",
                    "errorCode",
                    "errorCode",
                    "errorMessage",
                    "errorMessage"
                ],
                "properties": {
                    "cloudAccountId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "permissionId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "isIgnored": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "subType": {
                        "type": "string",
                        "nullable": true
                    },
                    "errorCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "errorMessage": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MissingPermissionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "srl",
                    "srl",
                    "consecutiveFails",
                    "consecutiveFails",
                    "lastFail",
                    "lastFail",
                    "lastSuccess",
                    "lastSuccess",
                    "firstFail",
                    "firstFail",
                    "lastFailErrorCode",
                    "lastFailErrorCode",
                    "lastFailMessage",
                    "lastFailMessage",
                    "id",
                    "id",
                    "retryMetadata",
                    "retryMetadata",
                    "cloudAccountId",
                    "cloudAccountId",
                    "vendor",
                    "vendor"
                ],
                "properties": {
                    "srl": {
                        "type": "string",
                        "description": "for internal use",
                        "nullable": true
                    },
                    "consecutiveFails": {
                        "type": "integer",
                        "description": "number of consecutive failures due to missing permissions",
                        "format": "int32"
                    },
                    "lastFail": {
                        "type": "string",
                        "description": "time of last failure",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastSuccess": {
                        "type": "string",
                        "description": "time of last successful attempt",
                        "format": "date-time",
                        "nullable": true
                    },
                    "firstFail": {
                        "type": "string",
                        "description": "time of first successful attempt",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastFailErrorCode": {
                        "type": "string",
                        "description": "error code for last failed attempt",
                        "nullable": true
                    },
                    "lastFailMessage": {
                        "type": "string",
                        "description": "error message for last failed attempt",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "retryMetadata": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/MissingPermissionMetadataViewModel"
                            }
                        ]
                    },
                    "cloudAccountId": {
                        "type": "string",
                        "description": "Cloud account id",
                        "format": "guid"
                    },
                    "vendor": {
                        "description": "cloud account provider (AWS, Azure, GCP)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CloudVendor"
                            }
                        ]
                    }
                }
            },
            "MissingPermissionMetadataViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "missingPermissions",
                    "missingPermissions",
                    "entityType",
                    "entityType",
                    "subType",
                    "subType"
                ],
                "properties": {
                    "missingPermissions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "entityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "subType": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "OciVendorDetailsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "vendor",
                    "vendor",
                    "supportedRegions",
                    "supportedRegions"
                ],
                "properties": {
                    "vendor": {
                        "$ref": "#/components/schemas/CloudVendor"
                    },
                    "supportedRegions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/OciRegionMetaData"
                        }
                    }
                }
            },
            "OciRegionMetaData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RegionMetadataBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "region",
                            "region",
                            "cloudRegionXID",
                            "cloudRegionXID"
                        ],
                        "properties": {
                            "region": {
                                "$ref": "#/components/schemas/CloudRegion"
                            },
                            "cloudRegionXID": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "RegionMetadataBase": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "description",
                    "description",
                    "latitude",
                    "latitude",
                    "longitude",
                    "longitude",
                    "regionNumber",
                    "regionNumber"
                ],
                "properties": {
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "regionNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "RegionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "description",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "ContinuousCompliancePolicyViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "targetType",
                    "targetType",
                    "vendor",
                    "vendor",
                    "targetInternalId",
                    "targetInternalId",
                    "targetExternalId",
                    "targetExternalId",
                    "rulesetId",
                    "rulesetId",
                    "rulesetVersion",
                    "rulesetVersion",
                    "notificationIds",
                    "notificationIds",
                    "errorMessage",
                    "errorMessage"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetType": {
                        "$ref": "#/components/schemas/ContinuousCompliancePolicyTargetType"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/ContinuousCompliancePolicyTargetType"
                    },
                    "targetInternalId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "targetExternalId": {
                        "type": "string"
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rulesetVersion": {
                        "type": "string",
                        "default": "Latest"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                }
            },
            "ContinuousCompliancePolicyRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "targetType",
                    "rulesetId",
                    "notificationIds",
                    "targetId",
                    "targetId",
                    "targetType",
                    "rulesetId",
                    "rulesetVersion",
                    "rulesetVersion",
                    "notificationIds"
                ],
                "properties": {
                    "targetId": {
                        "type": "string"
                    },
                    "targetType": {
                        "$ref": "#/components/schemas/ContinuousCompliancePolicyTargetType"
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rulesetVersion": {
                        "type": "string",
                        "nullable": true
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                }
            },
            "EvaluateRulesetVersionsRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rulesetId",
                    "rulesetId",
                    "cloudAccountIds",
                    "cloudAccountIds"
                ],
                "properties": {
                    "rulesetId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cloudAccountIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                }
            },
            "ModulesViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "modules",
                    "modules",
                    "total",
                    "total"
                ],
                "properties": {
                    "modules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleViewModel"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ModuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "filename",
                    "filename",
                    "runtime",
                    "runtime",
                    "sha256",
                    "sha256",
                    "version",
                    "version",
                    "description",
                    "description",
                    "entrypoint",
                    "entrypoint",
                    "latest",
                    "latest",
                    "os",
                    "os",
                    "arch",
                    "arch"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "sha256": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "entrypoint": {
                        "type": "string"
                    },
                    "latest": {
                        "type": "boolean"
                    },
                    "shadow-release": {
                        "type": "boolean"
                    },
                    "publish-date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "os": {
                        "type": "string"
                    },
                    "arch": {
                        "type": "string"
                    }
                }
            },
            "PublishModuleRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "filename",
                    "runtime",
                    "base64String",
                    "shA256",
                    "version",
                    "os",
                    "arch",
                    "description",
                    "filename",
                    "runtime",
                    "base64String",
                    "shA256",
                    "version",
                    "os",
                    "arch",
                    "description",
                    "entrypoint",
                    "entrypoint",
                    "latest",
                    "latest",
                    "shadowRelease",
                    "shadowRelease"
                ],
                "properties": {
                    "filename": {
                        "type": "string",
                        "maxLength": 30,
                        "minLength": 1
                    },
                    "runtime": {
                        "type": "string",
                        "minLength": 1
                    },
                    "base64String": {
                        "type": "string",
                        "minLength": 1
                    },
                    "shA256": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 64
                    },
                    "version": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\\\\\/\\-_.]*$"
                    },
                    "os": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "string"
                        }
                    },
                    "arch": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 200,
                        "minLength": 1
                    },
                    "entrypoint": {
                        "type": "string",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "latest": {
                        "type": "boolean"
                    },
                    "shadowRelease": {
                        "type": "boolean"
                    }
                }
            },
            "IntegrationViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "name",
                    "type",
                    "configuration",
                    "id",
                    "name",
                    "type",
                    "createdAt",
                    "createdAt",
                    "configuration"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Integration Id",
                        "format": "guid",
                        "minLength": 1
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 0
                    },
                    "type": {
                        "$ref": "#/components/schemas/IntegrationType"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "configuration": {
                        "anyOf": [
                            {
                                "title": "WebhookConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "url",
                                            "methodType",
                                            "authType",
                                            "url",
                                            "methodType",
                                            "authType",
                                            "username",
                                            "username",
                                            "password",
                                            "password",
                                            "ignoreCertificate",
                                            "ignoreCertificate"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "methodType": {
                                                "$ref": "#/components/schemas/MethodType"
                                            },
                                            "authType": {
                                                "$ref": "#/components/schemas/AuthType"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            },
                                            "ignoreCertificate": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "TeamsConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "url",
                                            "url"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "minLength": 1
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "SumoLogicConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/0"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            {
                                "title": "SplunkConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/0"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            {
                                "title": "SnsConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "topicArn",
                                            "topicArn"
                                        ],
                                        "properties": {
                                            "topicArn": {
                                                "type": "string",
                                                "minLength": 1,
                                                "pattern": "^arn:(?<partition>(aws[\\w\\-]*)):(?<service>[\\w]*):(?<region>[\\w\\d-]*):(?<accountId>[\\d]*):(((?<resource>[\\w+=,\\.@\\-_ ]+)[\\/:]?)+)$"
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "SlackConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "url",
                                            "url"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "minLength": 1
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "ServiceNowConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/0"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            {
                                "title": "QradarConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "url",
                                            "password",
                                            "url",
                                            "password",
                                            "ignoreCertificate",
                                            "ignoreCertificate"
                                        ],
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "password": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "ignoreCertificate": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "PagerDutyConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "serviceKey",
                                            "serviceKey"
                                        ],
                                        "properties": {
                                            "serviceKey": {
                                                "type": "string",
                                                "minLength": 1
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "JiraConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/0"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "advancedUrl",
                                            "advancedUrl"
                                        ],
                                        "properties": {
                                            "advancedUrl": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "GcpSecurityCommandCenterConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "projectId",
                                            "projectId",
                                            "sourceId",
                                            "sourceId"
                                        ],
                                        "properties": {
                                            "projectId": {
                                                "type": "string"
                                            },
                                            "sourceId": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "EventarcConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "channelConnectionId",
                                            "channelConnectionId"
                                        ],
                                        "properties": {
                                            "channelConnectionId": {
                                                "type": "string",
                                                "minLength": 1
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "EmailConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "recipients",
                                            "recipients"
                                        ],
                                        "properties": {
                                            "recipients": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "AzureDefenderConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "subscription",
                                            "subscription"
                                        ],
                                        "properties": {
                                            "subscription": {
                                                "type": "string",
                                                "format": "guid",
                                                "minLength": 1
                                            }
                                        }
                                    }
                                ]
                            },
                            {
                                "title": "AwsSecurityHubConfiguration",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "externalAccountId",
                                            "externalAccountId",
                                            "region",
                                            "region",
                                            "defaultRegion",
                                            "defaultRegion",
                                            "includeAllAccounts",
                                            "includeAllAccounts",
                                            "includeAllRegions",
                                            "includeAllRegions"
                                        ],
                                        "properties": {
                                            "externalAccountId": {
                                                "type": "string"
                                            },
                                            "region": {
                                                "nullable": true,
                                                "oneOf": [
                                                    {
                                                        "$ref": "#/components/schemas/CloudRegion"
                                                    }
                                                ]
                                            },
                                            "defaultRegion": {
                                                "nullable": true,
                                                "oneOf": [
                                                    {
                                                        "$ref": "#/components/schemas/CloudRegion"
                                                    }
                                                ]
                                            },
                                            "includeAllAccounts": {
                                                "type": "boolean"
                                            },
                                            "includeAllRegions": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            },
            "IntegrationType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "SNS",
                    "Email",
                    "PagerDuty",
                    "AwsSecurityHub",
                    "AzureDefender",
                    "GcpSecurityCommandCenter",
                    "Webhook",
                    "ServiceNow",
                    "Splunk",
                    "Jira",
                    "SumoLogic",
                    "QRadar",
                    "Slack",
                    "Teams",
                    "EventArc"
                ],
                "enum": [
                    "SNS",
                    "Email",
                    "PagerDuty",
                    "AwsSecurityHub",
                    "AzureDefender",
                    "GcpSecurityCommandCenter",
                    "Webhook",
                    "ServiceNow",
                    "Splunk",
                    "Jira",
                    "SumoLogic",
                    "QRadar",
                    "Slack",
                    "Teams",
                    "EventArc"
                ]
            },
            "WebhookConfiguration": {
                "title": "WebhookConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "url",
                            "methodType",
                            "authType",
                            "url",
                            "methodType",
                            "authType",
                            "username",
                            "username",
                            "password",
                            "password",
                            "ignoreCertificate",
                            "ignoreCertificate"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "minLength": 1
                            },
                            "methodType": {
                                "$ref": "#/components/schemas/MethodType"
                            },
                            "authType": {
                                "$ref": "#/components/schemas/AuthType"
                            },
                            "username": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "ignoreCertificate": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "MethodType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Post",
                    "Put"
                ],
                "enum": [
                    "Post",
                    "Put"
                ]
            },
            "AuthType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "NoAuth",
                    "BasicAuth"
                ],
                "enum": [
                    "NoAuth",
                    "BasicAuth"
                ]
            },
            "BaseConfiguration": {
                "type": "object",
                "x-abstract": true,
                "additionalProperties": false
            },
            "TeamsConfiguration": {
                "title": "TeamsConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "url",
                            "url"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                ]
            },
            "SumoLogicConfiguration": {
                "title": "SumoLogicConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/0"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    }
                ]
            },
            "SplunkConfiguration": {
                "title": "SplunkConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/0"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    }
                ]
            },
            "SnsConfiguration": {
                "title": "SnsConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "topicArn",
                            "topicArn"
                        ],
                        "properties": {
                            "topicArn": {
                                "type": "string",
                                "minLength": 1,
                                "pattern": "^arn:(?<partition>(aws[\\w\\-]*)):(?<service>[\\w]*):(?<region>[\\w\\d-]*):(?<accountId>[\\d]*):(((?<resource>[\\w+=,\\.@\\-_ ]+)[\\/:]?)+)$"
                            }
                        }
                    }
                ]
            },
            "SlackConfiguration": {
                "title": "SlackConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "url",
                            "url"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                ]
            },
            "ServiceNowConfiguration": {
                "title": "ServiceNowConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/0"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    }
                ]
            },
            "QradarConfiguration": {
                "title": "QradarConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "url",
                            "password",
                            "url",
                            "password",
                            "ignoreCertificate",
                            "ignoreCertificate"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "minLength": 1
                            },
                            "password": {
                                "type": "string",
                                "minLength": 1
                            },
                            "ignoreCertificate": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "PagerDutyConfiguration": {
                "title": "PagerDutyConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "serviceKey",
                            "serviceKey"
                        ],
                        "properties": {
                            "serviceKey": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                ]
            },
            "JiraConfiguration": {
                "title": "JiraConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/0"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "advancedUrl",
                            "advancedUrl"
                        ],
                        "properties": {
                            "advancedUrl": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "GcpSecurityCommandCenterConfiguration": {
                "title": "GcpSecurityCommandCenterConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "projectId",
                            "projectId",
                            "sourceId",
                            "sourceId"
                        ],
                        "properties": {
                            "projectId": {
                                "type": "string"
                            },
                            "sourceId": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "EventarcConfiguration": {
                "title": "EventarcConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "channelConnectionId",
                            "channelConnectionId"
                        ],
                        "properties": {
                            "channelConnectionId": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                ]
            },
            "EmailConfiguration": {
                "title": "EmailConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "recipients",
                            "recipients"
                        ],
                        "properties": {
                            "recipients": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "AzureDefenderConfiguration": {
                "title": "AzureDefenderConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "subscription",
                            "subscription"
                        ],
                        "properties": {
                            "subscription": {
                                "type": "string",
                                "format": "guid",
                                "minLength": 1
                            }
                        }
                    }
                ]
            },
            "AwsSecurityHubConfiguration": {
                "title": "AwsSecurityHubConfiguration",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "externalAccountId",
                            "externalAccountId",
                            "region",
                            "region",
                            "defaultRegion",
                            "defaultRegion",
                            "includeAllAccounts",
                            "includeAllAccounts",
                            "includeAllRegions",
                            "includeAllRegions"
                        ],
                        "properties": {
                            "externalAccountId": {
                                "type": "string"
                            },
                            "region": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/CloudRegion"
                                    }
                                ]
                            },
                            "defaultRegion": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/CloudRegion"
                                    }
                                ]
                            },
                            "includeAllAccounts": {
                                "type": "boolean"
                            },
                            "includeAllRegions": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "NotificationEntity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseNotification"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "integrationSettingsModel",
                            "origin",
                            "origin",
                            "integrationSettingsModel"
                        ],
                        "properties": {
                            "origin": {
                                "$ref": "#/components/schemas/AssessmentFindingOrigin"
                            },
                            "integrationSettingsModel": {
                                "$ref": "#/components/schemas/NotificationIntegrationSettingsModel"
                            }
                        }
                    }
                ]
            },
            "NotificationIntegrationSettingsModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "reportsIntegrationSettings",
                    "reportsIntegrationSettings",
                    "singleNotificationIntegrationSettings",
                    "singleNotificationIntegrationSettings",
                    "scheduledIntegrationSettings",
                    "scheduledIntegrationSettings"
                ],
                "properties": {
                    "reportsIntegrationSettings": {
                        "type": "array",
                        "description": "List of the integration settings which are used to send a report notification\nThis currently only supports 3 integrations types: Teams, Slack and Email. \nConstraints: You can create and attach all 3 types of integrations, but can attach only one of each type \nExample: \n      ReportIntegrationSetting can have 1 Slack integration, 1 Email integration and 1 Teams integration \n      ReportIntegrationSetting can NOT have 1 Slack integration and 2 Email integrations",
                        "items": {
                            "$ref": "#/components/schemas/ReportNotificationIntegrationSettings"
                        }
                    },
                    "singleNotificationIntegrationSettings": {
                        "type": "array",
                        "description": "List of the integration settings which are used to send immediate notifications\nConstraints:  \n    This currently supports a one integration setting for each integration setting for the following integration types: \n    one 'Http endpoint integration', Http endpoint can be of the following types: Webhook, Splunk, ServiceNow, QRadar, SumoLogic, Jira\n    one of type: {SNS}\n    one of type: {Email}\n    one of type: {EventArc}\n    one of type: {Slack}\n    one of type: {Teams}\n    one of type: Security Management System {GcpSecurityCommandCenter}\n    one of type: Security Management System {AwsSecurityHub}\n    one of type: Security Management System {AzureDefender}\n    one of type: Ticketing system {PagerDuty} ",
                        "items": {
                            "$ref": "#/components/schemas/SingleNotificationIntegrationSettings"
                        }
                    },
                    "scheduledIntegrationSettings": {
                        "type": "array",
                        "description": "This is a list of the integration settings which are used to schedule a reports notification\nConstraints: \n    This currently only support a single item in the list.  \n    This supports integration of type: Email",
                        "items": {
                            "$ref": "#/components/schemas/ScheduledNotificationIntegrationSettings"
                        }
                    }
                }
            },
            "ReportNotificationIntegrationSettings": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseNotificationIntegrationSettings"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    }
                ]
            },
            "BaseNotificationIntegrationSettings": {
                "type": "object",
                "x-abstract": true,
                "additionalProperties": false,
                "required": [
                    "integrationId",
                    "integrationId",
                    "outputType",
                    "outputType",
                    "filter",
                    "filter"
                ],
                "properties": {
                    "integrationId": {
                        "type": "string",
                        "description": "Integration Id attached",
                        "format": "guid",
                        "minLength": 1
                    },
                    "outputType": {
                        "description": "(*Optional) - Notification integration setting output type Required for some integrations ",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NotificationOutputType"
                            }
                        ]
                    },
                    "filter": {
                        "description": "(*Optional) - Notification integration setting filter, should be the same for all integration settings\nConstraints:\nScheduled notification integration settings should have null filter.",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ComplianceNotificationFilter"
                            }
                        ]
                    }
                }
            },
            "NotificationOutputType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Default",
                    "Detailed",
                    "Summary",
                    "FullCsv",
                    "FullCsvZip",
                    "ExecutivePlatform",
                    "JsonFullEntity",
                    "JsonSimpleEntity",
                    "PlainText",
                    "TemplateBased",
                    "CustomOutputFormat"
                ],
                "enum": [
                    "Default",
                    "Detailed",
                    "Summary",
                    "FullCsv",
                    "FullCsvZip",
                    "ExecutivePlatform",
                    "JsonFullEntity",
                    "JsonSimpleEntity",
                    "PlainText",
                    "TemplateBased",
                    "CustomOutputFormat"
                ]
            },
            "SingleNotificationIntegrationSettings": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseNotificationIntegrationSettings"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "payload",
                            "payload"
                        ],
                        "properties": {
                            "payload": {
                                "type": "string",
                                "description": "Payload of Jira integration",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "ScheduledNotificationIntegrationSettings": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseNotificationIntegrationSettings"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "cronExpression",
                            "cronExpression"
                        ],
                        "properties": {
                            "cronExpression": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                ]
            },
            "BaseNotification": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RootEntityBase"
                    },
                    {
                        "type": "object",
                        "x-abstract": true,
                        "additionalProperties": false,
                        "required": [
                            "name",
                            "id",
                            "id",
                            "name",
                            "description",
                            "description",
                            "alertsConsole",
                            "alertsConsole",
                            "sendOnEachOccurrence",
                            "sendOnEachOccurrence"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "guid"
                            },
                            "name": {
                                "type": "string",
                                "maxLength": 100,
                                "minLength": 0
                            },
                            "description": {
                                "type": "string",
                                "maxLength": 500,
                                "minLength": 0
                            },
                            "alertsConsole": {
                                "type": "boolean"
                            },
                            "sendOnEachOccurrence": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "IntegrationPostRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "type",
                    "configuration",
                    "name",
                    "type",
                    "configuration"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Integration name, should be unique",
                        "maxLength": 50,
                        "minLength": 0
                    },
                    "type": {
                        "description": "Integration type",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/IntegrationType"
                            }
                        ]
                    },
                    "configuration": {
                        "description": "Integration configuration, should be a valid JSON object according to the integration type",
                        "anyOf": [
                            {
                                "title": "WebhookConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/0"
                            },
                            {
                                "title": "TeamsConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/1"
                            },
                            {
                                "title": "SumoLogicConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/2"
                            },
                            {
                                "title": "SplunkConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/3"
                            },
                            {
                                "title": "SnsConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/4"
                            },
                            {
                                "title": "SlackConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/5"
                            },
                            {
                                "title": "ServiceNowConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/6"
                            },
                            {
                                "title": "QradarConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/7"
                            },
                            {
                                "title": "PagerDutyConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/8"
                            },
                            {
                                "title": "JiraConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/9"
                            },
                            {
                                "title": "GcpSecurityCommandCenterConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/10"
                            },
                            {
                                "title": "EventarcConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/11"
                            },
                            {
                                "title": "EmailConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/12"
                            },
                            {
                                "title": "AzureDefenderConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/13"
                            },
                            {
                                "title": "AwsSecurityHubConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/14"
                            }
                        ]
                    }
                }
            },
            "IntegrationUpdateRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "name",
                    "type",
                    "configuration",
                    "id",
                    "name",
                    "type",
                    "configuration"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Name should be unique across all integration of the same type ",
                        "maxLength": 50,
                        "minLength": 0
                    },
                    "type": {
                        "$ref": "#/components/schemas/IntegrationType"
                    },
                    "configuration": {
                        "description": "Integration configuration, should be a valid JSON object according to the integration type",
                        "anyOf": [
                            {
                                "title": "WebhookConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/0"
                            },
                            {
                                "title": "TeamsConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/1"
                            },
                            {
                                "title": "SumoLogicConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/2"
                            },
                            {
                                "title": "SplunkConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/3"
                            },
                            {
                                "title": "SnsConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/4"
                            },
                            {
                                "title": "SlackConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/5"
                            },
                            {
                                "title": "ServiceNowConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/6"
                            },
                            {
                                "title": "QradarConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/7"
                            },
                            {
                                "title": "PagerDutyConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/8"
                            },
                            {
                                "title": "JiraConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/9"
                            },
                            {
                                "title": "GcpSecurityCommandCenterConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/10"
                            },
                            {
                                "title": "EventarcConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/11"
                            },
                            {
                                "title": "EmailConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/12"
                            },
                            {
                                "title": "AzureDefenderConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/13"
                            },
                            {
                                "title": "AwsSecurityHubConfiguration",
                                "$ref": "#/components/schemas/IntegrationViewModel/properties/configuration/anyOf/14"
                            }
                        ]
                    }
                }
            },
            "ResponseNotificationViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseNotificationViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "id",
                            "createdAt",
                            "createdAt"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Notification Id",
                                "format": "guid"
                            },
                            "createdAt": {
                                "type": "string",
                                "description": "Notification created time",
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "BaseNotificationViewModel": {
                "type": "object",
                "x-abstract": true,
                "additionalProperties": false,
                "required": [
                    "name",
                    "integrationSettingsModel",
                    "name",
                    "description",
                    "description",
                    "alertsConsole",
                    "alertsConsole",
                    "sendOnEachOccurrence",
                    "sendOnEachOccurrence",
                    "origin",
                    "origin",
                    "integrationSettingsModel"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Notification name, should be unique",
                        "minLength": 1
                    },
                    "description": {
                        "type": "string"
                    },
                    "alertsConsole": {
                        "type": "boolean",
                        "description": "(*Optional) - Enable alert Console, default is true"
                    },
                    "sendOnEachOccurrence": {
                        "type": "boolean",
                        "description": "Send a notification on each security event occurrence, default is false"
                    },
                    "origin": {
                        "description": "Notification origin of data",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssessmentFindingOrigin"
                            }
                        ]
                    },
                    "integrationSettingsModel": {
                        "description": "Notification integration settings",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NotificationIntegrationSettingsModel"
                            }
                        ]
                    }
                }
            },
            "ResponseEnrichedNotificationViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResponseNotificationViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "integrations",
                            "integrations"
                        ],
                        "properties": {
                            "integrations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IntegrationViewModel"
                                }
                            }
                        }
                    }
                ]
            },
            "PostNotificationViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseNotificationViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    }
                ]
            },
            "PutNotificationViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseNotificationViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "guid",
                                "minLength": 1
                            }
                        }
                    }
                ]
            },
            "AssetMetadataSyncNowViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "platform",
                    "environmentId",
                    "platform",
                    "environmentId"
                ],
                "properties": {
                    "platform": {
                        "$ref": "#/components/schemas/CloudVendor"
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    }
                }
            },
            "BusinessPriorityModifierAddRuleRequestViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BusinessPriorityModifierRuleViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    }
                ]
            },
            "BusinessPriorityModifierRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ruleName",
                    "ruleDefinition",
                    "ruleName",
                    "priority",
                    "priority",
                    "ruleDefinition"
                ],
                "properties": {
                    "ruleName": {
                        "type": "string",
                        "description": "Custom rule name",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority to set for matched assets (\"Undefined\" / \"Minor Importance\" / \"Important\" / \"High Importance\" / \"Crown Jewel\")",
                        "nullable": true
                    },
                    "ruleDefinition": {
                        "description": "The rule definition to use when matching assets",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BusinessPriorityModifierRuleDefinitionViewModel"
                            }
                        ]
                    }
                }
            },
            "BusinessPriorityModifierRuleDefinitionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "assetNameContains",
                    "assetNameContains",
                    "environments",
                    "environments",
                    "organizationalUnits",
                    "organizationalUnits",
                    "assetTags",
                    "assetTags"
                ],
                "properties": {
                    "assetNameContains": {
                        "type": "array",
                        "description": "Match assets with a name that contains one of the provided strings",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "description": "Match assets from the provided environments",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/BusinessPriorityModifierRuleEnvironmentViewModel"
                        }
                    },
                    "organizationalUnits": {
                        "type": "array",
                        "description": "Match assets from the provided environments",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/BusinessPriorityModifierRuleOrganizationalUnitViewModel"
                        }
                    },
                    "assetTags": {
                        "type": "array",
                        "description": "Match assets with at least one tag from the provided list of tags",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/BusinessPriorityModifierTagViewModel"
                        }
                    }
                }
            },
            "BusinessPriorityModifierRuleEnvironmentViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "cloudAccountId",
                    "cloudAccountId",
                    "platform",
                    "platform"
                ],
                "properties": {
                    "cloudAccountId": {
                        "type": "string",
                        "description": "The environment ID",
                        "format": "guid",
                        "minLength": 1
                    },
                    "platform": {
                        "description": "The environment platform (\"aws\" / \"azure\" / \"google\")",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssessmentCloudAccountType"
                            }
                        ]
                    }
                }
            },
            "BusinessPriorityModifierRuleOrganizationalUnitViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the OU",
                        "format": "guid",
                        "minLength": 1
                    }
                }
            },
            "BusinessPriorityModifierTagViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "value",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "maxLength": 127,
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    }
                }
            },
            "BusinessPriorityModifierUpdateRuleRequestViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BusinessPriorityModifierRuleWithIdViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    }
                ]
            },
            "BusinessPriorityModifierRuleWithIdViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BusinessPriorityModifierRuleViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "guid",
                                "minLength": 1
                            }
                        }
                    }
                ]
            },
            "CustomRulesetRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "platform",
                    "rulesetName",
                    "platform",
                    "rulesetName",
                    "rulesetId",
                    "rulesetId"
                ],
                "properties": {
                    "platform": {
                        "$ref": "#/components/schemas/PlatformViewModel"
                    },
                    "rulesetName": {
                        "type": "string",
                        "minLength": 1
                    },
                    "rulesetId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PlatformViewModel": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Aws",
                    "Azure",
                    "Google",
                    "Kubernetes"
                ],
                "enum": [
                    "Aws",
                    "Azure",
                    "Google",
                    "Kubernetes"
                ]
            },
            "PlatformRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "platform",
                    "platform"
                ],
                "properties": {
                    "platform": {
                        "$ref": "#/components/schemas/PlatformViewModel"
                    }
                }
            },
            "DspmSuggestionResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "dataAssets",
                    "dataAssets",
                    "dataAssetsWithDspmSupport",
                    "dataAssetsWithDspmSupport",
                    "totalCoverage",
                    "totalCoverage",
                    "coverageByTypes",
                    "coverageByTypes",
                    "sugggestions",
                    "sugggestions"
                ],
                "properties": {
                    "dataAssets": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "dataAssetsWithDspmSupport": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "totalCoverage": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/TotalCoverage"
                            }
                        ]
                    },
                    "coverageByTypes": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/CoverageByType"
                        }
                    },
                    "sugggestions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "TotalCoverage": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "dataAssets",
                    "dataAssets",
                    "dataAssetsCovered",
                    "dataAssetsCovered",
                    "coveragePercentage",
                    "coveragePercentage",
                    "environmentsWithSensitiveData",
                    "environmentsWithSensitiveData",
                    "environmentsWithSensitiveDataAndSecurityIssues",
                    "environmentsWithSensitiveDataAndSecurityIssues"
                ],
                "properties": {
                    "dataAssets": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "dataAssetsCovered": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "coveragePercentage": {
                        "type": "number",
                        "format": "double"
                    },
                    "environmentsWithSensitiveData": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "environmentsWithSensitiveDataAndSecurityIssues": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CoverageByType": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type",
                    "totalEnvironments",
                    "totalEnvironments",
                    "dspmEnabledEnvironments",
                    "dspmEnabledEnvironments",
                    "totalAssets",
                    "totalAssets",
                    "coveredAssets",
                    "coveredAssets"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalEnvironments": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "dspmEnabledEnvironments": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalAssets": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "coveredAssets": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "SentraGetAllResponseViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accounts",
                    "accounts"
                ],
                "properties": {
                    "accounts": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/SentraAccountResponseViewModel"
                        }
                    }
                }
            },
            "SentraAccountResponseViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "sentraOrganizationName",
                    "sentraOrganizationName",
                    "name",
                    "name",
                    "accountCredentials",
                    "accountCredentials",
                    "syncError",
                    "syncError",
                    "created",
                    "created",
                    "updated",
                    "updated",
                    "lastSuccessfulSync",
                    "lastSuccessfulSync"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "sentraOrganizationName": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountCredentials": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SentraCredentialsViewModel"
                            }
                        ]
                    },
                    "syncError": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SentraAccountErrorViewModel"
                            }
                        ]
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastSuccessfulSync": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "SentraCredentialsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "apiKey",
                    "apiKey",
                    "apiKeyName",
                    "apiKeyName",
                    "email",
                    "email"
                ],
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "apiKeyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SentraAccountErrorViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "errorTimestamp",
                    "errorTimestamp",
                    "error",
                    "error"
                ],
                "properties": {
                    "errorTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SentraCreateResponseViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            },
            "SentraCreateRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "apiKey",
                    "name",
                    "apiKey",
                    "name"
                ],
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1
                    }
                }
            },
            "SentraUpdateRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "apiKey",
                    "apiKey",
                    "name",
                    "name"
                ],
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    }
                }
            },
            "SecurityEventsOnAssetsRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "topN",
                    "topN",
                    "fields",
                    "fields",
                    "searchAfter",
                    "searchAfter"
                ],
                "properties": {
                    "topN": {
                        "type": "integer",
                        "description": "top N (number of findings to see). max = 100",
                        "format": "int32",
                        "nullable": true
                    },
                    "fields": {
                        "type": "array",
                        "description": "fields to filter (\"type\"=entityType, \"platform\", \"organizationalUnitId\", cloudAccountId)",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/FieldFilterViewModel"
                        }
                    },
                    "searchAfter": {
                        "type": "array",
                        "description": "token for the page of findings (first page if not specified)",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "FieldFilterViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "value",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "GetGroupsRiskRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "groupType",
                    "groupType",
                    "groupsIds",
                    "groupsIds",
                    "limit",
                    "limit"
                ],
                "properties": {
                    "groupType": {
                        "type": "string",
                        "description": "Group Type ",
                        "minLength": 1
                    },
                    "groupsIds": {
                        "type": "array",
                        "description": "Set Group Ids to get Risk Data for specific groups ",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Limit the response list size.  ",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": 1,
                        "nullable": true
                    }
                }
            },
            "RemediationActionsRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "Id",
                    "platform",
                    "type",
                    "cloudAccountId",
                    "id",
                    "Id",
                    "platform",
                    "type",
                    "cloudAccountId",
                    "region",
                    "region",
                    "size",
                    "size"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Rule Engine Id of the entity",
                        "minLength": 1
                    },
                    "Id": {
                        "type": "string",
                        "description": "The  id in SRL-accountId format",
                        "minLength": 1
                    },
                    "platform": {
                        "type": "string",
                        "description": "aws, azure, google, kubernetes",
                        "minLength": 1
                    },
                    "type": {
                        "type": "string",
                        "description": "Entity type ",
                        "minLength": 1
                    },
                    "cloudAccountId": {
                        "type": "string",
                        "description": " cloud account id",
                        "format": "guid",
                        "minLength": 1
                    },
                    "region": {
                        "type": "string",
                        "description": "Cloud region",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "The maximum size of remediation actions to be returned",
                        "format": "int32",
                        "default": 10,
                        "maximum": 20,
                        "minimum": 1
                    }
                }
            },
            "OptionalParametersSetRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "businessPriorityOptionalParameters",
                    "businessPriorityOptionalParameters",
                    "assetNameOptionalParameters",
                    "assetNameOptionalParameters"
                ],
                "properties": {
                    "businessPriorityOptionalParameters": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BusinessPriorityOptionalParameters"
                            }
                        ]
                    },
                    "assetNameOptionalParameters": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssetNameOptionalParameters"
                            }
                        ]
                    }
                }
            },
            "BusinessPriorityOptionalParameters": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "shouldConsider",
                    "shouldConsider"
                ],
                "properties": {
                    "shouldConsider": {
                        "type": "boolean"
                    }
                }
            },
            "AssetNameOptionalParameters": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "assetTypes",
                    "assetTypes"
                ],
                "properties": {
                    "assetTypes": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/AssetTypeConfiguration"
                        }
                    }
                }
            },
            "AssetTypeConfiguration": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "assetType",
                    "assetType",
                    "shouldConsider",
                    "shouldConsider"
                ],
                "properties": {
                    "assetType": {
                        "type": "string",
                        "nullable": true
                    },
                    "shouldConsider": {
                        "type": "boolean"
                    }
                }
            },
            "OrganizationManagementViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "accountId",
                    "accountId",
                    "externalOrganizationId",
                    "externalOrganizationId",
                    "externalManagementAccountId",
                    "externalManagementAccountId",
                    "managementAccountStackId",
                    "managementAccountStackId",
                    "managementAccountStackRegion",
                    "managementAccountStackRegion",
                    "onboardingConfiguration",
                    "onboardingConfiguration",
                    "userId",
                    "userId",
                    "enableStackModify",
                    "enableStackModify",
                    "stackSetArn",
                    "stackSetArn",
                    "organizationName",
                    "organizationName",
                    "updateTime",
                    "updateTime",
                    "creationTime",
                    "creationTime",
                    "stackSetRegions",
                    "stackSetRegions",
                    "stackSetOrganizationalUnitIds",
                    "stackSetOrganizationalUnitIds"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "externalOrganizationId": {
                        "type": "string"
                    },
                    "externalManagementAccountId": {
                        "type": "string"
                    },
                    "managementAccountStackId": {
                        "type": "string"
                    },
                    "managementAccountStackRegion": {
                        "type": "string"
                    },
                    "onboardingConfiguration": {
                        "$ref": "#/components/schemas/AwsOrganizationOnboardingConfiguration"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "enableStackModify": {
                        "type": "boolean"
                    },
                    "stackSetArn": {
                        "type": "string"
                    },
                    "organizationName": {
                        "type": "string"
                    },
                    "updateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "creationTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "stackSetRegions": {
                        "type": "array",
                        "description": "A list of all Amazon Web Services Regions the given StackSet has stack instances deployed in.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "stackSetOrganizationalUnitIds": {
                        "type": "array",
                        "description": "The organization root ID or organizational unit (OU) IDs that the client specified for the StackSet DeploymentTargets.",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AwsOrganizationOnboardingConfiguration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationOnboardingConfigurationBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    }
                ]
            },
            "OrganizationOnboardingConfigurationBase": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "organizationRootOuId",
                    "organizationRootOuId",
                    "mappingStrategy",
                    "mappingStrategy",
                    "postureManagement",
                    "postureManagement"
                ],
                "properties": {
                    "organizationRootOuId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "mappingStrategy": {
                        "$ref": "#/components/schemas/MappingStrategyType"
                    },
                    "postureManagement": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PostureManagementConfiguration"
                            }
                        ]
                    }
                }
            },
            "MappingStrategyType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Flat",
                    "Clone"
                ],
                "enum": [
                    "Flat",
                    "Clone"
                ]
            },
            "PostureManagementConfiguration": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rulesetsIds",
                    "rulesetsIds",
                    "onboardingMode",
                    "onboardingMode"
                ],
                "properties": {
                    "rulesetsIds": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "onboardingMode": {
                        "$ref": "#/components/schemas/OnboardingMode"
                    }
                }
            },
            "OnboardingMode": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Read",
                    "Manage"
                ],
                "enum": [
                    "Read",
                    "Manage"
                ]
            },
            "OnboardingRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidateStackSetArnRequest"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "enableStackModify",
                            "awsOrganizationName",
                            "awsOrganizationName",
                            "enableStackModify"
                        ],
                        "properties": {
                            "awsOrganizationName": {
                                "type": "string",
                                "description": "Not required.",
                                "nullable": true
                            },
                            "enableStackModify": {
                                "type": "boolean",
                                "description": "Required. Default is false, it's for future use."
                            }
                        }
                    }
                ]
            },
            "ValidateStackSetArnRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OnboardingPermissionRequest"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "stackSetArn",
                            "stackSetArn"
                        ],
                        "properties": {
                            "stackSetArn": {
                                "type": "string",
                                "description": "The created StackSet ARN.",
                                "pattern": "^arn:(?<partition>(aws[\\w\\-]*)):(?<service>[\\w]*):(?<region>[\\w\\d-]*):(?<accountId>[\\d]*):stackset\\/(((?<resource>[\\w+=,\\.@\\-_ ]+)[\\/]?)+):(((?<subresource>[\\w+=,\\.@\\-_ ]+)[\\/:]?)+)?$"
                            }
                        }
                    }
                ]
            },
            "OnboardingPermissionRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "secret",
                    "roleArn",
                    "roleArn",
                    "secret",
                    "apiKey",
                    "apiKey"
                ],
                "properties": {
                    "roleArn": {
                        "type": "string",
                        "description": "CloudGuard role arn from AWS.\nAWS China accounts supported only in CloudGuard China DC.",
                        "pattern": "^arn:(aws|aws-cn):iam::\\d{12}:role\\/[A-Za-z0-9]+(?:-[A-Za-z0-9]+)+$"
                    },
                    "secret": {
                        "type": "string",
                        "description": "Also known as ExternalId from management-stack API.\nthis value should be the one that returns from: management-stack API.",
                        "pattern": "^[\\w+=,.@:\\/-]{12,1224}$"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "Should be null.\nNeeded only for 'UserBased' Type.",
                        "nullable": true
                    }
                }
            },
            "OnboardingUpdateRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "awsOrganizationName",
                    "awsOrganizationName",
                    "enableStackModify",
                    "enableStackModify"
                ],
                "properties": {
                    "awsOrganizationName": {
                        "type": "string",
                        "description": "AWS organization name.",
                        "nullable": true
                    },
                    "enableStackModify": {
                        "type": "boolean",
                        "description": "Required. Default is false, it's for future use."
                    }
                }
            },
            "UpdateStackSetArnRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "stackSetArn",
                    "stackSetArn"
                ],
                "properties": {
                    "stackSetArn": {
                        "type": "string",
                        "description": "The created StackSet ARN.",
                        "pattern": "^arn:(?<partition>(aws[\\w\\-]*)):(?<service>[\\w]*):(?<region>[\\w\\d-]*):(?<accountId>[\\d]*):stackset\\/(((?<resource>[\\w+=,\\.@\\-_ ]+)[\\/]?)+):(((?<subresource>[\\w+=,\\.@\\-_ ]+)[\\/:]?)+)?$"
                    }
                }
            },
            "UpdateConfigurationRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "mappingStrategy",
                    "postureManagement",
                    "organizationRootOuId",
                    "organizationRootOuId",
                    "mappingStrategy",
                    "postureManagement"
                ],
                "properties": {
                    "organizationRootOuId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "mappingStrategy": {
                        "$ref": "#/components/schemas/MappingStrategyType"
                    },
                    "postureManagement": {
                        "$ref": "#/components/schemas/PostureManagementConfiguration"
                    }
                }
            },
            "ManagementCftConfiguration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OnboardingCftBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "managementCftUrl",
                            "managementCftUrl",
                            "isManagementOnboarded",
                            "isManagementOnboarded"
                        ],
                        "properties": {
                            "managementCftUrl": {
                                "type": "string",
                                "description": "Management Cft Url for s3."
                            },
                            "isManagementOnboarded": {
                                "type": "boolean",
                                "description": "Is management account already onboarded to CloudGuard."
                            }
                        }
                    }
                ]
            },
            "OnboardingCftBase": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "externalId",
                    "externalId",
                    "content",
                    "content"
                ],
                "properties": {
                    "externalId": {
                        "type": "string",
                        "description": "Used in the CloudGuard role."
                    },
                    "content": {
                        "type": "string",
                        "description": "Content of the CFT."
                    }
                }
            },
            "OnboardingMemberCft": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OnboardingCftBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "onboardingCftUrl",
                            "onboardingCftUrl"
                        ],
                        "properties": {
                            "onboardingCftUrl": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "OrganizationManagementViewModel2": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "accountId",
                    "accountId",
                    "userId",
                    "userId",
                    "organizationName",
                    "organizationName",
                    "tenantId",
                    "tenantId",
                    "managementGroupId",
                    "managementGroupId",
                    "appRegistrationName",
                    "appRegistrationName",
                    "onboardingConfiguration",
                    "onboardingConfiguration",
                    "updateTime",
                    "updateTime",
                    "creationTime",
                    "creationTime",
                    "isAutoOnboarding",
                    "isAutoOnboarding"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "organizationName": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "managementGroupId": {
                        "type": "string"
                    },
                    "appRegistrationName": {
                        "type": "string",
                        "nullable": true
                    },
                    "onboardingConfiguration": {
                        "$ref": "#/components/schemas/AzureOrganizationOnboardingConfiguration"
                    },
                    "updateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "creationTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "isAutoOnboarding": {
                        "type": "boolean"
                    }
                }
            },
            "AzureOrganizationOnboardingConfiguration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationOnboardingConfigurationBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "awpConfiguration",
                            "awpConfiguration",
                            "serverlessConfiguration",
                            "serverlessConfiguration",
                            "cdrConfiguration",
                            "cdrConfiguration",
                            "isAutoOnboarding",
                            "isAutoOnboarding"
                        ],
                        "properties": {
                            "awpConfiguration": {
                                "description": "AWP blade configuration",
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/AwpConfiguration"
                                    }
                                ]
                            },
                            "serverlessConfiguration": {
                                "description": "Serverless blade configuration",
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/ServerlessConfiguration"
                                    }
                                ]
                            },
                            "cdrConfiguration": {
                                "description": "CDR blade configuration",
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/CdrConfiguration"
                                    }
                                ]
                            },
                            "isAutoOnboarding": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "AwpConfiguration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BladeConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "onboardingMode",
                            "onboardingMode",
                            "centralizedSubscriptionId",
                            "centralizedSubscriptionId",
                            "withFunctionAppsScan",
                            "withFunctionAppsScan"
                        ],
                        "properties": {
                            "onboardingMode": {
                                "default": 1,
                                "$ref": "#/components/schemas/AwpOnboardingMode"
                            },
                            "centralizedSubscriptionId": {
                                "type": "string",
                                "nullable": true
                            },
                            "withFunctionAppsScan": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "AwpOnboardingMode": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "saas",
                    "inAccount",
                    "inAccountHub"
                ],
                "enum": [
                    "saas",
                    "inAccount",
                    "inAccountHub"
                ]
            },
            "BladeConfiguration": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "isEnabled",
                    "isEnabled"
                ],
                "properties": {
                    "isEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "ServerlessConfiguration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BladeConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    }
                ]
            },
            "CdrConfiguration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BladeConfiguration"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "accounts",
                            "accounts"
                        ],
                        "properties": {
                            "accounts": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/StorageAccount"
                                }
                            }
                        }
                    }
                ]
            },
            "StorageAccount": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "storageId",
                    "storageId",
                    "logTypes",
                    "logTypes"
                ],
                "properties": {
                    "storageId": {
                        "type": "string",
                        "nullable": true
                    },
                    "logTypes": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "OnboardingRequest2": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "tenantId",
                    "activeBlades",
                    "workflowId",
                    "workflowId",
                    "tenantId",
                    "managementGroupId",
                    "managementGroupId",
                    "organizationName",
                    "organizationName",
                    "appRegistrationName",
                    "appRegistrationName",
                    "clientId",
                    "clientId",
                    "clientSecret",
                    "clientSecret",
                    "activeBlades",
                    "vendor",
                    "vendor",
                    "useCloudGuardManagedApp",
                    "useCloudGuardManagedApp",
                    "isAutoOnboarding",
                    "isAutoOnboarding"
                ],
                "properties": {
                    "workflowId": {
                        "type": "string",
                        "description": "Not required",
                        "format": "guid",
                        "default": "47db47a1-b407-448f-ac38-5f61130562c7"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Required\nThe Tenant ID to onboard"
                    },
                    "managementGroupId": {
                        "type": "string",
                        "description": "The Management Group ID to onboard",
                        "nullable": true
                    },
                    "organizationName": {
                        "type": "string",
                        "description": "Not required. Default is 'AzureOrg'",
                        "nullable": true
                    },
                    "appRegistrationName": {
                        "type": "string",
                        "description": "Required only if non UseCloudGuardManagedApp mode is used\nThe name of the application created in the script",
                        "nullable": true
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Application (client) ID\nRequired only if non UseCloudGuardManagedApp mode is used\nThe value of this field is printed at the end of the script",
                        "format": "guid",
                        "nullable": true
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Required only if non UseCloudGuardManagedApp mode is used\nThe value of this field is printed at the end of the script",
                        "nullable": true
                    },
                    "activeBlades": {
                        "description": "Required. Indicates which blades to Activate",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Blades"
                            }
                        ]
                    },
                    "vendor": {
                        "description": "Required. Default is azure\nAllowed values: azure, azuregov, azurechina",
                        "default": 4,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CloudVendor"
                            }
                        ]
                    },
                    "useCloudGuardManagedApp": {
                        "type": "boolean",
                        "description": "Specifies whether to use the Check Point application to connect the subscriptions to CloudGuard\nRequired"
                    },
                    "isAutoOnboarding": {
                        "type": "boolean",
                        "description": "Optional. Default is true\nDeclares if the onboarding pipeline automatically onboards newly discovered subscriptions after the initial onboarding. ",
                        "default": true
                    }
                }
            },
            "Blades": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "awp",
                    "serverless",
                    "cdr",
                    "postureManagement",
                    "awp",
                    "serverless",
                    "cdr",
                    "postureManagement"
                ],
                "properties": {
                    "awp": {
                        "$ref": "#/components/schemas/AwpConfiguration"
                    },
                    "serverless": {
                        "$ref": "#/components/schemas/ServerlessConfiguration"
                    },
                    "cdr": {
                        "$ref": "#/components/schemas/CdrConfiguration"
                    },
                    "postureManagement": {
                        "$ref": "#/components/schemas/PostureManagement"
                    }
                }
            },
            "PostureManagement": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "onboardingMode",
                    "onboardingMode"
                ],
                "properties": {
                    "onboardingMode": {
                        "$ref": "#/components/schemas/OnboardingMode"
                    }
                }
            },
            "OnboardingUpdateRequest2": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "organizationName",
                    "organizationName"
                ],
                "properties": {
                    "organizationName": {
                        "type": "string",
                        "description": "New Organization Name"
                    }
                }
            },
            "OrganizationManagementOnboardingStatusModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "tenantId",
                    "tenantId",
                    "managementGroupId",
                    "managementGroupId",
                    "isOnboarded",
                    "isOnboarded",
                    "reason",
                    "reason"
                ],
                "properties": {
                    "tenantId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "managementGroupId": {
                        "type": "string"
                    },
                    "isOnboarded": {
                        "type": "boolean"
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "VulnerabilityAccountStatsBatchRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accountId",
                    "entityTypes",
                    "accountId",
                    "entityTypes"
                ],
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "entityTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "VulnerabilityAccountStatsBatchStatusModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status",
                    "status",
                    "requestTimestamp",
                    "requestTimestamp",
                    "lastUpdateTimestamp",
                    "lastUpdateTimestamp",
                    "pages",
                    "pages"
                ],
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/VulnerabilityAccountStatsBatchStatusCode"
                    },
                    "requestTimestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdateTimestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "pages": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "VulnerabilityAccountStatsBatchStatusCode": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Success",
                    "Fail",
                    "InProgress"
                ],
                "enum": [
                    "Success",
                    "Fail",
                    "InProgress"
                ]
            },
            "VulnerabilityAccountStatsBatchModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accountId",
                    "accountId",
                    "platform",
                    "platform",
                    "environmentId",
                    "environmentId",
                    "entityType",
                    "entityType",
                    "entityExternalId",
                    "entityExternalId",
                    "entityExternalIds",
                    "entityExternalIds",
                    "vulnerabilityStats",
                    "vulnerabilityStats",
                    "entityId",
                    "entityId"
                ],
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "platform": {
                        "type": "string",
                        "nullable": true
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "entityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "entityExternalId": {
                        "type": "string",
                        "nullable": true
                    },
                    "entityExternalIds": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "vulnerabilityStats": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VulnerabilityStats"
                            }
                        ]
                    },
                    "entityId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "InfrastructureAssessmentHistoryResultV2ViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AssessmentHistoryResultV2ViewModelOfJRaw"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "scannedAsset",
                            "scannedAsset",
                            "scanInfo",
                            "scanInfo",
                            "storedKey",
                            "storedKey",
                            "fileName",
                            "fileName",
                            "environmentId",
                            "environmentId",
                            "environmentName",
                            "environmentName"
                        ],
                        "properties": {
                            "scannedAsset": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VlmScannedAsset"
                                    }
                                ]
                            },
                            "scanInfo": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VlmScanInfo"
                                    }
                                ]
                            },
                            "storedKey": {
                                "type": "string",
                                "nullable": true
                            },
                            "fileName": {
                                "type": "string",
                                "nullable": true
                            },
                            "environmentId": {
                                "type": "string",
                                "format": "guid",
                                "nullable": true
                            },
                            "environmentName": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "VlmScannedAsset": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "platform",
                    "platform",
                    "environmentId",
                    "environmentId",
                    "entityType",
                    "entityType",
                    "externalId",
                    "externalId",
                    "entityName",
                    "entityName",
                    "operatingSystem",
                    "operatingSystem",
                    "additionalFields",
                    "additionalFields"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "platform": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssessmentCloudAccountType"
                            }
                        ]
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "entityType": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VlmEntityType"
                            }
                        ]
                    },
                    "externalId": {
                        "type": "string",
                        "nullable": true
                    },
                    "entityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "operatingSystem": {
                        "type": "string",
                        "nullable": true
                    },
                    "additionalFields": {
                        "type": "object",
                        "default": {},
                        "nullable": true,
                        "additionalProperties": {}
                    }
                }
            },
            "VlmEntityType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Instance",
                    "VirtualMachine",
                    "VMInstance",
                    "Lambda",
                    "FunctionApp",
                    "CloudFunction",
                    "KubernetesImage",
                    "ContainerRegistryImage",
                    "EcsImage",
                    "ShiftLeftImage"
                ],
                "enum": [
                    "Instance",
                    "VirtualMachine",
                    "VMInstance",
                    "Lambda",
                    "FunctionApp",
                    "CloudFunction",
                    "KubernetesImage",
                    "ContainerRegistryImage",
                    "EcsImage",
                    "ShiftLeftImage"
                ]
            },
            "VlmScanInfo": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scanProducer",
                    "scanProducer",
                    "scanDate",
                    "scanDate"
                ],
                "properties": {
                    "scanProducer": {
                        "type": "string",
                        "nullable": true
                    },
                    "scanDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "AssessmentHistoryResultV2ViewModelOfJRaw": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AssessmentHistoryViewResultV2ViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "tests": {
                                "type": "array",
                                "description": "list of rules in the assessment ",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/RuleTestResultViewModel"
                                }
                            },
                            "testEntities": {
                                "type": "object",
                                "description": "list of entities tested in the assessment ",
                                "nullable": true,
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {}
                                }
                            },
                            "exclusions": {
                                "type": "array",
                                "description": "list of exclusions associated with this assessment",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/ExclusionViewModel"
                                }
                            },
                            "remediations": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/RemediationViewModel"
                                }
                            },
                            "dataSyncStatus": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/AssessmentDataSyncStatusEntityViewModel"
                                }
                            }
                        }
                    }
                ]
            },
            "RuleTestResultViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "error",
                    "error",
                    "testedCount",
                    "testedCount",
                    "relevantCount",
                    "relevantCount",
                    "nonComplyingCount",
                    "nonComplyingCount",
                    "exclusionStats",
                    "exclusionStats",
                    "entityResults",
                    "entityResults",
                    "rule",
                    "rule",
                    "testPassed",
                    "testPassed"
                ],
                "properties": {
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "testedCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "relevantCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nonComplyingCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "exclusionStats": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RuleTestResultStats"
                            }
                        ]
                    },
                    "entityResults": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/ValidationResult"
                        }
                    },
                    "rule": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RuleViewModel"
                            }
                        ]
                    },
                    "testPassed": {
                        "type": "boolean"
                    }
                }
            },
            "RemediationViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RemediationPutRequestModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "platform",
                            "platform"
                        ],
                        "properties": {
                            "platform": {
                                "description": "Remediation platform",
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/AssessmentCloudAccountType"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "RemediationPutRequestModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RemediationPostRequestModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Remediation ID",
                                "format": "guid"
                            }
                        }
                    }
                ]
            },
            "RemediationPostRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "comment",
                    "rules",
                    "rules",
                    "logicExpressions",
                    "logicExpressions",
                    "rulesetId",
                    "rulesetId",
                    "cloudAccountIds",
                    "cloudAccountIds",
                    "comment",
                    "cloudBots",
                    "cloudBots",
                    "organizationalUnitIds",
                    "organizationalUnitIds",
                    "dateRange",
                    "dateRange",
                    "platform",
                    "platform"
                ],
                "properties": {
                    "rules": {
                        "type": "array",
                        "description": "[Optional] List of rules to apply the remediation on.",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RuleViewModel2"
                        }
                    },
                    "logicExpressions": {
                        "type": "array",
                        "description": "[Optional] The GSL logic expressions of the exclusion.",
                        "pattern": "((name|id|accountNumber) like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')|(severity like '(informational|low|medium|high|critical)')|(tags contain \\[(key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')( or key like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+' and value like '[a-zA-Z0-9/.\\-_:%\"*{},;()=!&|\\$#~^+@?<>\\[\\] À-ÖØ-öø-ÿ]+')*\\])",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "rulesetId": {
                        "type": "integer",
                        "description": "Ruleset ID to apply exclusion on.",
                        "format": "int64"
                    },
                    "cloudAccountIds": {
                        "type": "array",
                        "description": "[Optional] List of cloud account IDs to apply exclusion on.\nIf neither cloud account IDs nor organizational unit IDs are supplied, exclusion will apply on all cloud accounts.\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment text (free text)",
                        "minLength": 1
                    },
                    "cloudBots": {
                        "type": "array",
                        "description": "Cloud bots execution expressions",
                        "default": [],
                        "maxItems": 5,
                        "minItems": 1,
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "organizationalUnitIds": {
                        "type": "array",
                        "description": "[Optional] List of organizational unit IDs to apply exclusion on.\nIf neither organizational unit IDs nor cloud account IDs are supplied, exclusion will apply on all cloud accounts.\nIf both organizational unit IDs and cloud account IDs are supplied, only organizational unit IDs will take effect.",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "dateRange": {
                        "description": "[Optional] Effective date range for the exclusion.\nLeaving 'From' null will take only 'To' into account.\nLeaving 'To' null will take only 'From' into account.\nDateRange with both 'From' and 'To' null will be disregarded.",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeRange"
                            }
                        ]
                    },
                    "platform": {
                        "$ref": "#/components/schemas/AssessmentCloudAccountType"
                    }
                }
            },
            "AssessmentHistoryViewResultV2ViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "createdTime",
                    "createdTime",
                    "id",
                    "id",
                    "assessmentId",
                    "assessmentId",
                    "triggeredBy",
                    "triggeredBy",
                    "assessmentPassed",
                    "assessmentPassed",
                    "hasErrors",
                    "hasErrors",
                    "stats",
                    "stats",
                    "request",
                    "request",
                    "hasDataSyncStatusIssues",
                    "hasDataSyncStatusIssues",
                    "comparisonCustomId",
                    "comparisonCustomId",
                    "additionalFields",
                    "additionalFields"
                ],
                "properties": {
                    "createdTime": {
                        "type": "string",
                        "description": "date of assessment",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer",
                        "description": "assessment id",
                        "format": "int64",
                        "default": 0
                    },
                    "assessmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "triggeredBy": {
                        "description": "reason for assessment",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssessmentTrigger"
                            }
                        ]
                    },
                    "assessmentPassed": {
                        "type": "boolean",
                        "description": "assessment result"
                    },
                    "hasErrors": {
                        "type": "boolean",
                        "description": "assessment has errors"
                    },
                    "stats": {
                        "description": "summary statistics for assessment",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssessmentHistoryStatsV2ViewModel"
                            }
                        ]
                    },
                    "request": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssessmentHistoryBundleResultV2ViewModel"
                            }
                        ]
                    },
                    "hasDataSyncStatusIssues": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "comparisonCustomId": {
                        "type": "string",
                        "nullable": true
                    },
                    "additionalFields": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "AssessmentTrigger": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Unknown",
                    "ContinuousCompliancePolicy",
                    "Manual",
                    "SystemBundle",
                    "Serverless",
                    "Logic",
                    "Magellan",
                    "KubernetesRuntimeAssurance",
                    "ContainersRuntimeProtection",
                    "ExternalFinding",
                    "CIEM",
                    "Incident",
                    "WorkloadChangeMonitoring"
                ],
                "enum": [
                    "Unknown",
                    "ContinuousCompliancePolicy",
                    "Manual",
                    "SystemBundle",
                    "Serverless",
                    "Logic",
                    "Magellan",
                    "KubernetesRuntimeAssurance",
                    "ContainersRuntimeProtection",
                    "ExternalFinding",
                    "CIEM",
                    "Incident",
                    "WorkloadChangeMonitoring"
                ]
            },
            "AssessmentHistoryStatsV2ViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "passed",
                    "passed",
                    "passedRulesBySeverity",
                    "passedRulesBySeverity",
                    "failed",
                    "failed",
                    "failedRulesBySeverity",
                    "failedRulesBySeverity",
                    "error",
                    "error",
                    "failedTests",
                    "failedTests",
                    "logicallyTested",
                    "logicallyTested",
                    "failedEntities",
                    "failedEntities",
                    "excludedTests",
                    "excludedTests",
                    "excludedFailedTests",
                    "excludedFailedTests",
                    "excludedRules",
                    "excludedRules",
                    "excludedRulesBySeverity",
                    "excludedRulesBySeverity",
                    "failedTestsBySeverity",
                    "failedTestsBySeverity",
                    "totalRelevantTestsBySeverity",
                    "totalRelevantTestsBySeverity"
                ],
                "properties": {
                    "passed": {
                        "type": "integer",
                        "description": "number of passed rules ",
                        "format": "int32"
                    },
                    "passedRulesBySeverity": {
                        "description": "passed rules divided by severity ",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/StatsBySeverityViewModel"
                            }
                        ]
                    },
                    "failed": {
                        "type": "integer",
                        "description": "number of failed rules ",
                        "format": "int32"
                    },
                    "failedRulesBySeverity": {
                        "description": "failed rules divided by severity ",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/StatsBySeverityViewModel"
                            }
                        ]
                    },
                    "error": {
                        "type": "integer",
                        "description": "number of errors ",
                        "format": "int32"
                    },
                    "failedTests": {
                        "type": "integer",
                        "description": "number of failed tests (entities) - same entity will be counted multiple times if it is relevant for multiple failed tests)",
                        "format": "int32"
                    },
                    "logicallyTested": {
                        "type": "integer",
                        "description": "Total number of tests performed",
                        "format": "int32"
                    },
                    "failedEntities": {
                        "type": "integer",
                        "description": "number of failed entities. (Distinct count of the entities - no duplications)",
                        "format": "int32"
                    },
                    "excludedTests": {
                        "type": "integer",
                        "description": "number of excluded tests",
                        "format": "int32"
                    },
                    "excludedFailedTests": {
                        "type": "integer",
                        "description": "number of excluded tests that also failed",
                        "format": "int32"
                    },
                    "excludedRules": {
                        "type": "integer",
                        "description": "number of rules that contains only excluded tests",
                        "format": "int32"
                    },
                    "excludedRulesBySeverity": {
                        "description": "excluded rules divided by severity ",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/StatsBySeverityViewModel"
                            }
                        ]
                    },
                    "failedTestsBySeverity": {
                        "description": "Amount of failed tests (entities) divided by severity.\n(same entity will be counted multiple times if it is relevant for multiple failed tests)",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/StatsBySeverityViewModel"
                            }
                        ]
                    },
                    "totalRelevantTestsBySeverity": {
                        "description": "Amount of Relevant tests (entities) divided by severity.\n(same entity will be counted multiple times if it is relevant for multiple failed tests)",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/StatsBySeverityViewModel"
                            }
                        ]
                    }
                }
            },
            "StatsBySeverityViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "informational",
                    "informational",
                    "low",
                    "low",
                    "medium",
                    "medium",
                    "high",
                    "high",
                    "critical",
                    "critical"
                ],
                "properties": {
                    "informational": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "low": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "medium": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "high": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "critical": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AssessmentHistoryBundleResultV2ViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AssessmentBundleRequestViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "isTemplate",
                            "isTemplate"
                        ],
                        "properties": {
                            "isTemplate": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "AssessmentBundleRequestViewModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseAssessmentRequestViewModel"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "id",
                            "version",
                            "version",
                            "name",
                            "name",
                            "description",
                            "description"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "description": "the bundle id",
                                "format": "int64"
                            },
                            "version": {
                                "type": "string",
                                "nullable": true
                            },
                            "name": {
                                "type": "string",
                                "description": "the bundle name",
                                "nullable": true
                            },
                            "description": {
                                "type": "string",
                                "description": "the bundle description",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "BaseAssessmentRequestViewModel": {
                "type": "object",
                "description": "Roy note: This is a temp impl that unites the request the result and the rule. All these 3 concepts will be split.",
                "x-abstract": true,
                "additionalProperties": false,
                "required": [
                    "CloudAccountId",
                    "CloudAccountId",
                    "externalCloudAccountId",
                    "externalCloudAccountId",
                    "cloudAccountId",
                    "cloudAccountId",
                    "cloudAccountType",
                    "cloudAccountType",
                    "requestId",
                    "requestId",
                    "shouldMinimizeResult",
                    "shouldMinimizeResult"
                ],
                "properties": {
                    "CloudAccountId": {
                        "type": "string",
                        "description": "The  account id",
                        "format": "guid",
                        "nullable": true
                    },
                    "externalCloudAccountId": {
                        "type": "string",
                        "description": "account id on cloud provider (AWS, Azure, GCP)",
                        "nullable": true
                    },
                    "cloudAccountId": {
                        "type": "string",
                        "description": "account id on cloud provider (AWS, Azure, GCP)",
                        "nullable": true
                    },
                    "cloudAccountType": {
                        "description": "the cloud provider (AWS/Azure/GCP)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssessmentCloudAccountType"
                            }
                        ]
                    },
                    "requestId": {
                        "type": "string",
                        "description": "the assessment id (returned in the response)",
                        "format": "guid"
                    },
                    "shouldMinimizeResult": {
                        "type": "boolean",
                        "description": "Minimized the entity results"
                    }
                }
            },
            "VlmDeleteByFilterRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accountId",
                    "accountId",
                    "environmentIds",
                    "environmentIds",
                    "entityTypes",
                    "entityTypes",
                    "externalIds",
                    "externalIds",
                    "Ids",
                    "Ids",
                    "scanProducers",
                    "scanProducers"
                ],
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "environmentIds": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "entityTypes": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/VlmEntityType"
                        }
                    },
                    "externalIds": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "Ids": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "scanProducers": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SBOMPackageFilesViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "files",
                    "files",
                    "packageId",
                    "packageId"
                ],
                "properties": {
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "packageId": {
                        "type": "string"
                    }
                }
            },
            "UnifiedSBOM": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scannedAsset",
                    "scannedAsset",
                    "scanInfo",
                    "scanInfo",
                    "sbomPackages",
                    "sbomPackages"
                ],
                "properties": {
                    "scannedAsset": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VlmScannedAsset"
                            }
                        ]
                    },
                    "scanInfo": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VlmScanInfo"
                            }
                        ]
                    },
                    "sbomPackages": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/UnifiedScanResultSBOMPackage"
                        }
                    }
                }
            },
            "UnifiedScanResultSBOMPackage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UnifiedScanResultBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "category",
                            "category",
                            "type",
                            "type",
                            "name",
                            "name",
                            "description",
                            "description",
                            "version",
                            "version",
                            "os",
                            "os",
                            "source",
                            "source",
                            "inUse",
                            "inUse",
                            "licenses",
                            "licenses",
                            "cgType",
                            "cgType"
                        ],
                        "properties": {
                            "category": {
                                "type": "string",
                                "default": "Package",
                                "nullable": true
                            },
                            "type": {
                                "type": "string",
                                "default": "Package",
                                "nullable": true
                            },
                            "package-manager": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/UnifiedPackageManager"
                                    }
                                ]
                            },
                            "name": {
                                "type": "string",
                                "nullable": true
                            },
                            "description": {
                                "type": "string",
                                "nullable": true
                            },
                            "version": {
                                "type": "string",
                                "nullable": true
                            },
                            "is-os-package": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "os": {
                                "type": "string",
                                "nullable": true
                            },
                            "source": {
                                "type": "string",
                                "nullable": true
                            },
                            "inUse": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "licenses": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/UnifiedLicense"
                                }
                            },
                            "cgType": {
                                "type": "string",
                                "default": "Package",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "UnifiedPackageManager": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "path",
                    "path"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UnifiedLicense": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "value",
                    "value",
                    "spdxExpression",
                    "spdxExpression",
                    "locations",
                    "locations"
                ],
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "spdxExpression": {
                        "type": "string",
                        "nullable": true
                    },
                    "locations": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/UnifiedLicenseLocation"
                        }
                    }
                }
            },
            "UnifiedLicenseLocation": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "path",
                    "path",
                    "layerID",
                    "layerID"
                ],
                "properties": {
                    "path": {
                        "type": "string",
                        "nullable": true
                    },
                    "layerID": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UnifiedScanResultBase": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scannedAsset",
                    "scannedAsset",
                    "scanInfo",
                    "scanInfo",
                    "id",
                    "id",
                    "severity",
                    "severity",
                    "scanEngineVersion",
                    "scanEngineVersion",
                    "affectedAssetsSnapshot",
                    "affectedAssetsSnapshot",
                    "type",
                    "type",
                    "category",
                    "category",
                    "remediation",
                    "remediation",
                    "cgType",
                    "cgType",
                    "customUniqueKeyHash",
                    "customUniqueKeyHash",
                    "image",
                    "image"
                ],
                "properties": {
                    "scannedAsset": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VlmScannedAsset"
                            }
                        ]
                    },
                    "scanInfo": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VlmScanInfo"
                            }
                        ]
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true
                    },
                    "scanEngineVersion": {
                        "type": "string",
                        "nullable": true
                    },
                    "affectedAssetsSnapshot": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/VlmAffectedAssetSnapshot"
                        }
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "nullable": true
                    },
                    "remediation": {
                        "type": "string",
                        "nullable": true
                    },
                    "cgType": {
                        "type": "string",
                        "nullable": true
                    },
                    "customUniqueKeyHash": {
                        "type": "string",
                        "nullable": true
                    },
                    "image": {
                        "deprecated": true,
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ImageMetadata"
                            }
                        ]
                    }
                }
            },
            "VlmAffectedAssetSnapshot": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "platform",
                    "platform",
                    "environmentId",
                    "environmentId",
                    "entityType",
                    "entityType",
                    "externalId",
                    "externalId",
                    "entityName",
                    "entityName",
                    "additionalFields",
                    "additionalFields"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "platform": {
                        "$ref": "#/components/schemas/AssessmentCloudAccountType"
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "entityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "externalId": {
                        "type": "string",
                        "nullable": true
                    },
                    "entityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "additionalFields": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {}
                    }
                }
            },
            "ImageMetadata": {
                "type": "object",
                "deprecated": true,
                "additionalProperties": false,
                "properties": {
                    "image-id": {
                        "type": "string",
                        "nullable": true
                    },
                    "repo-tag": {
                        "type": "string",
                        "nullable": true
                    },
                    "repo-url": {
                        "type": "string",
                        "nullable": true
                    },
                    "external-id": {
                        "type": "string",
                        "nullable": true
                    },
                    "image-digest": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SBOMFormatVersions": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "formats",
                    "formats"
                ],
                "properties": {
                    "formats": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SBOMFormatVersionDetails"
                        }
                    }
                }
            },
            "SBOMFormatVersionDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "name",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "SBOMVersionFormatId": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "SPDX23",
                    "CycloneDX15"
                ],
                "enum": [
                    "SPDX23",
                    "CycloneDX15"
                ]
            },
            "VulnerabilityScanResultBCRequestModel": {
                "type": "object",
                "deprecated": true,
                "additionalProperties": false,
                "required": [
                    "accountId",
                    "accountId",
                    "environmentId",
                    "environmentId",
                    "entityType",
                    "entityType",
                    "entityExternalId",
                    "entityExternalId",
                    "scanTime",
                    "scanTime",
                    "scanProducer",
                    "scanProducer",
                    "version",
                    "version",
                    "scanResults",
                    "scanResults",
                    "shouldOverrideOtherScanProvider",
                    "shouldOverrideOtherScanProvider"
                ],
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "entityType": {
                        "$ref": "#/components/schemas/VlmEntityTypeBC"
                    },
                    "entityExternalId": {
                        "type": "string"
                    },
                    "scanTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "scanProducer": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "scanResults": {},
                    "shouldOverrideOtherScanProvider": {
                        "type": "boolean"
                    }
                }
            },
            "VlmEntityTypeBC": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Image",
                    "Instance",
                    "VirtualMachine",
                    "VMInstance",
                    "Lambda",
                    "FunctionApp",
                    "CloudFunction"
                ],
                "enum": [
                    "Image",
                    "Instance",
                    "VirtualMachine",
                    "VMInstance",
                    "Lambda",
                    "FunctionApp",
                    "CloudFunction"
                ]
            },
            "ScanResultsReportWorkItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseWorkItem"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "platform",
                            "platform",
                            "environmentId",
                            "environmentId",
                            "entityType",
                            "entityType",
                            "entityExternalIds",
                            "entityExternalIds",
                            "scanS3Key",
                            "scanS3Key",
                            "scanProducer",
                            "scanProducer",
                            "scanProducerVersion",
                            "scanProducerVersion",
                            "scanTime",
                            "scanTime",
                            "sbomS3Key",
                            "sbomS3Key",
                            "sbomTime",
                            "sbomTime",
                            "vulnerabilityStats",
                            "vulnerabilityStats",
                            "riskScore",
                            "riskScore",
                            "totals",
                            "totals",
                            "scanEngine",
                            "scanEngine",
                            "isPartialResult",
                            "isPartialResult",
                            "scanStatusDescription",
                            "scanStatusDescription",
                            "threatStatusDescription",
                            "threatStatusDescription",
                            "triggeredExternalId",
                            "triggeredExternalId",
                            "isDuplicate",
                            "isDuplicate",
                            "duplicateFrom",
                            "duplicateFrom",
                            "scanStatus",
                            "scanStatus",
                            "scannedAsset",
                            "scannedAsset",
                            "scanInfo",
                            "scanInfo",
                            "errorMessage",
                            "errorMessage",
                            "haveScanResults",
                            "haveScanResults",
                            "scanS3Bucket",
                            "scanS3Bucket",
                            "isRetro",
                            "isRetro"
                        ],
                        "properties": {
                            "platform": {
                                "type": "string",
                                "nullable": true
                            },
                            "environmentId": {
                                "type": "string",
                                "format": "guid"
                            },
                            "entityType": {
                                "$ref": "#/components/schemas/VlmEntityType"
                            },
                            "entityExternalIds": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                    "type": "string"
                                }
                            },
                            "scanS3Key": {
                                "type": "string",
                                "nullable": true
                            },
                            "scanProducer": {
                                "type": "string",
                                "nullable": true
                            },
                            "scanProducerVersion": {
                                "type": "string",
                                "nullable": true
                            },
                            "scanTime": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "sbomS3Key": {
                                "type": "string",
                                "nullable": true
                            },
                            "sbomTime": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "vulnerabilityStats": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VulnerabilityStats"
                                    }
                                ]
                            },
                            "riskScore": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                            },
                            "totals": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/ScanTotals"
                                    }
                                ]
                            },
                            "scanEngine": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true
                            },
                            "isPartialResult": {
                                "type": "boolean"
                            },
                            "scanStatusDescription": {
                                "type": "string",
                                "nullable": true
                            },
                            "threatStatusDescription": {
                                "type": "string",
                                "deprecated": true,
                                "x-deprecatedMessage": "use ScanStatusDescription",
                                "nullable": true
                            },
                            "triggeredExternalId": {
                                "type": "string",
                                "nullable": true
                            },
                            "isDuplicate": {
                                "type": "boolean"
                            },
                            "duplicateFrom": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "scanStatus": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VlmScanStatus"
                                    }
                                ]
                            },
                            "scannedAsset": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VlmScannedAsset"
                                    }
                                ]
                            },
                            "scanInfo": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VlmScanInfo"
                                    }
                                ]
                            },
                            "errorMessage": {
                                "type": "string",
                                "nullable": true
                            },
                            "haveScanResults": {
                                "type": "boolean"
                            },
                            "scanS3Bucket": {
                                "type": "string",
                                "nullable": true
                            },
                            "isRetro": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "ScanTotals": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "all",
                    "all",
                    "allFixable",
                    "allFixable",
                    "critical",
                    "critical",
                    "criticalFixable",
                    "criticalFixable",
                    "high",
                    "high",
                    "highFixable",
                    "highFixable",
                    "medium",
                    "medium",
                    "mediumFixable",
                    "mediumFixable",
                    "low",
                    "low",
                    "lowFixable",
                    "lowFixable",
                    "unknown",
                    "unknown",
                    "unknownFixable",
                    "unknownFixable",
                    "cve",
                    "cve"
                ],
                "properties": {
                    "all": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allFixable": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "critical": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "criticalFixable": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "high": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "highFixable": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "medium": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "mediumFixable": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "low": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lowFixable": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unknown": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unknownFixable": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "insecure-content": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "malicious-url": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "malicious-ip": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "malicious-file": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "restricted-license": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cve": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "VlmScanStatus": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Full",
                    "Partial",
                    "QuotaExceeded",
                    "Failure"
                ],
                "enum": [
                    "Full",
                    "Partial",
                    "QuotaExceeded",
                    "Failure"
                ]
            },
            "BaseWorkItem": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accountId",
                    "accountId",
                    "workflowId",
                    "workflowId",
                    "groupId",
                    "groupId",
                    "deduplicationId",
                    "deduplicationId",
                    "dispatcherMessageCreationTime",
                    "dispatcherMessageCreationTime",
                    "dispatcherId",
                    "dispatcherId"
                ],
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "workflowId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "groupId": {
                        "type": "string",
                        "nullable": true
                    },
                    "deduplicationId": {
                        "type": "string",
                        "nullable": true
                    },
                    "dispatcherMessageCreationTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dispatcherId": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            },
            "UploadScanResultRequestModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accountId",
                    "scanResults",
                    "scanProducer",
                    "entityType",
                    "entityExternalIds",
                    "accountId",
                    "scanResults",
                    "scanProducer",
                    "entityType",
                    "entityExternalIds",
                    "sbomS3Key",
                    "sbomS3Key",
                    "sbomTime",
                    "sbomTime",
                    "environmentId",
                    "environmentId",
                    "requestId",
                    "requestId",
                    "scanConfig",
                    "scanConfig",
                    "scanStatus",
                    "scanStatus",
                    "scanStatusDescription",
                    "scanStatusDescription",
                    "shouldOverrideOtherScanProvider",
                    "shouldOverrideOtherScanProvider"
                ],
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "scanResults": {
                        "$ref": "#/components/schemas/ScanResult"
                    },
                    "scanProducer": {
                        "type": "string",
                        "minLength": 1
                    },
                    "entityType": {
                        "$ref": "#/components/schemas/VlmEntityType"
                    },
                    "entityExternalIds": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "string"
                        }
                    },
                    "sbomS3Key": {
                        "type": "string",
                        "nullable": true
                    },
                    "sbomTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "requestId": {
                        "type": "string",
                        "format": "guid",
                        "default": "cdc80816-60c7-47a0-b394-68e3465d3ff5"
                    },
                    "scanConfig": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ScanConfig"
                            }
                        ]
                    },
                    "scanStatus": {
                        "$ref": "#/components/schemas/VlmScanStatus"
                    },
                    "scanStatusDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "shouldOverrideOtherScanProvider": {
                        "type": "boolean",
                        "default": true,
                        "nullable": true
                    }
                }
            },
            "ScanResult": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scannedAsset",
                    "scannedAsset",
                    "scanInfo",
                    "scanInfo",
                    "scanTraceability",
                    "scanTraceability",
                    "totals",
                    "totals",
                    "ScanSummary",
                    "ScanSummary",
                    "ImageScan",
                    "ImageScan",
                    "scanner",
                    "scanner"
                ],
                "properties": {
                    "scannedAsset": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VlmScannedAsset"
                            }
                        ]
                    },
                    "scanInfo": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VlmScanInfo"
                            }
                        ]
                    },
                    "scanTraceability": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VlmScanTraceability"
                            }
                        ]
                    },
                    "totals": {
                        "default": {
                            "all": 0,
                            "allFixable": 0,
                            "critical": 0,
                            "criticalFixable": 0,
                            "high": 0,
                            "highFixable": 0,
                            "medium": 0,
                            "mediumFixable": 0,
                            "low": 0,
                            "lowFixable": 0,
                            "unknown": 0,
                            "unknownFixable": 0,
                            "insecure-content": 0,
                            "malicious-url": 0,
                            "malicious-ip": 0,
                            "malicious-file": 0,
                            "restricted-license": 0,
                            "cve": 0
                        },
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ScanTotals"
                            }
                        ]
                    },
                    "ScanSummary": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/UnifiedScanResultScanSummary"
                            }
                        ]
                    },
                    "Cve": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/UnifiedScanResultCve"
                        }
                    },
                    "Package": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/UnifiedScanResultPackage"
                        }
                    },
                    "SBOMPackage": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/UnifiedScanResultPackage"
                        }
                    },
                    "InsecureContent": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/UnifiedScanResultInsecureContent"
                        }
                    },
                    "Malware": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/UnifiedScanResultMalware"
                        }
                    },
                    "ImageScan": {
                        "deprecated": true,
                        "x-deprecatedMessage": "should use ScanSummary",
                        "nullable": true
                    },
                    "Finding": {
                        "type": "array",
                        "deprecated": true,
                        "x-deprecatedMessage": "should use Malwares \\ InsecureContents",
                        "nullable": true,
                        "items": {}
                    },
                    "scanner": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ScanEngineEnum"
                            }
                        ]
                    }
                }
            },
            "VlmScanTraceability": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scanProducerVersion",
                    "scanProducerVersion",
                    "sbomEngineVersion",
                    "sbomEngineVersion",
                    "sbomScanDate",
                    "sbomScanDate",
                    "cveEngineVersion",
                    "cveEngineVersion",
                    "cveScanDate",
                    "cveScanDate",
                    "cveEngineDbDate",
                    "cveEngineDbDate",
                    "threatsEngineVersion",
                    "threatsEngineVersion",
                    "threatsScanDate",
                    "threatsScanDate",
                    "secretsEngineVersion",
                    "secretsEngineVersion",
                    "secretsScanDate",
                    "secretsScanDate"
                ],
                "properties": {
                    "scanProducerVersion": {
                        "type": "string",
                        "nullable": true
                    },
                    "sbomEngineVersion": {
                        "type": "string",
                        "nullable": true
                    },
                    "sbomScanDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "cveEngineVersion": {
                        "type": "string",
                        "nullable": true
                    },
                    "cveScanDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "cveEngineDbDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "threatsEngineVersion": {
                        "type": "string",
                        "nullable": true
                    },
                    "threatsScanDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "secretsEngineVersion": {
                        "type": "string",
                        "nullable": true
                    },
                    "secretsScanDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "UnifiedScanResultScanSummary": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UnifiedScanResultBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": {
                            "nullable": true
                        },
                        "required": [
                            "category",
                            "category",
                            "type",
                            "type",
                            "description",
                            "description",
                            "vulnerabilityStats",
                            "vulnerabilityStats",
                            "cgType",
                            "cgType"
                        ],
                        "properties": {
                            "risk-score": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                            },
                            "category": {
                                "type": "string",
                                "default": "ScanSummary",
                                "nullable": true
                            },
                            "type": {
                                "type": "string",
                                "default": "ScanSummary",
                                "nullable": true
                            },
                            "description": {
                                "type": "string",
                                "nullable": true
                            },
                            "vulnerabilityStats": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VulnerabilityStats"
                                    }
                                ]
                            },
                            "remediation-summary": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/UnifiedRemediationSummary"
                                }
                            },
                            "cgType": {
                                "type": "string",
                                "default": "ScanSummary",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "UnifiedRemediationSummary": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "categories",
                    "categories"
                ],
                "properties": {
                    "file-path": {
                        "type": "string",
                        "nullable": true
                    },
                    "categories": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/UnifiedRemediationSummaryCategory"
                        }
                    }
                }
            },
            "UnifiedRemediationSummaryCategory": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "category",
                    "category",
                    "remediations",
                    "remediations"
                ],
                "properties": {
                    "category": {
                        "type": "string",
                        "nullable": true
                    },
                    "remediations": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/UnifiedRemediationSummaryCategoryRemediations"
                        }
                    }
                }
            },
            "UnifiedRemediationSummaryCategoryRemediations": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "finding",
                    "finding",
                    "severity",
                    "severity",
                    "action",
                    "action",
                    "lines",
                    "lines"
                ],
                "properties": {
                    "finding": {
                        "type": "string",
                        "nullable": true
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true
                    },
                    "action": {
                        "type": "string",
                        "nullable": true
                    },
                    "lines": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "UnifiedScanResultCve": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UnifiedScanResultBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "category",
                            "category",
                            "type",
                            "type",
                            "name",
                            "name",
                            "description",
                            "description",
                            "source",
                            "source",
                            "sourceUrl",
                            "sourceUrl",
                            "packages",
                            "packages",
                            "urls",
                            "urls",
                            "relatedIds",
                            "relatedIds",
                            "cgType",
                            "cgType"
                        ],
                        "properties": {
                            "category": {
                                "type": "string",
                                "default": "CVE",
                                "nullable": true
                            },
                            "type": {
                                "type": "string",
                                "default": "Finding",
                                "nullable": true
                            },
                            "name": {
                                "type": "string",
                                "nullable": true
                            },
                            "cvss-info": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/CvssData"
                                    }
                                ]
                            },
                            "description": {
                                "type": "string",
                                "nullable": true
                            },
                            "source": {
                                "type": "string",
                                "nullable": true
                            },
                            "sourceUrl": {
                                "type": "string",
                                "nullable": true
                            },
                            "packages": {
                                "type": "array",
                                "default": [],
                                "nullable": true,
                                "items": {
                                    "type": "string"
                                }
                            },
                            "urls": {
                                "type": "array",
                                "default": [],
                                "nullable": true,
                                "items": {
                                    "type": "string"
                                }
                            },
                            "relatedIds": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                    "type": "string"
                                }
                            },
                            "cgType": {
                                "type": "string",
                                "default": "CVE",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "UnifiedScanResultPackage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UnifiedScanResultSBOMPackage"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "category",
                            "category",
                            "type",
                            "type",
                            "parents",
                            "parents",
                            "isFixable",
                            "isFixable",
                            "cves",
                            "cves",
                            "relatedCves",
                            "relatedCves",
                            "cgType",
                            "cgType"
                        ],
                        "properties": {
                            "category": {
                                "type": "string",
                                "default": "Package",
                                "nullable": true
                            },
                            "type": {
                                "type": "string",
                                "default": "Package",
                                "nullable": true
                            },
                            "parents": {
                                "type": "array",
                                "default": [],
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/UnifiedPackageParent"
                                }
                            },
                            "isFixable": {
                                "type": "boolean"
                            },
                            "cves": {
                                "type": "array",
                                "default": [],
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/UnifiedPackageCve"
                                }
                            },
                            "relatedCves": {
                                "type": "array",
                                "default": [],
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/UnifiedPackageCve"
                                }
                            },
                            "cgType": {
                                "type": "string",
                                "default": "Package",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "UnifiedPackageParent": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "name",
                    "version",
                    "version",
                    "line",
                    "line"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "line": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UnifiedPackageCve": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "sourceUrl",
                    "sourceUrl",
                    "severity",
                    "severity",
                    "remediation",
                    "remediation",
                    "description",
                    "description",
                    "isFixedByPackageRemediation",
                    "isFixedByPackageRemediation",
                    "source",
                    "source",
                    "urls",
                    "urls",
                    "relatedIds",
                    "relatedIds"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "sourceUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true
                    },
                    "remediation": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "last-modified": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isFixedByPackageRemediation": {
                        "type": "boolean"
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "cvss-info": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CvssData"
                            }
                        ]
                    },
                    "urls": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "relatedIds": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "UnifiedScanResultInsecureContent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UnifiedScanResultWithFiles"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "type",
                            "type",
                            "classification",
                            "classification",
                            "cgType",
                            "cgType"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "default": "InsecureContent",
                                "nullable": true
                            },
                            "classification": {
                                "type": "string",
                                "nullable": true
                            },
                            "cgType": {
                                "type": "string",
                                "default": "InsecureContent",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "UnifiedScanResultWithFiles": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UnifiedScanResultBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "name",
                            "name",
                            "description",
                            "description",
                            "files",
                            "files"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "nullable": true
                            },
                            "description": {
                                "type": "string",
                                "nullable": true
                            },
                            "files": {
                                "type": "array",
                                "default": [],
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/UnifiedScanResultFile"
                                }
                            }
                        }
                    }
                ]
            },
            "UnifiedScanResultFile": {
                "type": "object",
                "additionalProperties": {
                    "nullable": true
                },
                "required": [
                    "sha256",
                    "sha256",
                    "md5",
                    "md5",
                    "contents",
                    "contents"
                ],
                "properties": {
                    "file-path": {
                        "type": "string",
                        "nullable": true
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true
                    },
                    "md5": {
                        "type": "string",
                        "nullable": true
                    },
                    "contents": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/UnifiedScanResultFileContent"
                        }
                    }
                }
            },
            "UnifiedScanResultFileContent": {
                "type": "object",
                "additionalProperties": {
                    "nullable": true
                },
                "required": [
                    "payload",
                    "payload",
                    "lines",
                    "lines"
                ],
                "properties": {
                    "payload": {
                        "type": "string",
                        "nullable": true
                    },
                    "payload-sha256": {
                        "type": "string",
                        "nullable": true
                    },
                    "lines": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "UnifiedScanResultMalware": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UnifiedScanResultWithFiles"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "type",
                            "type",
                            "classification",
                            "classification",
                            "cgType",
                            "cgType"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "default": "Malware",
                                "nullable": true
                            },
                            "classification": {
                                "type": "string",
                                "nullable": true
                            },
                            "cgType": {
                                "type": "string",
                                "default": "Malware",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "ScanEngineEnum": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "SourceGuard",
                    "Grype"
                ],
                "enum": [
                    "SourceGuard",
                    "Grype"
                ]
            },
            "ScanConfig": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "prevScanStatus",
                    "prevScanStatus",
                    "prevScanS3Key",
                    "prevScanS3Key",
                    "malwareSkip",
                    "malwareSkip",
                    "cveScanDelayIntervalSecs",
                    "cveScanDelayIntervalSecs",
                    "cveScanInitialIntervals",
                    "cveScanInitialIntervals",
                    "cveScanLeftIntervals",
                    "cveScanLeftIntervals",
                    "cveScanRunAttempts",
                    "cveScanRunAttempts",
                    "threatScanDelayIntervalSecs",
                    "threatScanDelayIntervalSecs",
                    "threatScanInitialIntervals",
                    "threatScanInitialIntervals",
                    "threatScanLeftIntervals",
                    "threatScanLeftIntervals",
                    "threatScanRunAttempts",
                    "threatScanRunAttempts",
                    "scanStartTime",
                    "scanStartTime"
                ],
                "properties": {
                    "prevScanStatus": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VlmScanStatus"
                            }
                        ]
                    },
                    "prevScanS3Key": {
                        "type": "string",
                        "nullable": true
                    },
                    "malwareSkip": {
                        "type": "boolean"
                    },
                    "cveScanDelayIntervalSecs": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "cveScanInitialIntervals": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cveScanLeftIntervals": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cveScanRunAttempts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threatScanDelayIntervalSecs": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "threatScanInitialIntervals": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threatScanLeftIntervals": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threatScanRunAttempts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scanStartTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "VulnerabilityScanResultMetadataEntity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RootEntityBase"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "id",
                            "platform",
                            "platform",
                            "environmentId",
                            "environmentId",
                            "entityType",
                            "entityType",
                            "entityExternalId",
                            "entityExternalId",
                            "oldSchemaScanS3Key",
                            "oldSchemaScanS3Key",
                            "scanS3Key",
                            "scanS3Key",
                            "sbomS3Key",
                            "sbomS3Key",
                            "unifiedSBOMS3Key",
                            "unifiedSBOMS3Key",
                            "scanProducer",
                            "scanProducer",
                            "scanTime",
                            "scanTime",
                            "sbomTime",
                            "sbomTime",
                            "version",
                            "version",
                            "vulnerabilityStats",
                            "vulnerabilityStats",
                            "totals",
                            "totals",
                            "scanEngineVersion",
                            "scanEngineVersion",
                            "entityExternalIds",
                            "entityExternalIds",
                            "riskScore",
                            "riskScore",
                            "scanEngine",
                            "scanEngine",
                            "isPartialResult",
                            "isPartialResult",
                            "scanStatus",
                            "scanStatus",
                            "scanStatusDetails",
                            "scanStatusDetails",
                            "scanConfig",
                            "scanConfig",
                            "scannedAsset",
                            "scannedAsset",
                            "scanInfo",
                            "scanInfo",
                            "scanTraceability",
                            "scanTraceability",
                            "scanStatusDescription",
                            "scanStatusDescription"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "nullable": true
                            },
                            "platform": {
                                "type": "string",
                                "nullable": true
                            },
                            "environmentId": {
                                "type": "string",
                                "format": "guid"
                            },
                            "entityType": {
                                "type": "string",
                                "nullable": true
                            },
                            "entityExternalId": {
                                "type": "string",
                                "deprecated": true,
                                "x-deprecatedMessage": "should use EntityExternalIds",
                                "nullable": true
                            },
                            "oldSchemaScanS3Key": {
                                "type": "string",
                                "nullable": true
                            },
                            "scanS3Key": {
                                "type": "string",
                                "nullable": true
                            },
                            "sbomS3Key": {
                                "type": "string",
                                "nullable": true
                            },
                            "unifiedSBOMS3Key": {
                                "type": "string",
                                "nullable": true
                            },
                            "scanProducer": {
                                "type": "string",
                                "nullable": true
                            },
                            "scanTime": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "sbomTime": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "version": {
                                "type": "string",
                                "nullable": true
                            },
                            "vulnerabilityStats": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VulnerabilityStats"
                                    }
                                ]
                            },
                            "totals": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/ScanTotals"
                                    }
                                ]
                            },
                            "scanEngineVersion": {
                                "type": "string",
                                "nullable": true
                            },
                            "entityExternalIds": {
                                "type": "array",
                                "default": [],
                                "nullable": true,
                                "items": {
                                    "type": "string"
                                }
                            },
                            "riskScore": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                            },
                            "scanEngine": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true
                            },
                            "isPartialResult": {
                                "type": "boolean"
                            },
                            "scanStatus": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VlmScanStatus"
                                    }
                                ]
                            },
                            "scanStatusDetails": {
                                "type": "string",
                                "nullable": true
                            },
                            "scanConfig": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/ScanConfig"
                                    }
                                ]
                            },
                            "scannedAsset": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VlmScannedAsset"
                                    }
                                ]
                            },
                            "scanInfo": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VlmScanInfo"
                                    }
                                ]
                            },
                            "scanTraceability": {
                                "nullable": true,
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/VlmScanTraceability"
                                    }
                                ]
                            },
                            "scanStatusDescription": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "UpdateMetadataWithExternalIdsRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accountId",
                    "environmentId",
                    "entityType",
                    "entityExternalIds",
                    "accountId",
                    "environmentId",
                    "entityType",
                    "entityExternalIds"
                ],
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "entityType": {
                        "$ref": "#/components/schemas/VlmEntityType"
                    },
                    "entityExternalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "VulnerabilitySetScanStatusRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accountId",
                    "environmentId",
                    "entityType",
                    "externalId",
                    "accountId",
                    "environmentId",
                    "entityType",
                    "externalId",
                    "scanStatus",
                    "scanStatus",
                    "scanStatusDetails",
                    "scanStatusDetails"
                ],
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "entityType": {
                        "$ref": "#/components/schemas/VlmEntityType"
                    },
                    "externalId": {
                        "type": "string",
                        "minLength": 1
                    },
                    "scanStatus": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VlmScanStatusCustomerFacing"
                            }
                        ]
                    },
                    "scanStatusDetails": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "VlmScanStatusCustomerFacing": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "NotScanned",
                    "InProgress",
                    "Scanned",
                    "Partial",
                    "Failed"
                ],
                "enum": [
                    "NotScanned",
                    "InProgress",
                    "Scanned",
                    "Partial",
                    "Failed"
                ]
            },
            "VlmScanResultMetadataViewModel": {
                "type": "object",
                "deprecated": true,
                "additionalProperties": false,
                "required": [
                    "platform",
                    "platform",
                    "environmentId",
                    "environmentId",
                    "entityType",
                    "entityType",
                    "entityExternalId",
                    "entityExternalId",
                    "entityExternalIds",
                    "entityExternalIds",
                    "scanProducer",
                    "scanProducer",
                    "scanTime",
                    "scanTime",
                    "vulnerabilityStats",
                    "vulnerabilityStats"
                ],
                "properties": {
                    "platform": {
                        "type": "string"
                    },
                    "environmentId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "entityExternalId": {
                        "type": "string"
                    },
                    "entityExternalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scanProducer": {
                        "type": "string"
                    },
                    "scanTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "vulnerabilityStats": {
                        "$ref": "#/components/schemas/VulnerabilityStats"
                    }
                }
            },
            "VlmScanMetadataViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scannedAsset",
                    "scannedAsset",
                    "scanInfo",
                    "scanInfo",
                    "vulnerabilityStats",
                    "vulnerabilityStats"
                ],
                "properties": {
                    "scannedAsset": {
                        "$ref": "#/components/schemas/VlmScannedAsset"
                    },
                    "scanInfo": {
                        "$ref": "#/components/schemas/VlmScanInfo"
                    },
                    "vulnerabilityStats": {
                        "$ref": "#/components/schemas/VulnerabilityStats"
                    }
                }
            },
            "ScanResultViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scannedAsset",
                    "scannedAsset",
                    "scanInfo",
                    "scanInfo",
                    "ScanSummary",
                    "ScanSummary"
                ],
                "properties": {
                    "scannedAsset": {
                        "$ref": "#/components/schemas/VlmScannedAsset"
                    },
                    "scanInfo": {
                        "$ref": "#/components/schemas/VlmScanInfo"
                    },
                    "ScanSummary": {
                        "$ref": "#/components/schemas/UnifiedScanResultScanSummary"
                    },
                    "Package": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnifiedScanResultPackage"
                        }
                    },
                    "InsecureContent": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnifiedScanResultInsecureContent"
                        }
                    },
                    "Malware": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnifiedScanResultMalware"
                        }
                    }
                }
            },
            "VlmScanEngineVersionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "scanEngineVersion",
                    "scanEngineVersion"
                ],
                "properties": {
                    "scanEngineVersion": {
                        "type": "string"
                    }
                }
            },
            "SBOMScanViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "requestId",
                    "requestId"
                ],
                "properties": {
                    "requestId": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            },
            "OciCompartmentViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "description",
                    "description",
                    "timeCreated",
                    "timeCreated",
                    "tags",
                    "tags",
                    "lifecycleState",
                    "lifecycleState",
                    "compartmentId",
                    "compartmentId",
                    "name",
                    "name",
                    "id",
                    "id",
                    "Id",
                    "Id",
                    "accountNumber",
                    "accountNumber",
                    "region",
                    "region"
                ],
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "timeCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "lifecycleState": {
                        "type": "string"
                    },
                    "compartmentId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                }
            },
            "GcpMachineImageViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "creationTimestamp",
                    "creationTimestamp",
                    "description",
                    "description",
                    "guestFlush",
                    "guestFlush",
                    "id",
                    "id",
                    "instanceProperties",
                    "instanceProperties",
                    "kind",
                    "kind",
                    "machineImageEncryptionKey",
                    "machineImageEncryptionKey",
                    "name",
                    "name",
                    "satisfiesPzs",
                    "satisfiesPzs",
                    "savedDisks",
                    "savedDisks",
                    "sourceDiskEncryptionKeys",
                    "sourceDiskEncryptionKeys",
                    "sourceInstance",
                    "sourceInstance",
                    "sourceInstanceProperties",
                    "sourceInstanceProperties",
                    "status",
                    "status",
                    "storageLocations",
                    "storageLocations",
                    "totalStorageBytes",
                    "totalStorageBytes"
                ],
                "properties": {
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "guestFlush": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "id": {
                        "type": "string"
                    },
                    "instanceProperties": {
                        "$ref": "#/components/schemas/InstanceProperties"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "machineImageEncryptionKey": {
                        "$ref": "#/components/schemas/MachineImageEncryptionKey"
                    },
                    "name": {
                        "type": "string"
                    },
                    "satisfiesPzs": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "savedDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SavedDisk"
                        }
                    },
                    "sourceDiskEncryptionKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SourceDiskEncryptionKey"
                        }
                    },
                    "sourceInstance": {
                        "type": "string"
                    },
                    "sourceInstanceProperties": {
                        "$ref": "#/components/schemas/SourceInstanceProperties"
                    },
                    "status": {
                        "type": "string"
                    },
                    "storageLocations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "totalStorageBytes": {
                        "type": "string"
                    }
                }
            },
            "InstanceProperties": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "advancedMachineFeatures",
                    "advancedMachineFeatures",
                    "canIpForward",
                    "canIpForward",
                    "confidentialInstanceConfig",
                    "confidentialInstanceConfig",
                    "description",
                    "description",
                    "disks",
                    "disks",
                    "guestAccelerators",
                    "guestAccelerators",
                    "keyRevocationActionType",
                    "keyRevocationActionType",
                    "machineType",
                    "machineType",
                    "metadata",
                    "metadata",
                    "minCpuPlatform",
                    "minCpuPlatform",
                    "networkInterfaces",
                    "networkInterfaces",
                    "networkPerformanceConfig",
                    "networkPerformanceConfig",
                    "privateIpv6GoogleAccess",
                    "privateIpv6GoogleAccess",
                    "reservationAffinity",
                    "reservationAffinity",
                    "resourcePolicies",
                    "resourcePolicies",
                    "scheduling",
                    "scheduling",
                    "serviceAccounts",
                    "serviceAccounts",
                    "shieldedInstanceConfig",
                    "shieldedInstanceConfig",
                    "tags",
                    "tags"
                ],
                "properties": {
                    "advancedMachineFeatures": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AdvancedMachineFeatures"
                            }
                        ]
                    },
                    "canIpForward": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "confidentialInstanceConfig": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ConfidentialInstanceConfig"
                            }
                        ]
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "disks": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/InstancePropertiesDisk"
                        }
                    },
                    "guestAccelerators": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/InstancePropertiesGuestAccelerator"
                        }
                    },
                    "keyRevocationActionType": {
                        "type": "string",
                        "nullable": true
                    },
                    "machineType": {
                        "type": "string",
                        "nullable": true
                    },
                    "metadata": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/InstancePropertiesMetadata"
                            }
                        ]
                    },
                    "minCpuPlatform": {
                        "type": "string",
                        "nullable": true
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/InstancePropertiesNetworkInterface"
                        }
                    },
                    "networkPerformanceConfig": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NetworkPerformanceConfig"
                            }
                        ]
                    },
                    "privateIpv6GoogleAccess": {
                        "type": "string",
                        "nullable": true
                    },
                    "reservationAffinity": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ReservationAffinity"
                            }
                        ]
                    },
                    "resourcePolicies": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "scheduling": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/InstancePropertiesScheduling"
                            }
                        ]
                    },
                    "serviceAccounts": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/InstancePropertiesServiceAccount"
                        }
                    },
                    "shieldedInstanceConfig": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ShieldedInstanceConfig"
                            }
                        ]
                    },
                    "tags": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/InstancePropertiesTags"
                            }
                        ]
                    }
                }
            },
            "AdvancedMachineFeatures": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "enableNestedVirtualization",
                    "enableNestedVirtualization",
                    "enableUefiNetworking",
                    "enableUefiNetworking",
                    "threadsPerCore",
                    "threadsPerCore",
                    "visibleCoreCount",
                    "visibleCoreCount"
                ],
                "properties": {
                    "enableNestedVirtualization": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "enableUefiNetworking": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "threadsPerCore": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "visibleCoreCount": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    }
                }
            },
            "ConfidentialInstanceConfig": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "enableConfidentialCompute",
                    "enableConfidentialCompute"
                ],
                "properties": {
                    "enableConfidentialCompute": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "InstancePropertiesDisk": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "architecture",
                    "architecture",
                    "autoDelete",
                    "autoDelete",
                    "boot",
                    "boot",
                    "deviceName",
                    "deviceName",
                    "diskEncryptionKey",
                    "diskEncryptionKey",
                    "diskSizeGb",
                    "diskSizeGb",
                    "forceAttach",
                    "forceAttach",
                    "guestOsFeatures",
                    "guestOsFeatures",
                    "index",
                    "index",
                    "initializeParams",
                    "initializeParams",
                    "interface",
                    "interface",
                    "kind",
                    "kind",
                    "licenses",
                    "licenses",
                    "mode",
                    "mode",
                    "savedState",
                    "savedState",
                    "shieldedInstanceInitialState",
                    "shieldedInstanceInitialState",
                    "source",
                    "source",
                    "type",
                    "type"
                ],
                "properties": {
                    "architecture": {
                        "type": "string",
                        "nullable": true
                    },
                    "autoDelete": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "boot": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "deviceName": {
                        "type": "string",
                        "nullable": true
                    },
                    "diskEncryptionKey": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PurpleDiskEncryptionKey"
                            }
                        ]
                    },
                    "diskSizeGb": {
                        "type": "string",
                        "nullable": true
                    },
                    "forceAttach": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "guestOsFeatures": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PurpleGuestOsFeature"
                        }
                    },
                    "index": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "initializeParams": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/InitializeParams"
                            }
                        ]
                    },
                    "interface": {
                        "type": "string",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    },
                    "licenses": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "mode": {
                        "type": "string",
                        "nullable": true
                    },
                    "savedState": {
                        "type": "string",
                        "nullable": true
                    },
                    "shieldedInstanceInitialState": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ShieldedInstanceInitialState"
                            }
                        ]
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PurpleDiskEncryptionKey": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kmsKeyName",
                    "kmsKeyName",
                    "kmsKeyServiceAccount",
                    "kmsKeyServiceAccount",
                    "rawKey",
                    "rawKey",
                    "rsaEncryptedKey",
                    "rsaEncryptedKey",
                    "sha256",
                    "sha256"
                ],
                "properties": {
                    "kmsKeyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "kmsKeyServiceAccount": {
                        "type": "string",
                        "nullable": true
                    },
                    "rawKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "rsaEncryptedKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PurpleGuestOsFeature": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "InitializeParams": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "architecture",
                    "architecture",
                    "description",
                    "description",
                    "diskName",
                    "diskName",
                    "diskSizeGb",
                    "diskSizeGb",
                    "diskType",
                    "diskType",
                    "licenses",
                    "licenses",
                    "onUpdateAction",
                    "onUpdateAction",
                    "provisionedIops",
                    "provisionedIops",
                    "provisionedThroughput",
                    "provisionedThroughput",
                    "replicaZones",
                    "replicaZones",
                    "resourcePolicies",
                    "resourcePolicies",
                    "sourceImage",
                    "sourceImage",
                    "sourceImageEncryptionKey",
                    "sourceImageEncryptionKey",
                    "sourceSnapshot",
                    "sourceSnapshot",
                    "sourceSnapshotEncryptionKey",
                    "sourceSnapshotEncryptionKey"
                ],
                "properties": {
                    "architecture": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "diskName": {
                        "type": "string",
                        "nullable": true
                    },
                    "diskSizeGb": {
                        "type": "string",
                        "nullable": true
                    },
                    "diskType": {
                        "type": "string",
                        "nullable": true
                    },
                    "licenses": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "onUpdateAction": {
                        "type": "string",
                        "nullable": true
                    },
                    "provisionedIops": {
                        "type": "string",
                        "nullable": true
                    },
                    "provisionedThroughput": {
                        "type": "string",
                        "nullable": true
                    },
                    "replicaZones": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "resourcePolicies": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourceImage": {
                        "type": "string",
                        "nullable": true
                    },
                    "sourceImageEncryptionKey": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SourceImageEncryptionKey"
                            }
                        ]
                    },
                    "sourceSnapshot": {
                        "type": "string",
                        "nullable": true
                    },
                    "sourceSnapshotEncryptionKey": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SourceSnapshotEncryptionKey"
                            }
                        ]
                    }
                }
            },
            "SourceImageEncryptionKey": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kmsKeyName",
                    "kmsKeyName",
                    "kmsKeyServiceAccount",
                    "kmsKeyServiceAccount",
                    "rawKey",
                    "rawKey",
                    "rsaEncryptedKey",
                    "rsaEncryptedKey",
                    "sha256",
                    "sha256"
                ],
                "properties": {
                    "kmsKeyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "kmsKeyServiceAccount": {
                        "type": "string",
                        "nullable": true
                    },
                    "rawKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "rsaEncryptedKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SourceSnapshotEncryptionKey": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kmsKeyName",
                    "kmsKeyName",
                    "kmsKeyServiceAccount",
                    "kmsKeyServiceAccount",
                    "rawKey",
                    "rawKey",
                    "rsaEncryptedKey",
                    "rsaEncryptedKey",
                    "sha256",
                    "sha256"
                ],
                "properties": {
                    "kmsKeyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "kmsKeyServiceAccount": {
                        "type": "string",
                        "nullable": true
                    },
                    "rawKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "rsaEncryptedKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ShieldedInstanceInitialState": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "dbs",
                    "dbs",
                    "dbxs",
                    "dbxs",
                    "keks",
                    "keks",
                    "pk",
                    "pk"
                ],
                "properties": {
                    "dbs": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/Db"
                        }
                    },
                    "dbxs": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/Dbx"
                        }
                    },
                    "keks": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/Kek"
                        }
                    },
                    "pk": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Pk"
                            }
                        ]
                    }
                }
            },
            "Db": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "content",
                    "content",
                    "fileType",
                    "fileType"
                ],
                "properties": {
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileType": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Dbx": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "content",
                    "content",
                    "fileType",
                    "fileType"
                ],
                "properties": {
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileType": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Kek": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "content",
                    "content",
                    "fileType",
                    "fileType"
                ],
                "properties": {
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileType": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Pk": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "content",
                    "content",
                    "fileType",
                    "fileType"
                ],
                "properties": {
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileType": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "InstancePropertiesGuestAccelerator": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "acceleratorCount",
                    "acceleratorCount",
                    "acceleratorType",
                    "acceleratorType"
                ],
                "properties": {
                    "acceleratorCount": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "acceleratorType": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "InstancePropertiesMetadata": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "fingerprint",
                    "fingerprint",
                    "items",
                    "items",
                    "kind",
                    "kind"
                ],
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PurpleItem"
                        }
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PurpleItem": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "value",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "InstancePropertiesNetworkInterface": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accessConfigs",
                    "accessConfigs",
                    "aliasIpRanges",
                    "aliasIpRanges",
                    "fingerprint",
                    "fingerprint",
                    "internalIpv6PrefixLength",
                    "internalIpv6PrefixLength",
                    "ipv6AccessConfigs",
                    "ipv6AccessConfigs",
                    "ipv6AccessType",
                    "ipv6AccessType",
                    "ipv6Address",
                    "ipv6Address",
                    "kind",
                    "kind",
                    "name",
                    "name",
                    "network",
                    "network",
                    "networkAttachment",
                    "networkAttachment",
                    "networkIp",
                    "networkIp",
                    "nicType",
                    "nicType",
                    "queueCount",
                    "queueCount",
                    "stackType",
                    "stackType",
                    "subnetwork",
                    "subnetwork"
                ],
                "properties": {
                    "accessConfigs": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PurpleAccessConfig"
                        }
                    },
                    "aliasIpRanges": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PurpleAliasIpRange"
                        }
                    },
                    "fingerprint": {
                        "type": "string",
                        "nullable": true
                    },
                    "internalIpv6PrefixLength": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "ipv6AccessConfigs": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PurpleIpv6AccessConfig"
                        }
                    },
                    "ipv6AccessType": {
                        "type": "string",
                        "nullable": true
                    },
                    "ipv6Address": {
                        "type": "string",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "network": {
                        "type": "string",
                        "nullable": true
                    },
                    "networkAttachment": {
                        "type": "string",
                        "nullable": true
                    },
                    "networkIp": {
                        "type": "string",
                        "nullable": true
                    },
                    "nicType": {
                        "type": "string",
                        "nullable": true
                    },
                    "queueCount": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "stackType": {
                        "type": "string",
                        "nullable": true
                    },
                    "subnetwork": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PurpleAccessConfig": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "externalIpv6",
                    "externalIpv6",
                    "externalIpv6PrefixLength",
                    "externalIpv6PrefixLength",
                    "kind",
                    "kind",
                    "name",
                    "name",
                    "natIp",
                    "natIp",
                    "networkTier",
                    "networkTier",
                    "publicPtrDomainName",
                    "publicPtrDomainName",
                    "securityPolicy",
                    "securityPolicy",
                    "setPublicPtr",
                    "setPublicPtr",
                    "type",
                    "type"
                ],
                "properties": {
                    "externalIpv6": {
                        "type": "string",
                        "nullable": true
                    },
                    "externalIpv6PrefixLength": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "natIp": {
                        "type": "string",
                        "nullable": true
                    },
                    "networkTier": {
                        "type": "string",
                        "nullable": true
                    },
                    "publicPtrDomainName": {
                        "type": "string",
                        "nullable": true
                    },
                    "securityPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "setPublicPtr": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PurpleAliasIpRange": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ipCidrRange",
                    "ipCidrRange",
                    "subnetworkRangeName",
                    "subnetworkRangeName"
                ],
                "properties": {
                    "ipCidrRange": {
                        "type": "string",
                        "nullable": true
                    },
                    "subnetworkRangeName": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PurpleIpv6AccessConfig": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "externalIpv6",
                    "externalIpv6",
                    "externalIpv6PrefixLength",
                    "externalIpv6PrefixLength",
                    "kind",
                    "kind",
                    "name",
                    "name",
                    "natIp",
                    "natIp",
                    "networkTier",
                    "networkTier",
                    "publicPtrDomainName",
                    "publicPtrDomainName",
                    "securityPolicy",
                    "securityPolicy",
                    "setPublicPtr",
                    "setPublicPtr",
                    "type",
                    "type"
                ],
                "properties": {
                    "externalIpv6": {
                        "type": "string",
                        "nullable": true
                    },
                    "externalIpv6PrefixLength": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "natIp": {
                        "type": "string",
                        "nullable": true
                    },
                    "networkTier": {
                        "type": "string",
                        "nullable": true
                    },
                    "publicPtrDomainName": {
                        "type": "string",
                        "nullable": true
                    },
                    "securityPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "setPublicPtr": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "NetworkPerformanceConfig": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "totalEgressBandwidthTier",
                    "totalEgressBandwidthTier"
                ],
                "properties": {
                    "totalEgressBandwidthTier": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ReservationAffinity": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "consumeReservationType",
                    "consumeReservationType",
                    "key",
                    "key",
                    "values",
                    "values"
                ],
                "properties": {
                    "consumeReservationType": {
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "values": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "InstancePropertiesScheduling": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "automaticRestart",
                    "automaticRestart",
                    "instanceTerminationAction",
                    "instanceTerminationAction",
                    "localSsdRecoveryTimeout",
                    "localSsdRecoveryTimeout",
                    "locationHint",
                    "locationHint",
                    "minNodeCpus",
                    "minNodeCpus",
                    "nodeAffinities",
                    "nodeAffinities",
                    "onHostMaintenance",
                    "onHostMaintenance",
                    "preemptible",
                    "preemptible",
                    "provisioningModel",
                    "provisioningModel"
                ],
                "properties": {
                    "automaticRestart": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "instanceTerminationAction": {
                        "type": "string",
                        "nullable": true
                    },
                    "localSsdRecoveryTimeout": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PurpleLocalSsdRecoveryTimeout"
                            }
                        ]
                    },
                    "locationHint": {
                        "type": "string",
                        "nullable": true
                    },
                    "minNodeCpus": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "nodeAffinities": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PurpleNodeAffinity"
                        }
                    },
                    "onHostMaintenance": {
                        "type": "string",
                        "nullable": true
                    },
                    "preemptible": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "provisioningModel": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PurpleLocalSsdRecoveryTimeout": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "nanos",
                    "nanos",
                    "seconds",
                    "seconds"
                ],
                "properties": {
                    "nanos": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "seconds": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PurpleNodeAffinity": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "operator",
                    "operator",
                    "values",
                    "values"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "operator": {
                        "type": "string",
                        "nullable": true
                    },
                    "values": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "InstancePropertiesServiceAccount": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "email",
                    "email",
                    "scopes",
                    "scopes"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "scopes": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ShieldedInstanceConfig": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "enableIntegrityMonitoring",
                    "enableIntegrityMonitoring",
                    "enableSecureBoot",
                    "enableSecureBoot",
                    "enableVtpm",
                    "enableVtpm"
                ],
                "properties": {
                    "enableIntegrityMonitoring": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "enableSecureBoot": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "enableVtpm": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "InstancePropertiesTags": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "fingerprint",
                    "fingerprint",
                    "items",
                    "items"
                ],
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MachineImageEncryptionKey": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kmsKeyName",
                    "kmsKeyName",
                    "kmsKeyServiceAccount",
                    "kmsKeyServiceAccount",
                    "rawKey",
                    "rawKey",
                    "rsaEncryptedKey",
                    "rsaEncryptedKey",
                    "sha256",
                    "sha256"
                ],
                "properties": {
                    "kmsKeyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "kmsKeyServiceAccount": {
                        "type": "string",
                        "nullable": true
                    },
                    "rawKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "rsaEncryptedKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SavedDisk": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "architecture",
                    "architecture",
                    "kind",
                    "kind",
                    "sourceDisk",
                    "sourceDisk",
                    "storageBytes",
                    "storageBytes",
                    "storageBytesStatus",
                    "storageBytesStatus"
                ],
                "properties": {
                    "architecture": {
                        "type": "string",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    },
                    "sourceDisk": {
                        "type": "string",
                        "nullable": true
                    },
                    "storageBytes": {
                        "type": "string",
                        "nullable": true
                    },
                    "storageBytesStatus": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SourceDiskEncryptionKey": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "diskEncryptionKey",
                    "diskEncryptionKey",
                    "sourceDisk",
                    "sourceDisk"
                ],
                "properties": {
                    "diskEncryptionKey": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SourceDiskEncryptionKeyDiskEncryptionKey"
                            }
                        ]
                    },
                    "sourceDisk": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SourceDiskEncryptionKeyDiskEncryptionKey": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kmsKeyName",
                    "kmsKeyName",
                    "kmsKeyServiceAccount",
                    "kmsKeyServiceAccount",
                    "rawKey",
                    "rawKey",
                    "rsaEncryptedKey",
                    "rsaEncryptedKey",
                    "sha256",
                    "sha256"
                ],
                "properties": {
                    "kmsKeyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "kmsKeyServiceAccount": {
                        "type": "string",
                        "nullable": true
                    },
                    "rawKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "rsaEncryptedKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SourceInstanceProperties": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "canIpForward",
                    "canIpForward",
                    "deletionProtection",
                    "deletionProtection",
                    "description",
                    "description",
                    "disks",
                    "disks",
                    "guestAccelerators",
                    "guestAccelerators",
                    "keyRevocationActionType",
                    "keyRevocationActionType",
                    "machineType",
                    "machineType",
                    "metadata",
                    "metadata",
                    "minCpuPlatform",
                    "minCpuPlatform",
                    "networkInterfaces",
                    "networkInterfaces",
                    "scheduling",
                    "scheduling",
                    "serviceAccounts",
                    "serviceAccounts",
                    "tags",
                    "tags"
                ],
                "properties": {
                    "canIpForward": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "disks": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/SourceInstancePropertiesDisk"
                        }
                    },
                    "guestAccelerators": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/SourceInstancePropertiesGuestAccelerator"
                        }
                    },
                    "keyRevocationActionType": {
                        "type": "string",
                        "nullable": true
                    },
                    "machineType": {
                        "type": "string",
                        "nullable": true
                    },
                    "metadata": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SourceInstancePropertiesMetadata"
                            }
                        ]
                    },
                    "minCpuPlatform": {
                        "type": "string",
                        "nullable": true
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/SourceInstancePropertiesNetworkInterface"
                        }
                    },
                    "scheduling": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SourceInstancePropertiesScheduling"
                            }
                        ]
                    },
                    "serviceAccounts": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/SourceInstancePropertiesServiceAccount"
                        }
                    },
                    "tags": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SourceInstancePropertiesTags"
                            }
                        ]
                    }
                }
            },
            "SourceInstancePropertiesDisk": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "autoDelete",
                    "autoDelete",
                    "boot",
                    "boot",
                    "deviceName",
                    "deviceName",
                    "diskEncryptionKey",
                    "diskEncryptionKey",
                    "diskSizeGb",
                    "diskSizeGb",
                    "diskType",
                    "diskType",
                    "guestOsFeatures",
                    "guestOsFeatures",
                    "index",
                    "index",
                    "interface",
                    "interface",
                    "kind",
                    "kind",
                    "licenses",
                    "licenses",
                    "mode",
                    "mode",
                    "source",
                    "source",
                    "storageBytes",
                    "storageBytes",
                    "storageBytesStatus",
                    "storageBytesStatus",
                    "type",
                    "type"
                ],
                "properties": {
                    "autoDelete": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "boot": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "deviceName": {
                        "type": "string",
                        "nullable": true
                    },
                    "diskEncryptionKey": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/FluffyDiskEncryptionKey"
                            }
                        ]
                    },
                    "diskSizeGb": {
                        "type": "string",
                        "nullable": true
                    },
                    "diskType": {
                        "type": "string",
                        "nullable": true
                    },
                    "guestOsFeatures": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/FluffyGuestOsFeature"
                        }
                    },
                    "index": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "interface": {
                        "type": "string",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    },
                    "licenses": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "mode": {
                        "type": "string",
                        "nullable": true
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "storageBytes": {
                        "type": "string",
                        "nullable": true
                    },
                    "storageBytesStatus": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FluffyDiskEncryptionKey": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "kmsKeyName",
                    "kmsKeyName",
                    "kmsKeyServiceAccount",
                    "kmsKeyServiceAccount",
                    "rawKey",
                    "rawKey",
                    "rsaEncryptedKey",
                    "rsaEncryptedKey",
                    "sha256",
                    "sha256"
                ],
                "properties": {
                    "kmsKeyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "kmsKeyServiceAccount": {
                        "type": "string",
                        "nullable": true
                    },
                    "rawKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "rsaEncryptedKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FluffyGuestOsFeature": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "type",
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SourceInstancePropertiesGuestAccelerator": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "acceleratorCount",
                    "acceleratorCount",
                    "acceleratorType",
                    "acceleratorType"
                ],
                "properties": {
                    "acceleratorCount": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "acceleratorType": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SourceInstancePropertiesMetadata": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "fingerprint",
                    "fingerprint",
                    "items",
                    "items",
                    "kind",
                    "kind"
                ],
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/FluffyItem"
                        }
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FluffyItem": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "value",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SourceInstancePropertiesNetworkInterface": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "accessConfigs",
                    "accessConfigs",
                    "aliasIpRanges",
                    "aliasIpRanges",
                    "fingerprint",
                    "fingerprint",
                    "internalIpv6PrefixLength",
                    "internalIpv6PrefixLength",
                    "ipv6AccessConfigs",
                    "ipv6AccessConfigs",
                    "ipv6AccessType",
                    "ipv6AccessType",
                    "ipv6Address",
                    "ipv6Address",
                    "kind",
                    "kind",
                    "name",
                    "name",
                    "network",
                    "network",
                    "networkAttachment",
                    "networkAttachment",
                    "networkIp",
                    "networkIp",
                    "nicType",
                    "nicType",
                    "queueCount",
                    "queueCount",
                    "stackType",
                    "stackType",
                    "subnetwork",
                    "subnetwork"
                ],
                "properties": {
                    "accessConfigs": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/FluffyAccessConfig"
                        }
                    },
                    "aliasIpRanges": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/FluffyAliasIpRange"
                        }
                    },
                    "fingerprint": {
                        "type": "string",
                        "nullable": true
                    },
                    "internalIpv6PrefixLength": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "ipv6AccessConfigs": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/FluffyIpv6AccessConfig"
                        }
                    },
                    "ipv6AccessType": {
                        "type": "string",
                        "nullable": true
                    },
                    "ipv6Address": {
                        "type": "string",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "network": {
                        "type": "string",
                        "nullable": true
                    },
                    "networkAttachment": {
                        "type": "string",
                        "nullable": true
                    },
                    "networkIp": {
                        "type": "string",
                        "nullable": true
                    },
                    "nicType": {
                        "type": "string",
                        "nullable": true
                    },
                    "queueCount": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "stackType": {
                        "type": "string",
                        "nullable": true
                    },
                    "subnetwork": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FluffyAccessConfig": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "externalIpv6",
                    "externalIpv6",
                    "externalIpv6PrefixLength",
                    "externalIpv6PrefixLength",
                    "kind",
                    "kind",
                    "name",
                    "name",
                    "natIp",
                    "natIp",
                    "networkTier",
                    "networkTier",
                    "publicPtrDomainName",
                    "publicPtrDomainName",
                    "securityPolicy",
                    "securityPolicy",
                    "setPublicPtr",
                    "setPublicPtr",
                    "type",
                    "type"
                ],
                "properties": {
                    "externalIpv6": {
                        "type": "string",
                        "nullable": true
                    },
                    "externalIpv6PrefixLength": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "natIp": {
                        "type": "string",
                        "nullable": true
                    },
                    "networkTier": {
                        "type": "string",
                        "nullable": true
                    },
                    "publicPtrDomainName": {
                        "type": "string",
                        "nullable": true
                    },
                    "securityPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "setPublicPtr": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FluffyAliasIpRange": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ipCidrRange",
                    "ipCidrRange",
                    "subnetworkRangeName",
                    "subnetworkRangeName"
                ],
                "properties": {
                    "ipCidrRange": {
                        "type": "string",
                        "nullable": true
                    },
                    "subnetworkRangeName": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FluffyIpv6AccessConfig": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "externalIpv6",
                    "externalIpv6",
                    "externalIpv6PrefixLength",
                    "externalIpv6PrefixLength",
                    "kind",
                    "kind",
                    "name",
                    "name",
                    "natIp",
                    "natIp",
                    "networkTier",
                    "networkTier",
                    "publicPtrDomainName",
                    "publicPtrDomainName",
                    "securityPolicy",
                    "securityPolicy",
                    "setPublicPtr",
                    "setPublicPtr",
                    "type",
                    "type"
                ],
                "properties": {
                    "externalIpv6": {
                        "type": "string",
                        "nullable": true
                    },
                    "externalIpv6PrefixLength": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "natIp": {
                        "type": "string",
                        "nullable": true
                    },
                    "networkTier": {
                        "type": "string",
                        "nullable": true
                    },
                    "publicPtrDomainName": {
                        "type": "string",
                        "nullable": true
                    },
                    "securityPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "setPublicPtr": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SourceInstancePropertiesScheduling": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "automaticRestart",
                    "automaticRestart",
                    "instanceTerminationAction",
                    "instanceTerminationAction",
                    "localSsdRecoveryTimeout",
                    "localSsdRecoveryTimeout",
                    "locationHint",
                    "locationHint",
                    "minNodeCpus",
                    "minNodeCpus",
                    "nodeAffinities",
                    "nodeAffinities",
                    "onHostMaintenance",
                    "onHostMaintenance",
                    "preemptible",
                    "preemptible",
                    "provisioningModel",
                    "provisioningModel"
                ],
                "properties": {
                    "automaticRestart": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "instanceTerminationAction": {
                        "type": "string",
                        "nullable": true
                    },
                    "localSsdRecoveryTimeout": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/FluffyLocalSsdRecoveryTimeout"
                            }
                        ]
                    },
                    "locationHint": {
                        "type": "string",
                        "nullable": true
                    },
                    "minNodeCpus": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "nodeAffinities": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/FluffyNodeAffinity"
                        }
                    },
                    "onHostMaintenance": {
                        "type": "string",
                        "nullable": true
                    },
                    "preemptible": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "provisioningModel": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FluffyLocalSsdRecoveryTimeout": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "nanos",
                    "nanos",
                    "seconds",
                    "seconds"
                ],
                "properties": {
                    "nanos": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "seconds": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FluffyNodeAffinity": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "operator",
                    "operator",
                    "values",
                    "values"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "operator": {
                        "type": "string",
                        "nullable": true
                    },
                    "values": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SourceInstancePropertiesServiceAccount": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "email",
                    "email",
                    "scopes",
                    "scopes"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "scopes": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SourceInstancePropertiesTags": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "fingerprint",
                    "fingerprint",
                    "items",
                    "items"
                ],
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CloudSqsViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "externalId",
                    "externalId",
                    "region",
                    "region",
                    "accountId",
                    "accountId",
                    "cloudAccountId",
                    "cloudAccountId",
                    "createdTimestamp",
                    "createdTimestamp",
                    "lastModifiedTimestamp",
                    "lastModifiedTimestamp",
                    "messageRetentionPeriod",
                    "messageRetentionPeriod",
                    "policy",
                    "policy",
                    "name",
                    "name",
                    "receiveMessageWaitTimeSeconds",
                    "receiveMessageWaitTimeSeconds",
                    "kmsDataKeyReusePeriodSeconds",
                    "kmsDataKeyReusePeriodSeconds",
                    "redrivePolicy",
                    "redrivePolicy",
                    "kmsMasterKeyId",
                    "kmsMasterKeyId",
                    "visibilityTimeout",
                    "visibilityTimeout",
                    "queueUrl",
                    "queueUrl",
                    "maximumMessageSize",
                    "maximumMessageSize",
                    "delaySeconds",
                    "delaySeconds",
                    "tags",
                    "tags",
                    "sqsManagedSseEnabled",
                    "sqsManagedSseEnabled"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "region": {
                        "$ref": "#/components/schemas/CloudRegion"
                    },
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cloudAccountId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "createdTimestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedTimestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "messageRetentionPeriod": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "receiveMessageWaitTimeSeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "kmsDataKeyReusePeriodSeconds": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "redrivePolicy": {
                        "$ref": "#/components/schemas/AwsSqsRedrivePolicyViewModel"
                    },
                    "kmsMasterKeyId": {
                        "type": "string"
                    },
                    "visibilityTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "queueUrl": {
                        "type": "string"
                    },
                    "maximumMessageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "delaySeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tags": {
                        "$ref": "#/components/schemas/TagsDictionary"
                    },
                    "sqsManagedSseEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "AwsSqsRedrivePolicyViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "deadLetterTargetArn",
                    "deadLetterTargetArn",
                    "maxReceiveCount",
                    "maxReceiveCount"
                ],
                "properties": {
                    "deadLetterTargetArn": {
                        "type": "string"
                    },
                    "maxReceiveCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "TagsDictionary": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                }
            },
            "CloudS3BucketViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "externalId",
                    "externalId",
                    "name",
                    "name",
                    "region",
                    "region",
                    "cloudAccountId",
                    "cloudAccountId",
                    "accountId",
                    "accountId",
                    "bucketName",
                    "bucketName",
                    "creationTime",
                    "creationTime",
                    "bucketLogging",
                    "bucketLogging",
                    "bucketAcl",
                    "bucketAcl",
                    "bucketPolicy",
                    "bucketPolicy",
                    "bucketVersioning",
                    "bucketVersioning",
                    "bucketWebsite",
                    "bucketWebsite",
                    "bucketEncryption",
                    "bucketEncryption",
                    "bucketReplication",
                    "bucketReplication",
                    "bucketLifecycle",
                    "bucketLifecycle",
                    "publicAccessBlock",
                    "publicAccessBlock",
                    "s3RegionName",
                    "s3RegionName",
                    "tags",
                    "tags"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CloudRegion"
                            }
                        ]
                    },
                    "cloudAccountId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bucketName": {
                        "type": "string"
                    },
                    "creationTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "bucketLogging": {
                        "$ref": "#/components/schemas/CloudS3BucketLoggingViewModel"
                    },
                    "bucketAcl": {
                        "$ref": "#/components/schemas/CloudS3BucketAclViewModel"
                    },
                    "bucketPolicy": {
                        "$ref": "#/components/schemas/CloudS3BucketPolicyViewModel"
                    },
                    "bucketVersioning": {
                        "$ref": "#/components/schemas/CloudS3BucketVersioningViewModel"
                    },
                    "bucketWebsite": {
                        "$ref": "#/components/schemas/CloudS3BucketWebsiteViewModel"
                    },
                    "bucketEncryption": {
                        "$ref": "#/components/schemas/CloudS3ServerSideEncryptionConfigurationViewModel"
                    },
                    "bucketReplication": {
                        "$ref": "#/components/schemas/CloudS3ReplicationConfigurationViewModel"
                    },
                    "bucketLifecycle": {
                        "$ref": "#/components/schemas/CloudS3LifecycleConfigurationViewModel"
                    },
                    "publicAccessBlock": {
                        "$ref": "#/components/schemas/CloudS3BucketPublicAccessBlockViewModel"
                    },
                    "s3RegionName": {
                        "type": "string"
                    },
                    "tags": {
                        "$ref": "#/components/schemas/TagsDictionary"
                    }
                }
            },
            "CloudS3BucketLoggingViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "targetPrefix",
                    "targetPrefix",
                    "targetBucketName",
                    "targetBucketName",
                    "grants",
                    "grants"
                ],
                "properties": {
                    "targetPrefix": {
                        "type": "string"
                    },
                    "targetBucketName": {
                        "type": "string"
                    },
                    "grants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3BucketGrantViewModel"
                        }
                    }
                }
            },
            "CloudS3BucketGrantViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "granteeType",
                    "granteeType",
                    "granteeCanonicalUser",
                    "granteeCanonicalUser",
                    "granteeDisplayName",
                    "granteeDisplayName",
                    "granteeEmailAddress",
                    "granteeEmailAddress",
                    "granteeURI",
                    "granteeURI",
                    "granteePremissionHeaderName",
                    "granteePremissionHeaderName",
                    "granteePremission",
                    "granteePremission"
                ],
                "properties": {
                    "granteeType": {
                        "type": "string"
                    },
                    "granteeCanonicalUser": {
                        "type": "string"
                    },
                    "granteeDisplayName": {
                        "type": "string"
                    },
                    "granteeEmailAddress": {
                        "type": "string"
                    },
                    "granteeURI": {
                        "type": "string"
                    },
                    "granteePremissionHeaderName": {
                        "type": "string"
                    },
                    "granteePremission": {
                        "type": "string"
                    }
                }
            },
            "CloudS3BucketAclViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "ownerId",
                    "ownerId",
                    "ownerDisplayName",
                    "ownerDisplayName",
                    "grants",
                    "grants"
                ],
                "properties": {
                    "ownerId": {
                        "type": "string"
                    },
                    "ownerDisplayName": {
                        "type": "string"
                    },
                    "grants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3BucketGrantViewModel"
                        }
                    }
                }
            },
            "CloudS3BucketPolicyViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "document",
                    "document"
                ],
                "properties": {
                    "document": {
                        "type": "string"
                    }
                }
            },
            "CloudS3BucketVersioningViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status",
                    "status",
                    "mfaDelete",
                    "mfaDelete"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "mfaDelete": {
                        "type": "boolean"
                    }
                }
            },
            "CloudS3BucketWebsiteViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "indexDocumentSuffix",
                    "indexDocumentSuffix",
                    "errorDocument",
                    "errorDocument",
                    "routingRules",
                    "routingRules",
                    "redirectAllRequestsTo",
                    "redirectAllRequestsTo"
                ],
                "properties": {
                    "indexDocumentSuffix": {
                        "type": "string"
                    },
                    "errorDocument": {
                        "type": "string"
                    },
                    "routingRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3RoutingRuleViewModel"
                        }
                    },
                    "redirectAllRequestsTo": {
                        "$ref": "#/components/schemas/CloudS3RoutingRuleRedirectViewModel"
                    }
                }
            },
            "CloudS3RoutingRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "condition",
                    "condition",
                    "redirect",
                    "redirect"
                ],
                "properties": {
                    "condition": {
                        "$ref": "#/components/schemas/CloudS3RoutingRuleConditionViewModel"
                    },
                    "redirect": {
                        "$ref": "#/components/schemas/CloudS3RoutingRuleRedirectViewModel"
                    }
                }
            },
            "CloudS3RoutingRuleConditionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "httpErrorCodeReturnedEquals",
                    "httpErrorCodeReturnedEquals",
                    "keyPrefixEquals",
                    "keyPrefixEquals"
                ],
                "properties": {
                    "httpErrorCodeReturnedEquals": {
                        "type": "string"
                    },
                    "keyPrefixEquals": {
                        "type": "string"
                    }
                }
            },
            "CloudS3RoutingRuleRedirectViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "hostName",
                    "hostName",
                    "httpRedirectCode",
                    "httpRedirectCode",
                    "protocol",
                    "protocol",
                    "replaceKeyPrefixWith",
                    "replaceKeyPrefixWith",
                    "replaceKeyWith",
                    "replaceKeyWith"
                ],
                "properties": {
                    "hostName": {
                        "type": "string"
                    },
                    "httpRedirectCode": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "replaceKeyPrefixWith": {
                        "type": "string"
                    },
                    "replaceKeyWith": {
                        "type": "string"
                    }
                }
            },
            "CloudS3ServerSideEncryptionConfigurationViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "serverSideEncryptionRules",
                    "serverSideEncryptionRules"
                ],
                "properties": {
                    "serverSideEncryptionRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3ServerSideEncryptionRuleViewModel"
                        }
                    }
                }
            },
            "CloudS3ServerSideEncryptionRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "serverSideEncryptionByDefault",
                    "serverSideEncryptionByDefault"
                ],
                "properties": {
                    "serverSideEncryptionByDefault": {
                        "$ref": "#/components/schemas/CloudS3ServerSideEncryptionByDefaultViewModel"
                    }
                }
            },
            "CloudS3ServerSideEncryptionByDefaultViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "serverSideEncryptionAlgorithm",
                    "serverSideEncryptionAlgorithm",
                    "serverSideEncryptionKeyManagementServiceKeyId",
                    "serverSideEncryptionKeyManagementServiceKeyId"
                ],
                "properties": {
                    "serverSideEncryptionAlgorithm": {
                        "type": "string"
                    },
                    "serverSideEncryptionKeyManagementServiceKeyId": {
                        "type": "string"
                    }
                }
            },
            "CloudS3ReplicationConfigurationViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "role",
                    "role",
                    "rules",
                    "rules"
                ],
                "properties": {
                    "role": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3ReplicationRuleViewModel"
                        }
                    }
                }
            },
            "CloudS3ReplicationRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id",
                    "id",
                    "prefix",
                    "prefix",
                    "status",
                    "status",
                    "destination",
                    "destination"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/CloudS3ReplicationDestinationViewModel"
                    }
                }
            },
            "CloudS3ReplicationDestinationViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "bucketArn",
                    "bucketArn",
                    "storageClass",
                    "storageClass"
                ],
                "properties": {
                    "bucketArn": {
                        "type": "string"
                    },
                    "storageClass": {
                        "type": "string"
                    }
                }
            },
            "CloudS3LifecycleConfigurationViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "rules",
                    "rules"
                ],
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3LifecycleRuleViewModel"
                        }
                    }
                }
            },
            "CloudS3LifecycleRuleViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "expiration",
                    "expiration",
                    "id",
                    "id",
                    "prefix",
                    "prefix",
                    "filter",
                    "filter",
                    "status",
                    "status",
                    "transition",
                    "transition",
                    "noncurrentVersionExpiration",
                    "noncurrentVersionExpiration",
                    "noncurrentVersionTransition",
                    "noncurrentVersionTransition",
                    "transitions",
                    "transitions",
                    "noncurrentVersionTransitions",
                    "noncurrentVersionTransitions",
                    "abortIncompleteMultipartUpload",
                    "abortIncompleteMultipartUpload"
                ],
                "properties": {
                    "expiration": {
                        "$ref": "#/components/schemas/CloudS3LifecycleRuleExpirationViewModel"
                    },
                    "id": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/CloudS3LifecycleFilterViewModel"
                    },
                    "status": {
                        "type": "string"
                    },
                    "transition": {
                        "$ref": "#/components/schemas/CloudS3LifecycleTransitionViewModel"
                    },
                    "noncurrentVersionExpiration": {
                        "$ref": "#/components/schemas/CloudS3LifecycleRuleNoncurrentVersionExpirationViewModel"
                    },
                    "noncurrentVersionTransition": {
                        "$ref": "#/components/schemas/CloudS3LifecycleRuleNoncurrentVersionTransitionViewModel"
                    },
                    "transitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3LifecycleTransitionViewModel"
                        }
                    },
                    "noncurrentVersionTransitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3LifecycleRuleNoncurrentVersionTransitionViewModel"
                        }
                    },
                    "abortIncompleteMultipartUpload": {
                        "$ref": "#/components/schemas/CloudS3LifecycleRuleAbortIncompleteMultipartUploadViewModel"
                    }
                }
            },
            "CloudS3LifecycleRuleExpirationViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "date",
                    "date",
                    "dateUtc",
                    "dateUtc",
                    "days",
                    "days",
                    "expiredObjectDeleteMarker",
                    "expiredObjectDeleteMarker"
                ],
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "days": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "expiredObjectDeleteMarker": {
                        "type": "boolean"
                    }
                }
            },
            "CloudS3LifecycleFilterViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "lifecycleFilterPredicate",
                    "lifecycleFilterPredicate"
                ],
                "properties": {
                    "lifecycleFilterPredicate": {
                        "$ref": "#/components/schemas/CloudS3LifecycleFilterPredicateViewModel"
                    }
                }
            },
            "CloudS3LifecycleFilterPredicateViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "prefixOperand",
                    "prefixOperand",
                    "tagOperands",
                    "tagOperands"
                ],
                "properties": {
                    "prefixOperand": {
                        "$ref": "#/components/schemas/CloudS3LifecyclePrefixPredicateViewModel"
                    },
                    "tagOperands": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudS3LifecycleTagPredicateViewModel"
                        }
                    }
                }
            },
            "CloudS3LifecyclePrefixPredicateViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "prefix",
                    "prefix"
                ],
                "properties": {
                    "prefix": {
                        "type": "string"
                    }
                }
            },
            "CloudS3LifecycleTagPredicateViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "tag",
                    "tag"
                ],
                "properties": {
                    "tag": {
                        "$ref": "#/components/schemas/CloudS3TagViewModel"
                    }
                }
            },
            "CloudS3TagViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "key",
                    "key",
                    "value",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "CloudS3LifecycleTransitionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "date",
                    "date",
                    "dateUtc",
                    "dateUtc",
                    "days",
                    "days",
                    "storageClass",
                    "storageClass"
                ],
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "days": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "storageClass": {
                        "type": "string"
                    }
                }
            },
            "CloudS3LifecycleRuleNoncurrentVersionExpirationViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "noncurrentDays",
                    "noncurrentDays"
                ],
                "properties": {
                    "noncurrentDays": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CloudS3LifecycleRuleNoncurrentVersionTransitionViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "noncurrentDays",
                    "noncurrentDays",
                    "storageClass",
                    "storageClass"
                ],
                "properties": {
                    "noncurrentDays": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "storageClass": {
                        "type": "string"
                    }
                }
            },
            "CloudS3LifecycleRuleAbortIncompleteMultipartUploadViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "daysAfterInitiation",
                    "daysAfterInitiation"
                ],
                "properties": {
                    "daysAfterInitiation": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CloudS3BucketPublicAccessBlockViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "blockPublicAcls",
                    "blockPublicAcls",
                    "ignorePublicAcls",
                    "ignorePublicAcls",
                    "blockPublicPolicy",
                    "blockPublicPolicy",
                    "restrictPublicBuckets",
                    "restrictPublicBuckets"
                ],
                "properties": {
                    "blockPublicAcls": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "ignorePublicAcls": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "blockPublicPolicy": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "restrictPublicBuckets": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "AssetLabelsResponseViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "failedRecords",
                    "failedRecords",
                    "totalFailedRecords",
                    "totalFailedRecords",
                    "totalSuccessfulRecords",
                    "totalSuccessfulRecords"
                ],
                "properties": {
                    "failedRecords": {
                        "type": "array",
                        "default": [],
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/FailedAssetLabelsResponse"
                        }
                    },
                    "totalFailedRecords": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalSuccessfulRecords": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "FailedAssetLabelsResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "request",
                    "request",
                    "reason",
                    "reason"
                ],
                "properties": {
                    "request": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssetLabelsRequestViewModel"
                            }
                        ]
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "AssetLabelsRequestViewModel": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "entityId",
                    "entityId",
                    "cloudAccountId",
                    "cloudAccountId",
                    "accountId",
                    "accountId",
                    "entityType",
                    "entityType",
                    "assetLabels",
                    "assetLabels",
                    "operationType",
                    "operationType"
                ],
                "properties": {
                    "entityId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cloudAccountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "entityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "assetLabels": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationType": {
                        "$ref": "#/components/schemas/AssetLabelsOperationType"
                    }
                }
            },
            "AssetLabelsOperationType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Post",
                    "Delete"
                ],
                "enum": [
                    "Post",
                    "Delete"
                ]
            },
            "EntityTypePlatformViewModel": {
                "type": "object",
                "properties": {
                    "entityType": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    }
                },
                "required": [
                    "entityType",
                    "platform"
                ]
            },
            "NodeViewModel": {
                "type": "object",
                "properties": {
                    "srl": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string",
                        "enum": [
                            "AutoScalingGroup",
                            "Bucket",
                            "Cdr",
                            "ContainerImage",
                            "ContainerWorkload",
                            "Cve",
                            "DatabaseServer",
                            "Database",
                            "Function",
                            "IamRole",
                            "IamUser",
                            "KubernetesService",
                            "VirtualMachine"
                        ]
                    },
                    "environmentId": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "object"
                    }
                },
                "required": [
                    "srl",
                    "label",
                    "properties"
                ]
            },
            "RelationshipViewModel": {
                "type": "object",
                "properties": {
                    "fromId": {
                        "type": "string"
                    },
                    "toId": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "required": [
                    "fromId",
                    "toId",
                    "label"
                ]
            },
            "EvidencePathViewModel": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeViewModel"
                        }
                    },
                    "relationships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RelationshipViewModel"
                        }
                    }
                },
                "required": [
                    "nodes",
                    "relationships"
                ]
            },
            "ExclusionFilterOperator": {
                "type": "string",
                "description": "eq: equal, in: equal to one of the values, between: between values, has_any: field has any of the values, like_any: like any",
                "enum": [
                    "in",
                    "eq",
                    "like_any",
                    "has_any",
                    "between"
                ]
            },
            "ExclusionSearchFieldFilterViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "environmentId",
                            "ruleId",
                            "severity",
                            "entityId",
                            "entityName",
                            "entityTags",
                            "entityTypeByPlatform",
                            "timestamp"
                        ]
                    },
                    "values": {
                        "oneOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "boolean"
                                }
                            }
                        ],
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 50
                    },
                    "operator": {
                        "$ref": "#/components/schemas/ExclusionFilterOperator"
                    }
                },
                "required": [
                    "name",
                    "values",
                    "operator"
                ]
            },
            "ExclusionSearchAdvFilterViewModel": {
                "type": "object",
                "properties": {
                    "logicalOperator": {
                        "type": "string",
                        "enum": [
                            "and"
                        ],
                        "description": "Logical operator to apply on operands."
                    },
                    "operands": {
                        "minItems": 1,
                        "maxItems": 50,
                        "description": "Array of filter operands. An operand is an array of type SearchFieldFilterViewModel.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExclusionSearchFieldFilterViewModel"
                        }
                    }
                },
                "required": [
                    "logicalOperator",
                    "operands"
                ]
            },
            "SecurityGraphExclusionViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "filter": {
                        "description": "Filter object. A recursive filter object which provides complex filters.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExclusionSearchAdvFilterViewModel"
                            }
                        ]
                    },
                    "organizationalUnitIdsFilter": {
                        "uniqueItems": true,
                        "maxItems": 50,
                        "description": "List of organizational unit IDs filter.             Filters findings which their environment ID is under the organizational unit IDs or any of their descendants.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "_id"
                ]
            },
            "SecurityGraphExclusionRequestModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "filter": {
                        "description": "Filter object. A recursive filter object which provides complex filters.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExclusionSearchAdvFilterViewModel"
                            }
                        ]
                    },
                    "organizationalUnitIdsFilter": {
                        "uniqueItems": true,
                        "maxItems": 50,
                        "description": "List of organizational unit IDs filter.             Filters findings which their environment ID is under the organizational unit IDs or any of their descendants.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name"
                ]
            },
            "IdViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "SecurityGraphRuleViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "critical"
                        ]
                    },
                    "systemLabels": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "High IAM Privileges",
                                "IAM Exposure",
                                "Network Exposure",
                                "Sensitive Data",
                                "Third-Party",
                                "Vulnerabilities",
                                "WAF Advised"
                            ]
                        }
                    },
                    "entityLabels": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "AutoScalingGroup",
                                "Bucket",
                                "Cdr",
                                "ContainerImage",
                                "ContainerWorkload",
                                "Cve",
                                "DatabaseServer",
                                "Database",
                                "Function",
                                "IamRole",
                                "IamUser",
                                "KubernetesService",
                                "VirtualMachine"
                            ]
                        }
                    },
                    "platforms": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "aws",
                                "azure"
                            ]
                        }
                    },
                    "frameworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "remediation": {
                        "type": "string"
                    },
                    "concatRemediation": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "description",
                    "severity",
                    "systemLabels",
                    "entityLabels",
                    "platforms",
                    "frameworks"
                ]
            },
            "SeverityLevel": {
                "type": "number",
                "description": "0: Unknown, 1: Informational, 2: Low, 3: Medium, 4: High, 5: Critical, 6: Fatal, 99: Other",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    99
                ]
            },
            "FindingViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "findingKey": {
                        "type": "string"
                    },
                    "createdTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string",
                        "enum": [
                            "aws",
                            "hp",
                            "mellanox",
                            "awsgov",
                            "azure",
                            "google",
                            "containerregistry",
                            "awschina",
                            "azuregov",
                            "kubernetes",
                            "azurechina",
                            "terraform",
                            "generic",
                            "kubernetesruntimeassurance",
                            "shiftleft",
                            "sourcecodeassurance",
                            "imageassurance",
                            "alibaba",
                            "cft",
                            "oci"
                        ]
                    },
                    "environmentId": {
                        "type": "string"
                    },
                    "environmentExternalId": {
                        "type": "string"
                    },
                    "organizationalUnitId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Open",
                            "Closed"
                        ]
                    },
                    "statusReason": {
                        "type": "string",
                        "enum": [
                            "",
                            "Fixed",
                            "Resource Deleted",
                            "User Closed",
                            "Rule Deleted",
                            "Unknown"
                        ]
                    },
                    "isExcluded": {
                        "type": "boolean"
                    },
                    "origin": {
                        "type": "string",
                        "enum": [
                            "security-graph"
                        ]
                    },
                    "alertType": {
                        "type": "string",
                        "enum": [
                            "security-event",
                            "task",
                            "finding"
                        ]
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "ruleTitle": {
                        "type": "string"
                    },
                    "ruleLogic": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "severity": {
                        "$ref": "#/components/schemas/SeverityLevel"
                    },
                    "frameworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "systemLabels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "remediation": {
                        "type": "string"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "entityIdType": {
                        "type": "string"
                    },
                    "entityExternalId": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "entityLabels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "entityName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "payload": {
                        "type": "object"
                    },
                    "entityTypeByPlatform": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "findingKey",
                    "createdTime",
                    "updatedTime",
                    "accountId",
                    "platform",
                    "environmentId",
                    "environmentExternalId",
                    "organizationalUnitId",
                    "status",
                    "statusReason",
                    "isExcluded",
                    "origin",
                    "alertType",
                    "ruleId",
                    "ruleTitle",
                    "ruleLogic",
                    "description",
                    "severity",
                    "frameworks",
                    "systemLabels",
                    "remediation",
                    "entityId",
                    "entityIdType",
                    "entityType",
                    "entityLabels",
                    "entityName",
                    "payload",
                    "entityTypeByPlatform"
                ]
            },
            "FindingsFilterOperator": {
                "type": "string",
                "description": "eq: equal, !eq: not equal, gt: greater than, gte: greater than equal, lt: less than, lte: less than equal, has: field contains the value as a word, !has: not has, hasprefix: field contains the value as prefix, !hasprefix: not hasprefix, in: equal to one of the values, !in: not in, between: between values, !between: not between, has_any: field has any of the values, !has_any: not has_any, has_all: field has all the values, !has_all: not has_all",
                "enum": [
                    "eq",
                    "!eq",
                    "in",
                    "!in",
                    "between",
                    "!between",
                    "gt",
                    "gte",
                    "lt",
                    "lte",
                    "has",
                    "!has",
                    "hasprefix",
                    "!hasprefix",
                    "has_any",
                    "!has_any",
                    "has_all",
                    "!has_all"
                ]
            },
            "SearchFieldFilterViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "id",
                            "findingKey",
                            "createdTime",
                            "updatedTime",
                            "platform",
                            "environmentId",
                            "environmentExternalId",
                            "status",
                            "statusReason",
                            "isExcluded",
                            "origin",
                            "alertType",
                            "ruleId",
                            "ruleTitle",
                            "description",
                            "severity",
                            "frameworks",
                            "systemLabels",
                            "entityId",
                            "entityExternalId",
                            "entityType",
                            "entityLabels",
                            "entityName",
                            "region",
                            "entityTypeByPlatform"
                        ],
                        "description": "Field name."
                    },
                    "values": {
                        "oneOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "boolean"
                                }
                            }
                        ],
                        "minItems": 1,
                        "maxItems": 50
                    },
                    "operator": {
                        "$ref": "#/components/schemas/FindingsFilterOperator"
                    }
                },
                "required": [
                    "name",
                    "values",
                    "operator"
                ]
            },
            "SearchFreeTextViewModel": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "fieldNames": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 15,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ruleTitle",
                                "description",
                                "frameworks",
                                "systemLabels",
                                "entityType",
                                "entityLabels",
                                "entityName",
                                "region",
                                "entityTypeByPlatform"
                            ]
                        }
                    }
                },
                "required": [
                    "text",
                    "fieldNames"
                ]
            },
            "SearchSortViewModel": {
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "enum": [
                            "createdTime",
                            "updatedTime",
                            "platform",
                            "environmentId",
                            "environmentExternalId",
                            "organizationalUnitId",
                            "status",
                            "statusReason",
                            "isExcluded",
                            "origin",
                            "alertType",
                            "ruleId",
                            "ruleTitle",
                            "severity",
                            "entityExternalId",
                            "entityType",
                            "entityName",
                            "region",
                            "entityTypeByPlatform"
                        ]
                    },
                    "direction": {
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    }
                },
                "required": [
                    "fieldName",
                    "direction"
                ]
            },
            "FindingSearchRequestModel": {
                "type": "object",
                "properties": {
                    "resultSetSize": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 10000,
                        "default": 10000,
                        "description": "Number of items to return."
                    },
                    "filter": {
                        "maxItems": 15,
                        "description": "Filter objects. A logical AND operator is applied on the filter objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchFieldFilterViewModel"
                        }
                    },
                    "orgUnitIdsFilter": {
                        "uniqueItems": true,
                        "maxItems": 50,
                        "description": "List of organizational unit IDs filter.             Filters findings which their environment ID is under the organizational unit IDs or any of their descendants.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "freeText": {
                        "description": "Additional free text filter which applies on the specified fields names. A logical OR operator is applied on the fields values.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SearchFreeTextViewModel"
                            }
                        ]
                    },
                    "sort": {
                        "maxItems": 10,
                        "description": "Array of field names to sort by.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchSortViewModel"
                        }
                    },
                    "facets": {
                        "type": "array",
                        "uniqueItems": true,
                        "maxItems": 10,
                        "description": "Array of field names to facet by. Facets will return as additional data.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "platform",
                                "environmentId",
                                "environmentExternalId",
                                "organizationalUnitId",
                                "status",
                                "statusReason",
                                "isExcluded",
                                "origin",
                                "alertType",
                                "ruleId",
                                "ruleTitle",
                                "severity",
                                "entityId",
                                "entityExternalId",
                                "entityType",
                                "entityName",
                                "region",
                                "entityTypeByPlatform"
                            ]
                        }
                    },
                    "facetResultSetSize": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 250,
                        "default": 250,
                        "description": "Number of items per facet."
                    },
                    "includeFields": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "Array of field names to return. Only these fields will be returned.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "findingKey",
                                "createdTime",
                                "updatedTime",
                                "platform",
                                "environmentId",
                                "environmentExternalId",
                                "organizationalUnitId",
                                "status",
                                "statusReason",
                                "isExcluded",
                                "origin",
                                "alertType",
                                "ruleId",
                                "ruleTitle",
                                "ruleLogic",
                                "description",
                                "severity",
                                "frameworks",
                                "systemLabels",
                                "remediation",
                                "entityId",
                                "entityIdType",
                                "entityExternalId",
                                "entityType",
                                "entityLabels",
                                "entityName",
                                "region",
                                "entityTypeByPlatform"
                            ]
                        }
                    },
                    "totalCount": {
                        "type": "boolean",
                        "description": "Return total count of results. This value is affected by the requested filters."
                    }
                }
            },
            "FacetResultDataViewModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "count": {
                        "type": "number"
                    }
                },
                "required": [
                    "value",
                    "count"
                ]
            },
            "FacetsResultsViewModel": {
                "type": "object",
                "properties": {
                    "facet": {
                        "type": "string",
                        "enum": [
                            "platform",
                            "environmentId",
                            "environmentExternalId",
                            "organizationalUnitId",
                            "status",
                            "statusReason",
                            "isExcluded",
                            "origin",
                            "alertType",
                            "ruleId",
                            "ruleTitle",
                            "severity",
                            "entityId",
                            "entityExternalId",
                            "entityType",
                            "entityName",
                            "region",
                            "entityTypeByPlatform"
                        ]
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetResultDataViewModel"
                        }
                    }
                },
                "required": [
                    "facet",
                    "data"
                ]
            },
            "FindingSearchResultsViewModel": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FindingViewModel"
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetsResultsViewModel"
                        }
                    },
                    "totalCount": {
                        "type": "number"
                    }
                },
                "required": [
                    "results",
                    "totalCount"
                ]
            },
            "SearchGroupSortViewModel": {
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "enum": [
                            "platform",
                            "environmentId",
                            "environmentExternalId",
                            "organizationalUnitId",
                            "status",
                            "statusReason",
                            "isExcluded",
                            "origin",
                            "alertType",
                            "ruleId",
                            "ruleTitle",
                            "severity",
                            "entityId",
                            "entityExternalId",
                            "entityType",
                            "entityName",
                            "region",
                            "entityTypeByPlatform",
                            "count"
                        ]
                    },
                    "direction": {
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    }
                },
                "required": [
                    "fieldName",
                    "direction"
                ]
            },
            "FindingSearchGroupRequestModel": {
                "type": "object",
                "properties": {
                    "resultSetSize": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 10000,
                        "default": 10000,
                        "description": "Number of items to return."
                    },
                    "filter": {
                        "maxItems": 15,
                        "description": "Filter objects. A logical AND operator is applied on the filter objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchFieldFilterViewModel"
                        }
                    },
                    "orgUnitIdsFilter": {
                        "uniqueItems": true,
                        "maxItems": 50,
                        "description": "List of organizational unit IDs filter.             Filters findings which their environment ID is under the organizational unit IDs or any of their descendants.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "freeText": {
                        "description": "Additional free text filter which applies on the specified fields names. A logical OR operator is applied on the fields values.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SearchFreeTextViewModel"
                            }
                        ]
                    },
                    "groups": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 10,
                        "description": "Array of field names to group by.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "platform",
                                "environmentId",
                                "environmentExternalId",
                                "organizationalUnitId",
                                "status",
                                "statusReason",
                                "isExcluded",
                                "origin",
                                "alertType",
                                "ruleId",
                                "ruleTitle",
                                "severity",
                                "entityId",
                                "entityExternalId",
                                "entityType",
                                "entityName",
                                "region",
                                "entityTypeByPlatform"
                            ]
                        }
                    },
                    "sort": {
                        "maxItems": 10,
                        "description": "Array of field names to sort by.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchGroupSortViewModel"
                        }
                    }
                },
                "required": [
                    "groups"
                ]
            },
            "SearchAdvFilterViewModel": {
                "type": "object",
                "properties": {
                    "logicalOperator": {
                        "type": "string",
                        "enum": [
                            "and",
                            "or"
                        ],
                        "description": "Logical operator to apply on operands."
                    },
                    "operands": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/SearchFieldFilterViewModel"
                                },
                                {
                                    "$ref": "#/components/schemas/SearchAdvFilterViewModel"
                                }
                            ]
                        },
                        "minItems": 1,
                        "maxItems": 15,
                        "description": "Array of filter operands. An operand can either be an array of SearchFieldFilterViewModel or a recursive SearchFieldFilterViewModel."
                    }
                },
                "required": [
                    "logicalOperator",
                    "operands"
                ]
            },
            "FindingSearchAdvRequestModel": {
                "type": "object",
                "properties": {
                    "resultSetSize": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 10000,
                        "default": 10000,
                        "description": "Number of items to return."
                    },
                    "filter": {
                        "description": "Filter object. A recursive filter object which provides complex filters.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SearchAdvFilterViewModel"
                            }
                        ]
                    },
                    "orgUnitIdsFilter": {
                        "uniqueItems": true,
                        "maxItems": 50,
                        "description": "List of organizational unit IDs filter.             Filters findings which their environment ID is under the organizational unit IDs or any of their descendants.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sort": {
                        "maxItems": 10,
                        "description": "Array of field names to sort by.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchSortViewModel"
                        }
                    },
                    "facets": {
                        "type": "array",
                        "uniqueItems": true,
                        "maxItems": 10,
                        "description": "Array of field names to facet by. Facets will return as additional data.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "platform",
                                "environmentId",
                                "environmentExternalId",
                                "organizationalUnitId",
                                "status",
                                "statusReason",
                                "isExcluded",
                                "origin",
                                "alertType",
                                "ruleId",
                                "ruleTitle",
                                "severity",
                                "entityId",
                                "entityExternalId",
                                "entityType",
                                "entityName",
                                "region",
                                "entityTypeByPlatform"
                            ]
                        }
                    },
                    "facetResultSetSize": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 250,
                        "default": 250,
                        "description": "Number of items per facet."
                    },
                    "includeFields": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "Array of field names to return. Only these fields will be returned.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "findingKey",
                                "createdTime",
                                "updatedTime",
                                "platform",
                                "environmentId",
                                "environmentExternalId",
                                "organizationalUnitId",
                                "status",
                                "statusReason",
                                "isExcluded",
                                "origin",
                                "alertType",
                                "ruleId",
                                "ruleTitle",
                                "ruleLogic",
                                "description",
                                "severity",
                                "frameworks",
                                "systemLabels",
                                "remediation",
                                "entityId",
                                "entityIdType",
                                "entityExternalId",
                                "entityType",
                                "entityLabels",
                                "entityName",
                                "region",
                                "entityTypeByPlatform"
                            ]
                        }
                    },
                    "totalCount": {
                        "type": "boolean",
                        "description": "Return total count of results. This value is affected by the requested filters."
                    }
                }
            },
            "FindingSearchAdvGroupRequestModel": {
                "type": "object",
                "properties": {
                    "resultSetSize": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 10000,
                        "default": 10000,
                        "description": "Number of items to return."
                    },
                    "filter": {
                        "description": "Filter object. A recursive filter object which provides complex filters.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SearchAdvFilterViewModel"
                            }
                        ]
                    },
                    "orgUnitIdsFilter": {
                        "uniqueItems": true,
                        "maxItems": 50,
                        "description": "List of organizational unit IDs filter.             Filters findings which their environment ID is under the organizational unit IDs or any of their descendants.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groups": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 10,
                        "description": "Array of field names to group by.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "platform",
                                "environmentId",
                                "environmentExternalId",
                                "organizationalUnitId",
                                "status",
                                "statusReason",
                                "isExcluded",
                                "origin",
                                "alertType",
                                "ruleId",
                                "ruleTitle",
                                "severity",
                                "entityId",
                                "entityExternalId",
                                "entityType",
                                "entityName",
                                "region",
                                "entityTypeByPlatform"
                            ]
                        }
                    },
                    "sort": {
                        "maxItems": 10,
                        "description": "Array of field names to sort by.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchGroupSortViewModel"
                        }
                    }
                }
            },
            "FindingsPoliciesFilterOperator": {
                "type": "string",
                "description": "eq: equal, !eq: not equal, has: field contains the value as a word, !has: not has, hasprefix: field contains the value as prefix, !hasprefix: not hasprefix, in: equal to one of the values, !in: not in, has_any: field has any of the values, !has_any: not has_any, has_all: field has all the values, !has_all: not has_all",
                "enum": [
                    "eq",
                    "!eq",
                    "in",
                    "!in",
                    "has",
                    "!has",
                    "hasprefix",
                    "!hasprefix",
                    "has_any",
                    "!has_any",
                    "has_all",
                    "!has_all"
                ]
            },
            "FindingsPolicySearchFieldFilterViewModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "platform",
                            "environmentId",
                            "statusReason",
                            "isExcluded",
                            "origin",
                            "ruleId",
                            "severity",
                            "systemLabels",
                            "entityType",
                            "entityLabels",
                            "region",
                            "entityTypeByPlatform"
                        ],
                        "description": "Field name."
                    },
                    "values": {
                        "oneOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "boolean"
                                }
                            }
                        ],
                        "minItems": 1,
                        "maxItems": 50
                    },
                    "operator": {
                        "$ref": "#/components/schemas/FindingsPoliciesFilterOperator"
                    }
                },
                "required": [
                    "name",
                    "values",
                    "operator"
                ]
            },
            "FindingsPolicySearchAdvFilterViewModel": {
                "type": "object",
                "properties": {
                    "logicalOperator": {
                        "type": "string",
                        "enum": [
                            "and",
                            "or"
                        ],
                        "description": "Logical operator to apply on operands."
                    },
                    "operands": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/FindingsPolicySearchFieldFilterViewModel"
                                },
                                {
                                    "$ref": "#/components/schemas/FindingsPolicySearchAdvFilterViewModel"
                                }
                            ]
                        },
                        "minItems": 1,
                        "maxItems": 15,
                        "description": "Array of filter operands. An operand can either be an array of FindingsPolicySearchAdvFilterViewModel or a recursive FindingsPolicySearchFieldFilterViewModel."
                    }
                },
                "required": [
                    "logicalOperator",
                    "operands"
                ]
            },
            "FindingsPolicyViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/FindingsPolicySearchAdvFilterViewModel"
                    },
                    "triggers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "integrationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "orgUnitIdsFilter": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updated": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "triggers",
                    "integrationIds",
                    "created"
                ]
            },
            "FindingsPolicyRequestModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "triggers": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "description": "Filter on finding change type.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Created",
                                "Updated",
                                "Closed"
                            ]
                        }
                    },
                    "filter": {
                        "description": "Filter object. A recursive filter object which provides complex filters.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FindingsPolicySearchAdvFilterViewModel"
                            }
                        ]
                    },
                    "orgUnitIdsFilter": {
                        "uniqueItems": true,
                        "maxItems": 50,
                        "description": "List of organizational unit IDs filter.             Filters findings which their environment ID is under the organizational unit IDs or any of their descendants.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "integrationIds": {
                        "minItems": 1,
                        "maxItems": 10,
                        "uniqueItems": true,
                        "description": "List of integration IDs to invoke.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "triggers",
                    "integrationIds"
                ]
            },
            "FindingsPolicyCreationViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            }
        },
        "requestBodies": {
            "Account_PlanPlan": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.Models.AccountMarketplacePutViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-AccountMarketplacePutViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-AccountMarketplacePutViewModel"
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.Models.AgentSecurityGroupAttachDetachViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-AgentSecurityGroupAttachDetachViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-AgentSecurityGroupAttachDetachViewModel"
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.Shared.Permissions.MissingPermissionsIgnorableUpdateViewModelArray": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel"
                            }
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Shared-Permissions-MissingPermissionsIgnorableUpdateViewModel"
                            }
                        }
                    }
                },
                "description": "List of permissions to set ignore or restore flag to",
                "required": true
            },
            ".BL.Std.Services.OrganizationalUnit.UpdateIdViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                        }
                    }
                },
                "description": "The Guid ID of the Organizational Unit to attach to. Use 'null' to attach to the root Organizational Unit",
                "required": true
            },
            ".BL.Std.Services.OrganizationalUnit.MoveOrganizationalUnitViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-MoveOrganizationalUnitViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-MoveOrganizationalUnitViewModel"
                        }
                    }
                },
                "description": "The guids of the source organizational unit to detach from and the target organizational unit to attach to. Use null for root organizational unit.",
                "required": true
            },
            ".BL.Std.Services.OrganizationalUnit.UpdateIdViewModel2": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-UpdateIdViewModel"
                        }
                    }
                },
                "required": true
            },
            ".BL.Std.Services.OrganizationalUnit.AttachCloudAccountsViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-AttachCloudAccountsViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-AttachCloudAccountsViewModel"
                        }
                    }
                },
                "required": true
            },
            "Falconetix.Model.RuleEngine.Entities.AssessmentsRequestFilterViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-AssessmentsRequestFilterViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Falconetix-Model-RuleEngine-Entities-AssessmentsRequestFilterViewModel"
                        }
                    }
                },
                "description": "block that specifies the accounts and bundles",
                "required": true
            },
            ".Web.Api.Auth.AssumeRoleViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Auth-AssumeRoleViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Auth-AssumeRoleViewModel"
                        }
                    }
                },
                "required": true
            },
            ".BL.Std.Services.OrganizationalUnit.MoveOrganizationalUnitViewModel2": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-MoveOrganizationalUnitViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/BL-Std-Services-OrganizationalUnit-MoveOrganizationalUnitViewModel"
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.Models.CloudSecurityGroupServiceViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-CloudSecurityGroupServiceViewModel"
                        }
                    }
                },
                "description": "updated details for the service",
                "required": true
            },
            ".Web.Api.Models.CloudInstanceSecurityGroupAttachDetachViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-CloudInstanceSecurityGroupAttachDetachViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-CloudInstanceSecurityGroupAttachDetachViewModel"
                        }
                    }
                },
                "description": "information to update",
                "required": true
            },
            ".Web.Api.Models.ServicePortEditViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-ServicePortEditViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-ServicePortEditViewModel"
                        }
                    }
                },
                "required": true
            },
            "Finding_BulkDeleteAsyncIds": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    }
                },
                "description": "Finding IDs list (Guid)",
                "required": true
            },
            ".Web.Api.Compliance.Finding.SelectAllRequestViewModel_.Compliance.Models.ActionType_": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Compliance-Finding-SelectAllRequestViewModel_Compliance-Models-ActionType_"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Compliance-Finding-SelectAllRequestViewModel_Compliance-Models-ActionType_"
                        }
                    }
                },
                "description": "the filter selections - which findings to close",
                "required": true
            },
            ".Web.Api.Compliance.Finding.SearchRequestViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Compliance-Finding-SearchRequestViewModel"
                        }
                    }
                },
                "description": "the filter selections",
                "required": true
            },
            ".Web.Api.Compliance.Report.FindingsReportViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Compliance-Report-FindingsReportViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Compliance-Report-FindingsReportViewModel"
                        }
                    }
                },
                "required": true
            },
            ".MSP.Api.V1.ManagedAccountPutIconViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountPutIconViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/MSP-Api-V1-ManagedAccountPutIconViewModel"
                        }
                    }
                },
                "required": true
            },
            "Falconetix.Model.ProtectedAssetsReport.ProtectedAssetsReportViewModel_.Web.Api.ProtectedAsset.SearchRequestViewModel_": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Falconetix-Model-ProtectedAssetsReport-ProtectedAssetsReportViewModel_ProtectedAsset-SearchRequestViewModel_"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Falconetix-Model-ProtectedAssetsReport-ProtectedAssetsReportViewModel_ProtectedAsset-SearchRequestViewModel_"
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.Role.RoleViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Role-RoleViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Role-RoleViewModel"
                        }
                    }
                },
                "description": "The role info",
                "required": true
            },
            ".Web.Api.Models.AgentServiceViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Models-AgentServiceViewModel"
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.Models.ScopeViewModelArray": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Models-ScopeViewModel"
                            }
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Models-ScopeViewModel"
                            }
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.Serverless.ServerlessPutAccountViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Serverless-ServerlessPutAccountViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Serverless-ServerlessPutAccountViewModel"
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.Serverless.ServerlessExclusionModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Serverless-ServerlessExclusionModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Serverless-ServerlessExclusionModel"
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.Serverless.ServerlessRuleModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Serverless-ServerlessRuleModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Serverless-ServerlessRuleModel"
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.Serverless.ServerlessEnableFunctionFSPBlockBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Serverless-ServerlessEnableFunctionFSPBlockBody"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/Serverless-ServerlessEnableFunctionFSPBlockBody"
                        }
                    }
                },
                "required": true
            },
            ".Web.Api.UserAndRole.IamSafe.UserIamSafeAccountPutViewModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UserAndRole-IamSafe-UserIamSafeAccountPutViewModel"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/UserAndRole-IamSafe-UserIamSafeAccountPutViewModel"
                        }
                    }
                },
                "description": "The IAM entities to link",
                "required": true
            }
        },
        "securitySchemes": {
            "API_key_V2": {
                "type": "http",
                "scheme": "basic"
            },
            "Basic": {
                "type": "http",
                "description": "Provide Basic Authentiation",
                "name": "Authorization",
                "in": "header",
                "scheme": "basic"
            },
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            }
        }
    },
    "security": [
        {
            "Basic": []
        },
        {
            "Basic": []
        },
        {
            "Basic": []
        },
        {
            "Basic": []
        },
        {
            "Basic": []
        },
        {
            "Basic": []
        },
        {
            "Basic": []
        },
        {
            "Basic": []
        },
        {
            "Basic": []
        },
        {
            "Basic": []
        },
        {
            "Basic": []
        }
    ],
    "schemes": [
        "https"
    ]
}
