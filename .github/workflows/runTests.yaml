name: Run Tests
on:
  workflow_dispatch:
    inputs:
      useComplexSwagger:
        description: 'use complexSwagger.json'
        required: false
        default: 'true'
  push:
    branches:
      - master
  pull_request:
    branches: [ master ]
env:
  OPENAPI_TOOLKIT_TESTFILE: "${{ github.workspace }}/.github/complexSwagger.json"
jobs:
  prepare:
    runs-on: ubuntu-latest
    name: Prepare Environment
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
        
      - name: download swagger file
        run: curl https://petstore.swagger.io/v2/swagger.json -o $OPENAPI_TOOLKIT_TESTFILE
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.useComplexSwagger != 'true') || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, '+ complex ut')) }}

      - name: install dependencies
        run: rm -rf .npmrc && npm i

      - name: build 
        run: npm run build

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

  test-typescript-axios:
    name: Test Typescript Axios
    runs-on: ubuntu-latest
    needs: [ prepare ]
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm run test:typescript-axios

  test-typescript-models:
    name: Test Typescript Models
    runs-on: ubuntu-latest
    needs: [ prepare ]
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm run test:typescript-models

  test-typescript-reactquery:
    name: Test Typescript ReactQuery
    runs-on: ubuntu-latest
    needs: [ prepare ]
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm run test:typescript-react-query
        
  test-csharp:
    name: Test C#
    runs-on: ubuntu-latest
    needs: [ prepare ]
    env:
      DOTNET_NOLOGO: true
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: install dotnet
        uses: actions/setup-dotnet@v3
      - run: npm run test:csharp
        
  test-python:
    name: Test Python
    runs-on: ubuntu-latest
    needs: [ prepare ]
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: install python
        uses: actions/setup-python@v4
      - run: pip install pylint requests
      - run: npm run test:python
        
  test-go:
    name: Test Go
    runs-on: ubuntu-latest
    needs: [ prepare ]
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm run test:go
        continue-on-error: true
        
  test-go-server:
    name: Test Go Server
    runs-on: ubuntu-latest
    needs: [ prepare ]
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm run test:go-server
        continue-on-error: true
